bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  cc.addOp( "?   ",  false);  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  cc.addOp( "?   ",  false);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( "?   ",  false);	      cc.addOp(   "?   ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	26	None	replace
2	[BUG]  [BUGGY]  cc.addOp( ": ",  true);  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  cc.addOp( ": ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ": ",  true);	      cc.addOp(   "?   ",    true);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	26	None	replace
3	[BUG]  [BUGGY]  cc.addOp( ": ".equals(p));  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  cc.addOp( ": ".equals(p));  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ": ".equals(p));	      cc.addOp(   "?   ",    true);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	26	None	replace
4	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Context  rhsContext  =  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Context  rhsContext  =  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Context  rhsContext  =  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	18	None	add
5	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	18	None	add
6	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	18	None	add
7	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	18	None	add
8	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Preconditions.checkState(childCount  ==  4);  Context  rhsContext  =  context;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	18	None	add
9	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Context  rhsContext  =  context.getCurrentStructure();  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Context  rhsContext  =  context.getCurrentStructure();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Context  rhsContext  =  context.getCurrentStructure();	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	18	None	add
10	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	23	5	add
11	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  1);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  1);	  	compilable	  [FE]  IllegalStateException  	23	5	add
12	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]      IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	23	None	add
13	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  1);  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Context.checkState(childCount  ==  1);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    Context.checkState(childCount  ==  1);	  	non-compiled	[CE]  cannot  find  symbol	23	None	add
14	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    Integer  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	23	None	add
15	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	23	None	add
16	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  1);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	23	None	add
17	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp(   "?   ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        cc.addOp(   "?   ",    true);    cc.addOp(   "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	25	5	add
18	[BUG]  [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp(   "?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp(   "?   ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        cc.addOp(   "?   ",    true);    cc.addOp(   "?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	25	5	add
19	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ".?   ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        cc.addOp(   "?   ",    true);    cc.addOp( ".?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	25	5	add
20	[BUG]  [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ".?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ".?   ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        cc.addOp(   "?   ",    true);    cc.addOp( ".?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	25	5	add
21	[BUG]  [BUGGY]      cc.addOp(   "?   ",  true);  Context  rhsContext  =  Context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  Context  rhsContext  =  Context.OTHER;  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        cc.addOp(   "?   ",    true);    Context  rhsContext  =  Context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	25	None	add
22	[BUG]  [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp('?',  true);  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp('?',  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        cc.addOp(   "?   ",    true);    cc.addOp('?',  true);	  	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	25	None	add
23	[BUG]  [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ",  true);  [CE]  unclosed  string  literal  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        cc.addOp(   "?   ",    true);    cc.addOp( ",  true);	  	non-compiled	[CE]  unclosed  string  literal	25	None	add
24	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  [CE]  cannot  find  symbol  rhsContext  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Preconditions.checkState(childCount  ==  0);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);	      Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	11	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  4);  [CE]  cannot  find  symbol  rhsContext  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Preconditions.checkState(childCount  ==  4);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  4);	      Preconditions.checkState(childCount    ==    3);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	11	None	replace
26	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Context  rhsContext  =  Context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    Context  rhsContext  =  Context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
27	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
28	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  Context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
29	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    Context  rhsContext  =  Context.STATEMENT;  addExpr(first,  p  +  1,  context);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
30	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Integer  rhsContext  =  Context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Integer  rhsContext  =  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    Integer  rhsContext  =  Context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
31	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  int  rhsContext  =  Context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  int  rhsContext  =  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    int  rhsContext  =  Context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
32	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(context.getFirstChild());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getFirstChild());	  Context    rhsContext    =    new    Context(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
33	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getLastChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(n.getLastChild());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getLastChild());	  Context    rhsContext    =    new    Context(n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	7	None	replace
34	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p);  [CE]  enum  types  may  not  be  instantiated  [FE]                    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  p);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild(),  p);	  Context    rhsContext    =    new    Context(n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	7	None	replace
35	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  context);  [CE]  enum  types  may  not  be  instantiated  [FE]                      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild(),  context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild(),  context);	  Context    rhsContext    =    new    Context(n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	7	None	replace
36	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(first.getFirstChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(first.getFirstChild());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(first.getFirstChild());	  Context    rhsContext    =    new    Context(n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	7	None	replace
37	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT.createContext();  [CE]  cannot  find  symbol  STATEMENT  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  STATEMENT.createContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT.createContext();	  Context    rhsContext    =    context.createContext();    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	4	None	replace
38	[BUG]  [BUGGY]  Context  rhsContext  =  n.createContext();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  n.createContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  n.createContext();	  Context    rhsContext    =    context.createContext();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
39	[BUG]  [BUGGY]  Context  rhsContext  =  createContext();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  createContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext();	  Context    rhsContext    =    context.createContext();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
40	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  createContext(n);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n);	  Context    rhsContext    =    context.createContext();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
41	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT;  [CE]  cannot  find  symbol  STATEMENT  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT;	  Context    rhsContext    =    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	6	None	replace
42	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(context.getJSDocInfo());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getJSDocInfo());	  Context    rhsContext    =    new    Context(n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
43	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  context);  [CE]  enum  types  may  not  be  instantiated  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  context);	  Context    rhsContext    =    new    Context(n.getJSDocInfo());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	28	None	replace
44	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getJSDocInfo());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getJSDocInfo());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context.getJSDocInfo());	  Context    rhsContext    =    new    Context(n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
45	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo());  [CE]  enum  types  may  not  be  instantiated  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getJSDocInfo());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getJSDocInfo());	  Context    rhsContext    =    new    Context(n.getJSDocInfo());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	28	None	replace
46	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  parent);  [CE]  cannot  find  symbol  parent  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo(),  parent);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo(),  parent);	  Context    rhsContext    =    new    Context(n.getJSDocInfo());    	non-compiled	[CE]  cannot  find  symbol  parent	28	None	replace
47	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  |  Context.OTHER;	  Context    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	2	None	replace
48	[BUG]  [BUGGY]  Context  rhsContext  =  Context.REGEXP;  [CE]  cannot  find  symbol  REGEXP  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.REGEXP;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.REGEXP;	  Context    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  cannot  find  symbol  REGEXP	2	None	replace
49	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT  +  1;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT  +  1;	  Context    rhsContext    =    Context.STATEMENT;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	2	None	replace
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
51	[BUG]  [BUGGY]  Context  rhsContext  =  context.STATEMENT;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.STATEMENT;	  Context    rhsContext    =    Context.STATEMENT;    	compilable	  [FE]  ComparisonFailure  	2	1	replace
52	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(context);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContext(context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(context);	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
53	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(p);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContext(p);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(p);	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
54	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextInstance();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContextInstance();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextInstance();	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
55	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContextForNoDeclaration();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoDeclaration();	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
56	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Context  rhsContext  =  context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
57	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Context  rhsContext  =  context.OTHER;  addExpr(first,  p  +  1,  context);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
58	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Integer  rhsContext  =  context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Integer  rhsContext  =  context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Integer  rhsContext  =  context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
59	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Context  rhsContext  =  context.OTHER;  setExpr(first,  p  +  1,  context);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
60	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Context  rhsContext  =  context.OTHER;  this.addOp( "?   ",  true);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
61	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getContextForNoChild(n);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n);	  Context    rhsContext    =    getContextForNoChild(context);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
62	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  context);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getContextForNoChild(n,  context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(n,  context);	  Context    rhsContext    =    getContextForNoChild(context);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
63	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNonChild(context);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getContextForNonChild(context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNonChild(context);	  Context    rhsContext    =    getContextForNoChild(context);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
64	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  p);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  p);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  p);	  Context    rhsContext    =    getContextForNoChild(context);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
65	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentContext().getCurrentContext();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext().getCurrentContext();	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
66	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext(context);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentContext(context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext(context);	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
67	[BUG]  [BUGGY]  Context  cc  =  getCurrentContext().getRootContext();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentContext().getRootContext();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContext().getRootContext();	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
68	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextInstance();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentContextInstance();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextInstance();	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
69	[BUG]  [BUGGY]  Context  rhsContext  =  n.getCurrentContext();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  n.getCurrentContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  n.getCurrentContext();	  Context    rhsContext    =    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
70	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
71	[BUG]  [BUGGY]  Context  rhsContext  =  STATEMENT.getCurrentContext();  [CE]  cannot  find  symbol  STATEMENT  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  STATEMENT.getCurrentContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  STATEMENT.getCurrentContext();	  Context    rhsContext    =    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	3	None	replace
72	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.getCurrentContext()  :  STATEMENT.getCurrentContext();	  Context    rhsContext    =    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
73	[BUG]  [BUGGY]  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  p  +  1,  context);	      Context    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	12	None	replace
74	[BUG]  [BUGGY]  int  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);	      Context    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  incompatible  types	12	None	replace
75	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	21	5	add
76	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	21	5	add
77	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]      IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	21	None	add
78	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  2);  [CE]  cannot  find  symbol  [FE]        IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  Context.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    Context.checkState(childCount  ==  2);	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
79	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    Integer  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	21	None	add
80	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]            IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	21	None	add
81	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  2);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	21	None	add
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
83	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  Preconditions.checkState(childCount  ==  3);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  ComparisonFailure  	10	1	add
84	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  3);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  Context.checkState(childCount  ==  3);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    Context.checkState(childCount  ==  3);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
85	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	10	None	add
86	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    Integer  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	10	None	add
87	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  Context.OTHER;  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    Context  rhsContext  =  Context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	10	None	add
88	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT  :  context;  [CE]  cannot  find  symbol  STATEMENT  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =(context  ==  null)?  STATEMENT  :  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  STATEMENT  :  context;	  Context    rhsContext    =    context;    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	19	None	replace
89	[BUG]  [BUGGY]  Context  rhsContext  =  getContext();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContext();	  Context    rhsContext    =    context;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
90	[BUG]  [BUGGY]  Node  first  =  n.getLastChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Node  first  =  n.getLastChild();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getLastChild();	      Node    first    =    n.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	20	None	replace
91	[BUG]  [BUGGY]  Node  first  =  context.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Node  first  =  context.getFirstChild();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  context.getFirstChild();	      Node    first    =    n.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	20	None	replace
92	[BUG]  [BUGGY]  Node  first  =  n.getNext();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Node  first  =  n.getNext();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getNext();	      Node    first    =    n.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	20	None	replace
93	[BUG]  [BUGGY]  Node  first  =  node.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Node  first  =  node.getFirstChild();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  node.getFirstChild();	      Node    first    =    n.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	20	None	replace
94	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	14	5	add
95	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	14	5	add
96	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context  rhsContext  =  Context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	14	None	add
97	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  int  childCount  =  NodeUtil.precedence(type);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  int  childCount  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    int  childCount  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	14	None	add
98	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	14	5	add
99	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]          junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	14	5	add
100	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
101	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	14	5	add
102	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]              junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Preconditions.checkState(childCount  ==  3);  addExpr(last,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	14	5	add
103	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type);	      	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	8	None	replace
104	[BUG]  [BUGGY]  int  first  =  NodeUtil.precedence(type);  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]                    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  first  =  NodeUtil.precedence(type);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  first  =  NodeUtil.precedence(type);	      	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	8	None	replace
105	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Integer  p  =  NodeUtil.precedence(childCount);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(childCount);	      	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	8	None	replace
106	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR  |  Context.OTHER;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	16	None	replace
107	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER  |  Context.START_OF_EXPR;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	16	None	replace
108	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.END_OF_EXPR;  [CE]  cannot  find  symbol  END_OF_EXPR  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.END_OF_EXPR;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.END_OF_EXPR;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  cannot  find  symbol  END_OF_EXPR	16	None	replace
109	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR  +  1;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR  +  1;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR  +  1;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	16	None	replace
110	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  Context.START_OF_EXPR;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  	16	3	replace
111	[BUG]  [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.START_OF_EXPR;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.START_OF_EXPR;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[{a:1}:{a:3  	16	3	replace
112	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(childCount);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(childCount);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(childCount);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
113	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  childCount);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type,  childCount);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  childCount);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
114	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type,  1);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  1);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
115	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(context);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
116	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  false);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type,  false);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  false);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
117	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type)-  1;  addExpr(first,  p  +  1,  context);	      int    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	13	None	replace
118	[BUG]  [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Integer  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Integer  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	      int    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	13	None	replace
119	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type)+  1;  addExpr(first,  p  +  1,  context);	      int    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	13	None	replace
120	[BUG]  [BUGGY]  Context.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);	      Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
121	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  1);  addExpr(first,  p  +  1,  context);	      Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	15	None	replace
122	[BUG]  [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]        junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  childCount  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	      Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	15	None	replace
123	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	14	None	add
124	[BUG]  [BUGGY]  Context  cc  =  getCurrentStatementContext();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentStatementContext();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentStatementContext();	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
125	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextIn();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentContextIn();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextIn();	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
126	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator();	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
127	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(type);  [CE]  cannot  find  symbol  rhsContext  [FE]                  ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  firstCount  =  NodeUtil.precedence(type);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(type);	      	non-compiled	[CE]  cannot  find  symbol  rhsContext	8	None	replace
128	[BUG]  [BUGGY]  int  firstCount  =  NodeUtil.precedence(p);  [CE]  cannot  find  symbol  rhsContext  [FE]                    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  firstCount  =  NodeUtil.precedence(p);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  firstCount  =  NodeUtil.precedence(p);	      	non-compiled	[CE]  cannot  find  symbol  rhsContext	8	None	replace
129	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getFirstChild());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(n,  context.getFirstChild());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n,  context.getFirstChild());	  Context    rhsContext    =    new    Context(n.getFirstChild());    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
130	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ",?   ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        cc.addOp(   "?   ",    true);    cc.addOp( ",?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	25	5	add
131	[BUG]  [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ",?   ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp( ",?   ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        cc.addOp(   "?   ",    true);    cc.addOp( ",?   ",  true);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	25	5	add
132	[BUG]  [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp('?   ",  true);  [CE]  unclosed  character  literal  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      cc.addOp(   "?   ",  true);  cc.addOp('?   ",  true);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        cc.addOp(   "?   ",    true);    cc.addOp('?   ",  true);	  	non-compiled	[CE]  unclosed  character  literal	25	None	add
133	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().getNext();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Node  first  =  n.getFirstChild().getNext();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getFirstChild().getNext();	      Node    first    =    n.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	20	None	replace
134	[BUG]  [BUGGY]  Node  first  =  n.getFirstChild().cloneTree();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Node  first  =  n.getFirstChild().cloneTree();  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Node  first  =  n.getFirstChild().cloneTree();	      Node    first    =    n.getFirstChild();    	non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	20	None	replace
135	[BUG]  [BUGGY]  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  [CE]  cannot  find  symbol  rhsContext  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);	      int    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	13	None	replace
136	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  n);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  n);	  Context    rhsContext    =    getContextForNoChild(context);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
137	[BUG]  [BUGGY]  Context  rhsContext  =  context.createContext(n);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.createContext(n);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.createContext(n);	  Context    rhsContext    =    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
138	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.OTHER;  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =(context  ==  null)?  1  :  context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  1  :  context.OTHER;	  Context    rhsContext    =    context.OTHER;    	non-compiled	[CE]  incompatible  types	6	None	replace
139	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;	  Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  ComparisonFailure  	6	1	replace
140	[BUG]  [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context  ==  null)?  context.OTHER  :  context;	  Context    rhsContext    =    context.OTHER;    	compilable	  [FE]  ComparisonFailure  	6	1	replace
141	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    Integer  p  =  NodeUtil.precedence(childCount  ==  2);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	21	None	add
142	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]      IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  2);  Integer  p  =  NodeUtil.precedence(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    2);    Integer  p  =  NodeUtil.precedence(childCount  ==  2);  Preconditions.checkState(childCount  ==  2);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	21	None	add
143	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount  ==  3);  Context  rhsContext  =  context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
144	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount  ==  2);  Context  rhsContext  =  context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
145	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  context.OTHER;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
146	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    Preconditions.checkState(childCount  ==  1);  Context  rhsContext  =  Context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
147	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Node  rhsContext  =  Context.STATEMENT;  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  Node  rhsContext  =  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    Context.STATEMENT;    Node  rhsContext  =  Context.STATEMENT;	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	1	None	add
148	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context();  [CE]  enum  types  may  not  be  instantiated  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context();	  Context    rhsContext    =    context;    	non-compiled	[CE]  enum  types  may  not  be  instantiated	19	None	replace
149	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(context);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  createContext(context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(context);	  Context    rhsContext    =    context.createContext();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
150	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  context);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
151	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(last);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(last);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(last);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
152	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(first);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(first);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(first);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
153	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  1);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Integer  p  =  NodeUtil.precedence(childCount  ==  1);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    Integer  p  =  NodeUtil.precedence(childCount  ==  1);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	23	None	add
154	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    Integer  p  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	10	None	add
155	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)  [FE]      ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    int  childCount  =  NodeUtil.precedence(type);  Preconditions.checkState(childCount  ==  3);	  	non-compiled	[CE]  variable  childCount  is  already  defined  in  method  add(Node,Context)	10	None	add
156	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  3)  {  Context  rhsContext  =  context;  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Preconditions.checkState(childCount  ==  3)  {  Context  rhsContext  =  context;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Preconditions.checkState(childCount  ==  3)  {  Context  rhsContext  =  context;	  	non-compiled	[CE]  ';'  expected	18	None	add
157	[BUG]  [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  context.getCurrentContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =(context!=  null)?  context.getCurrentContext()  :  context.getCurrentContext();	  Context    rhsContext    =    context.getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
158	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentStatementContext();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentStatementContext();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentStatementContext();	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
159	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext(n);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContext(n);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext(n);	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
160	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNode();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContextForNode();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNode();	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  0);  addExpr(first,  p  +  1,  context);	      Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	15	None	replace
162	[BUG]  [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  context);  [CE]  cannot  find  symbol  rhsContext  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Preconditions.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Preconditions.checkState(childCount  ==  2);  addExpr(first,  p  +  1,  context);	      Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  cannot  find  symbol  rhsContext	15	None	replace
163	[BUG]  [BUGGY]  Context  rhsContext  =  createContext(n,  context);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  createContext(n,  context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  createContext(n,  context);	  Context    rhsContext    =    context.createContext();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
164	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator();	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
165	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContextForNoInOperator(context);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextForNoInOperator(context);	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
166	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContextIn();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getCurrentContextIn();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContextIn();	  Context    rhsContext    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
167	[BUG]  [BUGGY]  char  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]              ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  char  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	char  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	      int    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	13	None	replace
168	[BUG]  [BUGGY]  boolean  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  boolean  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	boolean  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);	      int    p    =    NodeUtil.precedence(type);    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	13	None	replace
169	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER);  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  ';'  expected	9	None	replace
170	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type),  Context.OTHER;  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type),  Context.OTHER;	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  ';'  expected	9	None	replace
171	[BUG]  [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	int  p  =  NodeUtil.precedence(type,  Preconditions.OTHER);	      int    p    =    NodeUtil.precedence(type);    	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	9	None	replace
172	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  STATEMENT);  [CE]  cannot  find  symbol  STATEMENT  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  getContextForNoChild(context,  STATEMENT);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context,  STATEMENT);	  Context    rhsContext    =    getContextForNoChild(context);    	non-compiled	[CE]  cannot  find  symbol  STATEMENT	27	None	replace
173	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.STATEMENT;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]          ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.STATEMENT;  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.STATEMENT;	  Context    rhsContext    =    Context.OTHER    |    Context.START_OF_EXPR;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	16	None	replace
174	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  int  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]    junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    int  p  =  NodeUtil.precedence(type);	  	non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	14	None	add
175	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  	14	5	add
176	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  [FE]      junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    3);    addExpr(first,    p    +    1,    context);    cc.addOp( "?   ",  true);  addExpr(first,  p  +  1,  context);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x?[]{a:1}:{a:3  	14	5	add
177	[BUG]  [BUGGY]  cc.addOp( ": ");  [CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  cc.addOp( ": ");  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	cc.addOp( ": ");	      Context    rhsContext    =    Context.OTHER;    addExpr(first,    p    +    1,    context);    	non-compiled	[CE]  method  addOp  in  class  CodeConsumer  cannot  be  applied  to  given  types;	12	None	replace
178	[BUG]  [BUGGY]  Context  rhsContext  =  context;  Context  rhsContext  =  context.getCurrentScope();  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context;  Context  rhsContext  =  context.getCurrentScope();  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context;    Context  rhsContext  =  context.getCurrentScope();	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	18	None	add
179	[BUG]  [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  cc  =  getCurrentContextForNoInOperator(context);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  cc  =  getCurrentContextForNoInOperator(context);	      Context    cc    =    getCurrentContext();    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
180	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context.getRootContext());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(context.getRootContext());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context.getRootContext());	  Context    rhsContext    =    context.OTHER;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
181	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	23	5	add
182	[BUG]  [BUGGY]      Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]    IllegalStateException    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]      Preconditions.checkState(childCount  ==  1);  Preconditions.checkState(childCount  ==  2);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	        Preconditions.checkState(childCount    ==    1);    Preconditions.checkState(childCount  ==  2);	  	compilable	  [FE]  IllegalStateException  	23	5	add
183	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  context.OTHER;  Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context    rhsContext    =    context.OTHER;    Context  rhsContext  =  context.OTHER;  this.cc.addOp( "?   ",  true);	  	non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	5	None	add
184	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild());  [CE]  enum  types  may  not  be  instantiated  [FE]                ComparisonFailure    [CONTEXT]    cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);    [BUGGY]  Context  rhsContext  =  new  Context(context,  n.getFirstChild());  [BUGGY]    addExpr(first,  p  +  1,  context);  cc.addOp(   "?   ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp(   ":   ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(context,  n.getFirstChild());	  Context    rhsContext    =    new    Context(n.getFirstChild());    	non-compiled	[CE]  enum  types  may  not  be  instantiated	7	None	replace
