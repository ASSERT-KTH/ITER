bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  Context.STATEMENT;	Context  rhsContext  =  Context.OTHER;  	compilable	  [FE]  ComparisonFailure  	32	1	replace
2	[BUG]  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  Context.STATEMENT;  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.STATEMENT;	Context  rhsContext  =  Context.OTHER;  	compilable	  [FE]  ComparisonFailure  	32	1	replace
3	[BUG]  [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  context.getCurrentContext();  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.getCurrentContext();	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  cannot  find  symbol	32	None	replace
4	[BUG]  [BUGGY]  Context  rhsContext  =  context.createContext();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  context.createContext();  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.createContext();	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  cannot  find  symbol	32	None	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  context.OTHER;  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  context.OTHER;	Context  rhsContext  =  Context.OTHER;  	compilable	  [FE]  ComparisonFailure  	32	1	replace
6	[BUG]  [BUGGY]  Context  rhsContext  =  context.OTHER;  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  context.OTHER;  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context.OTHER;	Context  rhsContext  =  Context.OTHER;  	compilable	  [FE]  ComparisonFailure  	32	1	replace
7	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild());  [CE]  enum  types  may  not  be  instantiated  [FE]            ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  new  Context(n.getFirstChild());  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getFirstChild());	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
8	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  rhsContext  [FE]              ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	  	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  cannot  find  symbol  rhsContext	32	None	replace
9	[BUG]  [BUGGY]    int  p  =  NodeUtil.precedence(type);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    int  p  =  NodeUtil.precedence(type);		non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	33	None	add
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  3);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	    Preconditions.checkState(childCount  ==  3);		compilable	  [FE]  ComparisonFailure  	33	1	add
11	[BUG]  [BUGGY]    Preconditions.checkState(childCount  ==  3);  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  3);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    Preconditions.checkState(childCount  ==  3);		compilable	  [FE]  ComparisonFailure  	33	1	add
12	[BUG]  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)  [FE]        ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);		non-compiled	[CE]  variable  rhsContext  is  already  defined  in  method  add(Node,Context)	33	None	add
13	[BUG]  [BUGGY]    int  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [CE]  variable  p  is  already  defined  in  method  add(Node,Context)  [FE]          ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    int  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    int  p  =  NodeUtil.precedence(type);  addExpr(first,  p  +  1,  context);		non-compiled	[CE]  variable  p  is  already  defined  in  method  add(Node,Context)	33	None	add
14	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]            ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	33	5	add
15	[BUG]  [BUGGY]    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  [FE]            ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    Preconditions.checkState(childCount  ==  3);  addExpr(first,  p  +  1,  context);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=x[]?{a:1}:{a:3  	33	5	add
16	[BUG]  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]      ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR;  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  Context.OTHER  |  Context.START_OF_EXPR;	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	32	None	replace
17	[BUG]  [BUGGY]  Context  rhsContext  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  getCurrentContext();  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getCurrentContext();	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  cannot  find  symbol	32	None	replace
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  context;  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	Context  rhsContext  =  context;	Context  rhsContext  =  Context.OTHER;  	compilable	  [FE]  ComparisonFailure  	32	1	replace
19	[BUG]  [BUGGY]  Context  rhsContext  =  context;  [FE]  ComparisonFailure  [FE]          ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  context;  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  context;	Context  rhsContext  =  Context.OTHER;  	compilable	  [FE]  ComparisonFailure  	32	1	replace
20	[BUG]  [BUGGY]    Node  first  =  n.getFirstChild();  [CE]  variable  first  is  already  defined  in  method  add(Node,Context)  [FE]    ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Node  first  =  n.getFirstChild();  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    Node  first  =  n.getFirstChild();		non-compiled	[CE]  variable  first  is  already  defined  in  method  add(Node,Context)	33	None	add
21	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]      ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  2);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	    Preconditions.checkState(childCount  ==  2);		compilable	  [FE]  IllegalStateException  	33	5	add
22	[BUG]  [BUGGY]    Preconditions.checkState(childCount  ==  2);  [FE]  IllegalStateException  [FE]      ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  2);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    Preconditions.checkState(childCount  ==  2);		compilable	  [FE]  IllegalStateException  	33	5	add
23	[BUG]  [BUGGY]  [FE]  IllegalStateException  [FE]        ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  1);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	    Preconditions.checkState(childCount  ==  1);		compilable	  [FE]  IllegalStateException  	33	5	add
24	[BUG]  [BUGGY]    Preconditions.checkState(childCount  ==  1);  [FE]  IllegalStateException  [FE]        ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Preconditions.checkState(childCount  ==  1);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    Preconditions.checkState(childCount  ==  1);		compilable	  [FE]  IllegalStateException  	33	5	add
25	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]          ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    cc.addOp( "? ",  true);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	add	    cc.addOp( "? ",  true);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	33	5	add
26	[BUG]  [BUGGY]    cc.addOp( "? ",  true);  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  [FE]          ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    cc.addOp( "? ",  true);  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    cc.addOp( "? ",  true);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<var  foo=[]x?{a:1}:{a:3  	33	5	add
27	[BUG]  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  getContextForNoChild(context);  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  getContextForNoChild(context);	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  cannot  find  symbol	32	None	replace
28	[BUG]  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo());  [CE]  enum  types  may  not  be  instantiated  [FE]      ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]  Context  rhsContext  =  new  Context(n.getJSDocInfo());  [BUGGY]  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	Context  rhsContext  =  new  Context(n.getJSDocInfo());	Context  rhsContext  =  Context.OTHER;  	non-compiled	[CE]  enum  types  may  not  be  instantiated	32	None	replace
29	[BUG]  [BUGGY]    Context  cc  =  getCurrentContext();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  cc.addOp(NodeUtil.opToStrNoFail(type),  false);  addExpr(first,  NodeUtil.precedence(type),  Context.OTHER);  }  break;  }  case  Token.HOOK:  {  Preconditions.checkState(childCount  ==  3);  int  p  =  NodeUtil.precedence(type);  [BUGGY]    Context  cc  =  getCurrentContext();  [BUGGY]  Context  rhsContext  =  Context.OTHER;  addExpr(first,  p  +  1,  context);  cc.addOp( "? ",  true);  addExpr(first.getNext(),  1,  rhsContext);  cc.addOp( ": ",  true);  addExpr(last,  1,  rhsContext);  break;  }  case  Token.REGEXP:  if  (!first.isString()  ||  [CLASS]  CodeGenerator  Context  [METHOD]  add  [RETURN_TYPE]  void  Node  n  Context  context  [VARIABLES]  Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  LanguageMode  languageMode  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  preferLineBreaks  preferSingleQuotes  preserveBlock  trustedStrings  double  d  Node  body  c  catchblock  first  fn  last  n  next  parameters  CodeConsumer  cc  consumer  String  GT_ESCAPED  LT_ESCAPED  identifier  key  name  o  opstr  regexp  str  Map  escapedJsStrings  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  	projects/Closure123/src/com/google/javascript/jscomp/CodeGenerator.java	0.4472135954999579	285	285	1	replace	    Context  cc  =  getCurrentContext();		non-compiled	[CE]  cannot  find  symbol	33	None	add
