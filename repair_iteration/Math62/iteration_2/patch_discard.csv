increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.minEvaluations  =  0;  ,this.starts = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  Math.max(maxEvaluations,  starts);  ,this.totalEvaluations = Math.min(totalEvaluations, starts + 1);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  Math.max(maxEvaluations,  starts);  ,this.totalEvaluations = Math.min(totalEvaluations, starts);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  Math.max(maxEvaluations,  starts);  ,this.totalEvaluations = Math.min(totalEvaluations, starts - 1);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  maxEvaluations;  ,this.totalEvaluations = 0;
increase failing tests,155,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, optima  =  new  UnivariateRealPointValuePair[min];  ,optima = new UnivariateRealPointValuePair[maxEvaluations];
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.totalEvaluations  =  0;  ,this.maxEvaluations = 1; this.totalEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.totalEvaluations  =  0;  ,this.maxEvaluations = 1; this.totalEvaluations = 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 1; totalEvaluations = 0;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 0; totalEvaluations = 0;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 2; totalEvaluations = 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 2; totalEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  -  1;  ,this.maxEvaluations = starts; this.totalEvaluations = totalEvaluations - 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  -  1;  ,this.maxEvaluations = maxEvaluations - 1; this.totalEvaluations = totalEvaluations - 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  -  1;  ,this.maxEvaluations = totalEvaluations; this.totalEvaluations = totalEvaluations - 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  getStarts(),  maxEvaluations;  ,this.maxEvaluations = Math.max(0, maxEvaluations);
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  getStarts(),  maxEvaluations;  ,this.maxEvaluations = Math.max(1, maxEvaluations);
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  getStarts(),  maxEvaluations;  ,this.maxEvaluations = Math.max(10, maxEvaluations);
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  getStarts(),  maxEvaluations;  ,this.maxEvaluations = Math.max(3, maxEvaluations);
increase failing tests,155,replace, [FE] TooManyEvaluationsException testQuinticMin, int  starts  =  f.getEnd();  ,setMaxEvaluations(-starts);
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  starts;  ,this.maxEvaluations = starts; this.totalEvaluations = starts;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  starts;  ,this.maxEvaluations = totalEvaluations; this.totalEvaluations = starts;
increase failing tests,75,replace, [FE] AssertionError testQuinticMin, super();  this.maxEvaluations  =  maximumEvaluations  +  1;  ,this.starts = totalEvaluations + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.maxEvaluations  =  Math.max(maxEvaluations,  generator.starts);  ,this.maxEvaluations = Math.max(maxEvaluations, starts);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.maxEvaluations  =  Math.max(maxEvaluations,  generator.starts);  ,this.maxEvaluations = Math.max(maxEvaluations, totalEvaluations);
increase failing tests,75,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.trimmerEvaluations  =  totalEvaluations;  ,this.maxEvaluations = maxEvaluations; this.starts = totalEvaluations;
increase failing tests,155,replace, [FE] ConvergenceException testQuinticMin, int  starts  =  min  -  startValue  +  Math.min(max,  startValue);  ,double starts = min - startValue + Math.min(max, startValue);
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  startValues  =  getStarts();  ,this.totalEvaluations = starts + 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  startValues  =  getStarts();  ,this.totalEvaluations = totalEvaluations + 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  startValues  =  getStarts();  ,this.totalEvaluations = totalEvaluations / 1;
increase failing tests,74,replace, [FE] AssertionError testQuinticMin, this.starts  =  starts  /  1;  ,this.starts = starts / 2;
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,totalEvaluations    =    7;    totalEvaluations  =  4;  this.starts = totalEvaluations + 1;
increase failing tests,146,replace, [FE] StackOverflowError testQuinticMin, return  optimize(f,  min,  max,  3);  ,return optimize(f, goal, min, max);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.maxEvaluations  =  totalEvaluations;  ,this.maxEvaluations = starts; this.maxEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.maxEvaluations  =  totalEvaluations;  ,this.maxEvaluations = totalEvaluations; this.maxEvaluations = maxEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.maxEvaluations  =  0;  ,this.maxEvaluations = 0; this.maxEvaluations = 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.maxEvaluations  =  0;  ,this.maxEvaluations = 1; this.maxEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.maxEvaluations  =  0;  ,this.maxEvaluations = 0; this.maxEvaluations = 2;
increase failing tests,155,replace, [FE] AssertionError testQuinticMin, totalEvaluations  =  5;  int  starts  =  Math.min(startValue,  max)+  1;  ,totalEvaluations = 5; double starts = Math.min(startValue, max)+ 1;
increase failing tests,74,replace, [FE] AssertionError testQuinticMin, this.starts  =  starts  +  2;  ,this.starts = starts * 2;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  /  2;  ,this.maxEvaluations = maxEvaluations + 1; this.totalEvaluations = totalEvaluations / 2;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  /  2;  ,this.maxEvaluations = maxEvaluations / 2; this.totalEvaluations = totalEvaluations / 2;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  /  2;  ,this.maxEvaluations = maxEvaluations + 1; this.totalEvaluations = totalEvaluations * 2;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  /  2;  ,this.maxEvaluations = totalEvaluations + 1; this.totalEvaluations = totalEvaluations / 2;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, this.maxEvaluations  =  maxEvaluations  +  generator.createMaxEvaluations();  ,this.maxEvaluations = Math.max(maxEvaluations, totalEvaluations);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  maxEvaluations  -  1;  ,this.maxEvaluations = Math.max(maxEvaluations, 1);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  maxEvaluations  -  1;  ,this.maxEvaluations = Math.max(maxEvaluations, 0);
increase failing tests,155,replace, [FE] ConvergenceException testQuinticMin, totalEvaluations  =  5;  int  starts  =  Math.min(startValue,  max)-  startValue;  ,totalEvaluations = 5; double starts = Math.min(startValue, max)- startValue;
increase failing tests,155,replace, [FE] ConvergenceException testQuinticMin, totalEvaluations  =  2;  int  starts  =  Math.min(startValue,  max);  ,totalEvaluations = 2; double starts = Math.min(startValue, max);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.totalEvaluations  =  1;  ,this.maxEvaluations = 0; this.totalEvaluations = 2;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.totalEvaluations  =  1;  ,this.maxEvaluations = 2; this.totalEvaluations = 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2;  ,this.maxEvaluations = maxEvaluations + 1; this.totalEvaluations = totalEvaluations + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2;  ,this.maxEvaluations = maxEvaluations + 2; this.totalEvaluations = totalEvaluations + 2;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2;  ,this.maxEvaluations = totalEvaluations + 1; this.totalEvaluations = totalEvaluations + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.maxEvaluations  =  0;  ,this.maxEvaluations = totalEvaluations; this.maxEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.maxEvaluations  =  0;  ,this.maxEvaluations = maxEvaluations; this.maxEvaluations = 1;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.totalEvaluations  =  toTotalEvaluations  -  1;  ,this.totalEvaluations = starts - 1;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = starts; this.totalEvaluations = totalEvaluations;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = totalEvaluations; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  -  1;  ,this.maxEvaluations = maxEvaluations; this.starts = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  starts;  ,this.maxEvaluations = starts; this.totalEvaluations = starts;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  Math.min(startValue,  min  +  1);  ,double starts = Math.min(startValue, min + 1);
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  min  -  startValue  +  1;  ,double starts = min - startValue + 1;
increase failing tests,155,replace, [FE] ConvergenceException testQuinticMin, totalEvaluations  =  2;  totalEvaluations  =  1;  ,totalEvaluations = 2; double starts = Math.min(startValue, min);
increase failing tests,74,replace, [FE] AssertionError testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  maxEvaluations  -  1;  ,this.starts = starts - 1; this.maxEvaluations = maxEvaluations - 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = starts; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = totalEvaluations; this.totalEvaluations = totalEvaluations;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  startValues  =  getStarts();  ,this.maxEvaluations = totalEvaluations - 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2  +  1;  ,this.maxEvaluations = maxEvaluations + 1; this.totalEvaluations = totalEvaluations + 1 + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2  +  1;  ,this.maxEvaluations = totalEvaluations + 1; this.totalEvaluations = totalEvaluations + 1 + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2  +  1;  ,this.maxEvaluations = maxEvaluations + 2; this.totalEvaluations = totalEvaluations + 1 + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = maxEvaluations + 1; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = totalEvaluations + 1; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = maxEvaluations / 2; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = totalEvaluations + 1; this.totalEvaluations = maxEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  +  1;  ,this.maxEvaluations = starts; this.totalEvaluations = totalEvaluations + 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  Math.min(startValue,  max  +  1);  ,double starts = Math.min(startValue, max + 1);
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator()?  getGenerator()  :  baseUnivariateRealOptimizer);  ,totalEvaluations = 0; totalEvaluations = 0;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator()?  getGenerator()  :  baseUnivariateRealOptimizer);  ,totalEvaluations = 2; totalEvaluations = 2;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator()?  getGenerator()  :  baseUnivariateRealOptimizer);  ,totalEvaluations = 0; totalEvaluations = 1;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator()?  getGenerator()  :  baseUnivariateRealOptimizer);  ,totalEvaluations = 1; totalEvaluations = 2;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1;  ,this.maxEvaluations = maxEvaluations + 2; this.totalEvaluations = totalEvaluations + 1;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator?  getGenerator()  :  baseUnivariateRealOptimizer;  ,totalEvaluations = 0; totalEvaluations = 2;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator?  getGenerator()  :  baseUnivariateRealOptimizer;  ,totalEvaluations = 3; totalEvaluations = 2;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator?  getGenerator()  :  baseUnivariateRealOptimizer;  ,totalEvaluations = 2;
increase failing tests,74,replace, [FE] AssertionError testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  0;  ,this.starts = starts - 1; this.maxEvaluations = 0;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  max  -  startValue;  ,double starts = max - startValue;
increase failing tests,155,replace, [FE] ConvergenceException testQuinticMin, int  starts  =  Math.min(startValue,  min);  ,double starts = Math.min(startValue, min);
increase failing tests,155,replace, [FE] ConvergenceException testQuinticMin, totalEvaluations  =  5;  int  starts  =  Math.min(startValue,  min);  ,totalEvaluations = 5; double starts = Math.min(startValue, min);
increase failing tests,155,replace, [FE] AssertionError testQuinticMin, totalEvaluations  =  1;  int  totalEvaluations  =  maxEvaluations  *(min  -  startValue);  ,totalEvaluations = 1; double totalEvaluations = maxEvaluations *(min - startValue);
increase failing tests,160,replace, [FE] AssertionError testQuinticMin, final  double  bound1  =(i  *  min)?  min  :  min  +  generator.nextDouble()  *  (max  -  min);  ,final double bound1 =(i > min)? min : min + generator.nextDouble() * (max - min);
increase failing tests,155,replace, [FE] AssertionError testQuinticMin, totalEvaluations  =  1;  int  totalEvaluations  =  maxEvaluations  *(min  -  min);  ,totalEvaluations = 1; double totalEvaluations = maxEvaluations *(min - min);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  maxEvaluations  -  1;  ,this.maxEvaluations = Math.max(maxEvaluations, 1000);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  /  2;  ,this.maxEvaluations = maxEvaluations * 2; this.totalEvaluations = totalEvaluations * 2;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = totalEvaluations; this.totalEvaluations = maxEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.totalEvaluations  =  0;  ,this.maxEvaluations = starts; this.totalEvaluations = 0;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator()?  getGenerator()  :  baseUnivariateRealOptimizer);  ,totalEvaluations = 5;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  starts;  ,this.maxEvaluations = totalEvaluations; this.totalEvaluations = starts;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,int totalEvaluations = 1;
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,totalEvaluations    =    5;    totalEvaluations  =  5;  int totalEvaluations = 0;
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,totalEvaluations    =    5;    totalEvaluations  =  5;  int totalEvaluations = 1;
increase failing tests,155,replace, [FE] AssertionError testQuinticMin, this.maxEvaluations  =  Math.max(maxEvaluations,  1);  ,int totalEvaluations = Math.min(maxEvaluations, 1000);
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,this.maxEvaluations  =  maxEvaluations  +  1;  int totalEvaluations = maxEvaluations + 1;
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,this.maxEvaluations  =  maxEvaluations  +  1;  int totalEvaluations = starts + 1;
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,totalEvaluations    =    7;    totalEvaluations  =  7;  int totalEvaluations = 1;
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,totalEvaluations    =    7;    totalEvaluations  =  7;  int totalEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  -  1;  ,this.maxEvaluations = maxEvaluations + 1; this.totalEvaluations = totalEvaluations - 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  -  1;  ,this.maxEvaluations = maxEvaluations; this.totalEvaluations = totalEvaluations * 1;
increase failing tests,155,add, [FE] AssertionError testQuinticMin, ,this.totalEvaluations  =  totalEvaluations  -  1;  int totalEvaluations = maxEvaluations - 1;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 0;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 3; totalEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2  +  1;  ,this.maxEvaluations = maxEvaluations / 2; this.totalEvaluations = totalEvaluations + 1 + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2;  ,this.maxEvaluations = maxEvaluations * 2; this.totalEvaluations = totalEvaluations + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1;  ,this.maxEvaluations = maxEvaluations / 2; this.totalEvaluations = totalEvaluations + 1;
increase failing tests,155,replace, [FE] AssertionError testQuinticMin, totalEvaluations  =  2;  totalEvaluations  =  3;  ,int totalEvaluations = 1;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator?  getGenerator()  :  baseUnivariateRealOptimizer;  ,totalEvaluations = 3; totalEvaluations = 4;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = maxEvaluations * 2; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = maxEvaluations * 1; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  +  1;  ,this.maxEvaluations = totalEvaluations; this.totalEvaluations = totalEvaluations + 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.totalEvaluations  =  totalEvaluations  +  1;  ,this.maxEvaluations = maxEvaluations; this.totalEvaluations = totalEvaluations / 1;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator()?  getGenerator()  :  baseUnivariateRealOptimizer);  ,totalEvaluations = 0;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  startValues  =  getStarts();  ,this.totalEvaluations = totalEvaluations * 1;
increase failing tests,155,replace, [FE] AssertionError testQuinticMin, this.maxEvaluations  =  starts  -  1;  ,int totalEvaluations = maxEvaluations * 1;
increase failing tests,155,replace, [FE] AssertionError testQuinticMin, this.maxEvaluations  =  starts  -  1;  ,int totalEvaluations = maxEvaluations * 2;
increase failing tests,154,replace, [FE] NullPointerException testQuinticMin, int  starts  =  f.endsWith(startValue);  ,totalEvaluations = 4; totalEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations;  ,this.maxEvaluations = starts + 1; this.totalEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.maxEvaluations  =  0;  ,this.maxEvaluations = starts; this.maxEvaluations = 0;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  Math.max(maxEvaluations,  starts);  ,this.totalEvaluations = Math.min(totalEvaluations, 0);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  Math.max(maxEvaluations,  starts);  ,this.totalEvaluations = Math.min(totalEvaluations, totalEvaluations);
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.maxEvaluations  =  totalEvaluations;  ,this.maxEvaluations = 0; this.maxEvaluations = totalEvaluations;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations;  this.maxEvaluations  =  totalEvaluations;  ,this.maxEvaluations = maxEvaluations; this.maxEvaluations = starts;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator()?  getGenerator()  :  baseUnivariateRealOptimizer);  ,totalEvaluations = 7;
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.generator  =  generator,  isGenerator?  getGenerator()  :  baseUnivariateRealOptimizer;  ,totalEvaluations = 0; totalEvaluations = 3;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  0;  this.totalEvaluations  =  1;  ,this.maxEvaluations = 0; this.totalEvaluations = 3;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin,     this.maxEvaluations  =  maxEvaluations  +  1  /  2;  this.totalEvaluations  =  totalEvaluations  +  1  /  2  +  1;  ,this.maxEvaluations = starts + 1; this.totalEvaluations = totalEvaluations + 1 + 1;
increase failing tests,155,replace, [FE] TooManyEvaluationsException testQuinticMin, int  starts  =  optima.getStart();  ,setMaxEvaluations(starts);
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.totalEvaluations  =  toTotalEvaluations  -  1;  ,this.totalEvaluations = maxEvaluations - 1;
increase failing tests,74,replace, [FE] ArrayIndexOutOfBoundsException testQuinticMin, this.starts  =  starts  +  1;  this.maxEvaluations  =  maxEvaluations  -  1;  ,this.maxEvaluations = Math.max(maxEvaluations, 10);
increase failing tests,75,replace, [FE] NullPointerException testQuinticMin, this.totalEvaluations  =  toTotalEvaluations  +  1;  ,this.totalEvaluations = maxEvaluations + 1;
