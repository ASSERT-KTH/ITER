bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
2	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(bodyNode);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(bodyNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(bodyNode);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
3	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
4	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
5	[BUG]  [BUGGY]  return  new  Node(type).clone();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clone();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clone();	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
6	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
7	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  templateNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  templateNode);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  templateNode);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]    [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	  	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
9	[BUG]  [BUGGY]  return  new  Node(type).newNode();  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).newNode();  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).newNode();	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
10	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(ret);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
11	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  Node  newNode(int  type)  {  [BUGGY]  return  new  Node(type).clonePropsFrom(this);  [BUGGY]  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this);	return  new  Node(type).clonePropsFrom(templateNode);  	non-compiled	[CE]  illegal  start  of  type	91	None	replace
