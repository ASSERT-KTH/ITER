bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fnNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(type,  this.assign);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(type,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.fnNode).clonePropsFrom(type,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.stringNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.stringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.stringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.reporter);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.reporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.reporter);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  config);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  return  new  Node(type,  fnNode).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  fnNode).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  fnNode).newNode();	  return    new    Node(fnNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
9	[BUG]  [BUGGY]  return  new  Node(this,  fnNode,  type).newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  fnNode,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  fnNode,  type).newNode();	  return    new    Node(fnNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
10	[BUG]  [BUGGY]  return  new  Node(node,  type).newNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  type).newNode();	  return    new    Node(fnNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
11	[BUG]  [BUGGY]  return  new  Node(this,  fnNode).newNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  fnNode).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  fnNode).newNode();	  return    new    Node(fnNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
12	[BUG]  [BUGGY]  return  new  Node(type,  newBlock).newNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  newBlock).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  newBlock).newNode();	  return    new    Node(newBlock,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
13	[BUG]  [BUGGY]  newNode(type,  newBlock).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  newNode(type,  newBlock).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	newNode(type,  newBlock).newNode();	  return    new    Node(newBlock,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
14	[BUG]  [BUGGY]  return  new  Node(newBlock,  type,  config).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  type,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  type,  config).newNode();	  return    new    Node(newBlock,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  type);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  type);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  errorReporter);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
17	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  this);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  this);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
18	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  config);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  config);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
19	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  newNode);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
20	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  errorsReporter);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  errorsReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  errorsReporter);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
21	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
22	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
23	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
24	[BUG]  [BUGGY]  return  new  Node(this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
25	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
26	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileLevelJsDocBuilder,  this.bodyNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileLevelJsDocBuilder,  this.bodyNode,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileLevelJsDocBuilder,  this.bodyNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
27	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileNode,  type);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
28	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  type);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
29	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  this,  config);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  this,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  this,  config);	  return    new    Node(type).clonePropsFrom(this,    this);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
30	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  null);	  return    new    Node(type).clonePropsFrom(this,    this);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
31	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  this,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  this,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  this,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    this);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
32	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  this);	  return    new    Node(type).clonePropsFrom(this,    this);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
33	[BUG]  [BUGGY]  return  new  Node(this.childNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.childNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.childNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
34	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.childNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
35	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.childNode,  config);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
36	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.stringNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.stringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.childNode,  this.stringNode);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
37	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.childNode,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
38	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.lp);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.lp);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.childNode,  this.lp);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
39	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
40	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
41	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
42	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.reporter);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.reporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  this.reporter);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
43	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
44	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.errorReporter);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  this.errorReporter);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
45	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(target,  this.assign);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(target,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(target,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
46	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  value,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  value,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  value,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
47	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.value);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
48	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  value,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  value,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  value,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
49	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  value);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  value);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
50	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.stringNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.stringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.stringNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    type);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
51	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.valueNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.valueNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.valueNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    type);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
52	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.lp);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.lp);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.lp);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    type);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
53	[BUG]  [BUGGY]  return  new  Node(irNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(irNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(irNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
54	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  irNode);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
55	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(irNode,  config);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
56	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  irNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  irNode);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
57	[BUG]  [BUGGY]  return  new  Node(this.report).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.report).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.report).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.report);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
58	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  report);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  report);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  report);	  return    new    Node(type).clonePropsFrom(this.report);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
59	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  errorReporter);	  return    new    Node(type).clonePropsFrom(this.report);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
60	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  sourceName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  sourceName);	  return    new    Node(type).clonePropsFrom(this.report);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
61	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  config);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  config);	  return    new    Node(type).clonePropsFrom(this.report);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
62	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.report);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
63	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  this);	  return    new    Node(type).clonePropsFrom(this,    config);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
64	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  type);	  return    new    Node(type).clonePropsFrom(this,    config);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
65	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    config);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
66	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  null);	  return    new    Node(type).clonePropsFrom(this,    config);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
67	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  this);	  return    new    Node(type).clonePropsFrom(this,    config);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
68	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  message);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  message);	  return    new    Node(type).clonePropsFrom(this,    config);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
69	[BUG]  [BUGGY]  return  new  Node(type,  type).clonePropsFrom(ret);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  type).clonePropsFrom(ret);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  type).clonePropsFrom(ret);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
70	[BUG]  [BUGGY]  return  new  Node(type,  ret).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  ret).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  ret).clonePropsFrom(type);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
71	[BUG]  [BUGGY]  return  new  Node(newBlock,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  type).clonePropsFrom(type);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
72	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(type);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
73	[BUG]  [BUGGY]  return  new  Node(node,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  type).clonePropsFrom(type);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
74	[BUG]  [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(fnNode,  type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(fnNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret,  type).clonePropsFrom(fnNode,  type);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
75	[BUG]  [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(fnNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret,  type).clonePropsFrom(fnNode);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
76	[BUG]  [BUGGY]  return  new  Node(config,  type).clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(config,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(config,  type).clone();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
77	[BUG]  [BUGGY]  return  new  Node(null,  type,  config).clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type,  config).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type,  config).clone();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
78	[BUG]  [BUGGY]  return  new  Node(this,  config).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  config).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  config).clone();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
79	[BUG]  [BUGGY]  return  new  Node(type,  config).reset();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).reset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).reset();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
80	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  node,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  node,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  node,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    node);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
81	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  node,  config);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  node,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  node,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    node);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
82	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  node);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  node);	  return    new    Node(type).clonePropsFrom(this.assign,    node);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
83	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  node,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  node,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  node,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    node);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
84	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  NodeTraversal());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  NodeTraversal());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  new  NodeTraversal());	  NodeTraversal.traverse(compiler,    new    NodeTraversal());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
85	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  new  NodeTraversal());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  new  NodeTraversal());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  new  NodeTraversal());	  NodeTraversal.traverse(compiler,    new    NodeTraversal());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
86	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal(),  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal(),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  NodeTraversal(),  this);	  NodeTraversal.traverse(compiler,    new    NodeTraversal());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
87	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  NodeTraversal());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  NodeTraversal());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  new  NodeTraversal());	  NodeTraversal.traverse(compiler,    new    NodeTraversal());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
88	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  new  NodeTraversal());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  new  NodeTraversal());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  new  NodeTraversal());	  NodeTraversal.traverse(compiler,    new    NodeTraversal());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
89	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  NodeTraversal(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  NodeTraversal(),  errorReporter);	  NodeTraversal.traverse(compiler,    new    NodeTraversal());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
90	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
91	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  config);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  config);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
92	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  message);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  message);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
93	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  false);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
94	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceName);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceName);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
95	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceString);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
96	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  this);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
97	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportErrorReporter,  templateNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportErrorReporter,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  reportErrorReporter,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
98	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  errorReporter,  templateNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  errorReporter,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  errorReporter,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
99	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportNode,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  reportNode,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
100	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportNode,  templateNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  reportNode,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
101	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  reportErrorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportNode,  type);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  reportNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  reportNode,  type);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret.type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(ret.type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret.type);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
104	[BUG]  [BUGGY]  return  new  Node(node.type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node.type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node.type).clonePropsFrom(type);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
105	[BUG]  [BUGGY]  return  new  Node(ret.node).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.node).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.node).clonePropsFrom(type);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  return  new  Node(ret.type).clonePropsFrom(this,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.type).clonePropsFrom(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.type).clonePropsFrom(this,  type);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
107	[BUG]  [BUGGY]  return  new  Node(ret.node,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.node,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.node,  type).clonePropsFrom(type);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
108	[BUG]  [BUGGY]  return  new  Node(this.blockNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.blockNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.blockNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
109	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.blockNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
110	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.blockNode,  config);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
111	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.blockNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.blockNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.blockNode);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
112	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  this.stringNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  this.stringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.blockNode,  this.stringNode);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
113	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.blockNode,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.blockNode,  true);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
114	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(this,  type),  errorReporter);	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
115	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(type));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  newNode(type));	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
116	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  this);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(this,  type),  this);	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
117	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(this,  type));  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(this,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode(this,  type));	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
118	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  config);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(this,  type),  config);	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
119	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(this,  type));  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(this,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  newNode(this,  type));	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
120	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fnNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
121	[BUG]  [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.fnNode).clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
122	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
123	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
124	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.stringNode,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.stringNode,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.stringNode,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
125	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  this.errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  this.errorReporter);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
126	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.fnNode,  config);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
127	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  config);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  block,  config);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
128	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  errorReporter);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  block,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
129	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  message);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  block,  message);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
130	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  reportErrorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  block,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
131	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  block);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  block);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  block);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
132	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  true);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
133	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  false);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  false);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
134	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type),  false);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode(type),  false);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
135	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type),  false);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  newNode(type),  false);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
136	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(node,  type),  false);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(node,  type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(node,  type),  false);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
137	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  false);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(null,  type),  false);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
138	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this.node,  type),  false);  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this.node,  type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(this.node,  type),  false);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
139	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
140	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
141	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  message);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
142	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
143	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  config);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
144	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  target);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  target);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
145	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  reportErrorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
146	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  fnNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  fnNode);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
147	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  config,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
148	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  message);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  config,  message);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
149	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  this.config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  this.config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  this.config);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
150	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  config,  this);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
151	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  null);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  config,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  config,  null);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
152	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  ret);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  ret);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  ret);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
153	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  type);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
154	[BUG]  [BUGGY]  return  new  Node(report).clonePropsFrom(type,  config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(report).clonePropsFrom(type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(report).clonePropsFrom(type,  config);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
155	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  templateNode);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
156	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(ret,  type);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
157	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  config,  templateNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  config,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret,  config,  templateNode);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
158	[BUG]  [BUGGY]  return  new  Node(type),  config.clonePropsFrom(ret,  type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type),  config.clonePropsFrom(ret,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type),  config.clonePropsFrom(ret,  type);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
159	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  config);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  node,  config);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
160	[BUG]  [BUGGY]  return  new  Node(node).clonePropsFrom(this,  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node).clonePropsFrom(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node).clonePropsFrom(this,  type);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
161	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  message);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  node,  message);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
162	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  node,  false);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
163	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  node,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
164	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  true);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  node,  true);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
165	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  node,  this);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
166	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.templateNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.templateNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  this.templateNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
167	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.templateNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.templateNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceNode,  this.templateNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
168	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.templateNode);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
169	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.templateNode,  this.assign,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.templateNode,  this.assign,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.templateNode,  this.assign,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
170	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.templateNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.templateNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.rootNode,  this.templateNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
171	[BUG]  [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
172	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceNode,  this.templateNode);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceNode,  this.templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceNode,  this.templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
173	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  value,  templateNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  value,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  value,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
174	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  value);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
175	[BUG]  [BUGGY]  return  new  Node(value).clonePropsFrom(this,  templateNode,  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(value).clonePropsFrom(this,  templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(value).clonePropsFrom(this,  templateNode,  type);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
176	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  valuesNode,  templateNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  valuesNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  valuesNode,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
177	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  values);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  values);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  values);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
178	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  value,  config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  value,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  value,  config);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
179	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  value);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  node,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  node,  value);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
180	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.reporter);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.reporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.reporter);	  return    new    Node(type).clonePropsFrom(this.assign,    type);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
181	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  errorReporter);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
182	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  config);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
183	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
184	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  message);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  message);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
185	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  type);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  type);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
186	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  report);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  report);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  report);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
187	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  sourceName);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  sourceName);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
188	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  newNode);	  NodeTraversal.traverse(compiler,    newNode(null,    type));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
189	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(null,  type),  errorReporter);	  NodeTraversal.traverse(compiler,    newNode(null,    type));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
190	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  this);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(null,  type),  this);	  NodeTraversal.traverse(compiler,    newNode(null,    type));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
191	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(null,  type));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(null,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode(null,  type));	  NodeTraversal.traverse(compiler,    newNode(null,    type));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
192	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  config);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type),  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(null,  type),  config);	  NodeTraversal.traverse(compiler,    newNode(null,    type));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
193	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  errorReporter).traverse(this);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  errorReporter).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  errorReporter).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
194	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type).traverse(this);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
195	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter).traverse(this);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
196	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  type).traverse(this);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  type).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  type).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
197	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this).traverse(this,  type);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this).traverse(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this).traverse(this,  type);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
198	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  config).traverse(this);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  config).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  config).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
199	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
200	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
201	[BUG]  [BUGGY]  return  new  Node(this.sourceStringNode).clonePropsFrom(type,  this.assign);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceStringNode).clonePropsFrom(type,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceStringNode).clonePropsFrom(type,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
202	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.assign,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.assign,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  this.assign,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
203	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
204	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.rootNode,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
205	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  type);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceStringNode,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
206	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  name).newNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  name).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  name).newNode();	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
207	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  config).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  config).newNode();	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
208	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  config.newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  config.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  config.newNode();	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
209	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  config).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  config).newNode();	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
210	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  this);	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
211	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  this);	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
212	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  type).clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  type).clone();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
213	[BUG]  [BUGGY]  return  new  Node(Token.EXPR_RESULT).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.EXPR_RESULT).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.EXPR_RESULT).clone();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
214	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  name).clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  name).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  name).clone();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
215	[BUG]  [BUGGY]  return  new  Node(Token.GETPROP,  type).clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.GETPROP,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.GETPROP,  type).clone();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
216	[BUG]  [BUGGY]  return  new  Node(Token.EXPR_RESULT,  type).clone();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.EXPR_RESULT,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.EXPR_RESULT,  type).clone();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
217	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  this).clone();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  this).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  this).clone();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
218	[BUG]  [BUGGY]  return  new  Node(type,  this.node).clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.node).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.node).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
219	[BUG]  [BUGGY]  return  new  Node(this.node,  type,  this.sourceName).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type,  this.sourceName).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type,  this.sourceName).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
220	[BUG]  [BUGGY]  return  new  Node(this.node,  type,  this.reporter).clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type,  this.reporter).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type,  this.reporter).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
221	[BUG]  [BUGGY]  return  new  Node(this.node,  this.type).clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  this.type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  this.type).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
222	[BUG]  [BUGGY]  return  new  Node(this.node,  type),  this.reporter.getErrorReporter());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type),  this.reporter.getErrorReporter());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type),  this.reporter.getErrorReporter());	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
223	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  this.assign);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileOverviewInfo,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
224	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileLevelJsDocBuilder,  this.assign,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileLevelJsDocBuilder,  this.assign,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileLevelJsDocBuilder,  this.assign,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
225	[BUG]  [BUGGY]  return  new  Node(this.fileOverviewInfo).clonePropsFrom(type,  this.assign);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.fileOverviewInfo).clonePropsFrom(type,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.fileOverviewInfo).clonePropsFrom(type,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
226	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fileOverviewInfo,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fileOverviewInfo,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.fileOverviewInfo,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
227	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileoverviewInfo,  type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileoverviewInfo,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileoverviewInfo,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
228	[BUG]  [BUGGY]  return  new  Node(type),  this.fileOverviewInfo.clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type),  this.fileOverviewInfo.clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type),  this.fileOverviewInfo.clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
229	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.child);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.child);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.child);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
230	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
231	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.parent);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.parent);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.parent);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
232	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  config);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
233	[BUG]  [BUGGY]  return  new  Node(target).clonePropsFrom(this,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(target).clonePropsFrom(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(target).clonePropsFrom(this,  type);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
234	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
235	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  message);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  message);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
236	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  false);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  false);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
237	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
238	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  sourceName);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  sourceName);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
239	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  config);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  config);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
240	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  message);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
241	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
242	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  reporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  reporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  reporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
243	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  sourceName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  sourceName);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
244	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  errorReporter,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
245	[BUG]  [BUGGY]  return  new  Node(newBlock,  config).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  config).newNode();	  return    new    Node(newBlock).newNode();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
246	[BUG]  [BUGGY]  return  new  Node(this.assign,  type).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign,  type).newNode();	  return    new    Node(newBlock).newNode();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
247	[BUG]  [BUGGY]  return  new  Node(node).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node).clonePropsFrom(type);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
248	[BUG]  [BUGGY]  return  new  Node(newBlock).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock).clonePropsFrom(type);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
249	[BUG]  [BUGGY]  return  new  Node(bodyNode,  type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(bodyNode,  type).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(bodyNode,  type).clonePropsFrom(this);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
250	[BUG]  [BUGGY]  return  new  Node(bodyNode,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(bodyNode,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(bodyNode,  type).clonePropsFrom(type);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
251	[BUG]  [BUGGY]  return  new  Node(type,  null).newNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  null).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  null).newNode();	  return    new    Node(null,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
252	[BUG]  [BUGGY]  return  new  Node(null,  type),  config.newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type),  config.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type),  config.newNode();	  return    new    Node(null,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
253	[BUG]  [BUGGY]  return  new  Node(null,  type),  this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type),  this);	  return    new    Node(null,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
254	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type),  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode(type),  this);	  NodeTraversal.traverse(compiler,    newNode(type),    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
255	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this,  errorReporter);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  this,  errorReporter);	  NodeTraversal.traverse(compiler,    newNode(type),    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
256	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(type),  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  newNode(type),  this);	  NodeTraversal.traverse(compiler,    newNode(type),    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
257	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type),  this);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  newNode(type),  this);	  NodeTraversal.traverse(compiler,    newNode(type),    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
258	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).removePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).removePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).removePropsFrom(type);	  return    new    Node(type).removePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
259	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this.node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this.node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this.node);	  return    new    Node(type).removePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
260	[BUG]  [BUGGY]  return  new  Node(type).getPropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).getPropsFrom(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).getPropsFrom(this.bodyNode);	  return    new    Node(type).removePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
261	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this.bodyNode,  this.sourceName);	  return    new    Node(type).removePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
262	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this.bodyNode,  type);	  return    new    Node(type).removePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
263	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this.bodyNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this.bodyNode,  config);	  return    new    Node(type).removePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
264	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  config);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  newBlock,  config);	  return    new    Node(type).clonePropsFrom(this,    newBlock);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
265	[BUG]  [BUGGY]  return  new  Node(newBlock).clonePropsFrom(this,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock).clonePropsFrom(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock).clonePropsFrom(this,  type);	  return    new    Node(type).clonePropsFrom(this,    newBlock);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
266	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  fnNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  newBlock,  fnNode);	  return    new    Node(type).clonePropsFrom(this,    newBlock);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
267	[BUG]  [BUGGY]  return  new  Node(type,  true).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  true).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  true).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
268	[BUG]  [BUGGY]  return  new  Node(this,  type,  false).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type,  false).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type,  false).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
269	[BUG]  [BUGGY]  return  new  Node(null,  type,  false).newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type,  false).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type,  false).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
270	[BUG]  [BUGGY]  return  new  Node(null,  false).newNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  false).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  false).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
271	[BUG]  [BUGGY]  return  new  Node(newBlock,  false).newNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  false).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  false).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
272	[BUG]  [BUGGY]  return  new  Node(fnNode,  config).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode,  config).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode,  config).clonePropsFrom(type);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
273	[BUG]  [BUGGY]  return  new  Node(fnNode,  type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode,  type).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode,  type).clonePropsFrom(this);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
274	[BUG]  [BUGGY]  return  new  Node(fnNode,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode,  type).clonePropsFrom(type);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
275	[BUG]  [BUGGY]  return  new  Node(fnNode.getType()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode.getType()).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode.getType()).clonePropsFrom(type);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
276	[BUG]  [BUGGY]  return  new  Node(fnNode).clonePropsFrom(type,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode).clonePropsFrom(type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode).clonePropsFrom(type,  config);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
277	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  true);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  true);	  return    new    Node(type).clonePropsFrom(this,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
278	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  false,  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  false,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  false,  config);	  return    new    Node(type).clonePropsFrom(this,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
279	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  false);	  return    new    Node(type).clonePropsFrom(this,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
280	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  false,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  false,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  false,  null);	  return    new    Node(type).clonePropsFrom(this,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
281	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  name).clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  name).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  name).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
282	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  config).clone();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  config).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  config).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
283	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  false).clone();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  false).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  false).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
284	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  this).clone();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  this).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  this).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
285	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  getFlags()).clone();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  getFlags()).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  getFlags()).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
286	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  getFunctionName()).clone();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  getFunctionName()).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  getFunctionName()).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
287	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  newNode);	  return    new    Node(type).clonePropsFrom(newNode);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
288	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.newNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.newNode);	  return    new    Node(type).clonePropsFrom(newNode);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
289	[BUG]  [BUGGY]  return  new  Node(newNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(newNode);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
290	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(newNode,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(newNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(newNode,  config);	  return    new    Node(type).clonePropsFrom(newNode);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
291	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  newNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  newNode);	  return    new    Node(type).clonePropsFrom(newNode);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
292	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  type,  newNode());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  type,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  type,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
293	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
294	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  errorReporter,  newNode());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  errorReporter,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  errorReporter,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
295	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode(),  errorReporter);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode(),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  newNode(),  errorReporter);	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
296	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  type,  newNode());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  type,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  type,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
297	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(),  type);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(),  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(),  type);	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
298	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  errorReporter);	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
299	[BUG]  [BUGGY]  return  new  Node(null,  this).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  this).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  this).newNode();	  return    new    Node(type,    this).newNode();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
300	[BUG]  [BUGGY]  return  new  Node(node,  this).newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  this).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  this).newNode();	  return    new    Node(type,    this).newNode();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
301	[BUG]  [BUGGY]  return  new  Node(type,  getConfig()).newNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  getConfig()).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  getConfig()).newNode();	  return    new    Node(type,    this).newNode();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
302	[BUG]  [BUGGY]  return  new  Node(type,  null).clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  null).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  null).clone();	  return    new    Node(null,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
303	[BUG]  [BUGGY]  return  new  Node(null,  type,  this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type,  this);	  return    new    Node(null,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
304	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(bodyNode,  fnNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(bodyNode,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(bodyNode,  fnNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
305	[BUG]  [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(fnNode,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(fnNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(bodyNode).clonePropsFrom(fnNode,  type);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
306	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
307	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  c);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  c);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  c);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
308	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  irNode,  bodyNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  irNode,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  irNode,  bodyNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
309	[BUG]  [BUGGY]  return  new  Node(config,  type).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(config,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(config,  type).newNode();	  return    new    Node(type,    config).newNode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
310	[BUG]  [BUGGY]  return  new  Node(this,  config).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  config).newNode();	  return    new    Node(type,    config).newNode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
311	[BUG]  [BUGGY]  return  new  Node(null,  config).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  config).newNode();	  return    new    Node(type,    config).newNode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
312	[BUG]  [BUGGY]  return  new  Node(type,  config.newNode());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config.newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config.newNode());	  return    new    Node(type,    config).newNode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
313	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
314	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.config);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
315	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  this.errorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  this.errorReporter);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
316	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
317	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  null);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
318	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  config,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
319	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  config);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type,  config);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
320	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type,  type);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
321	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.errorReporter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type,  this.errorReporter);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
322	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type,  this.sourceName);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
323	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  templateNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
324	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this.assign,  templateNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this.assign,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  this.assign,  templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
325	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  type,  config);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  type,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
326	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.config,  templateNode);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.config,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.config,  templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
327	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  templateNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
328	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  templateNode,  this.sourceName,  config);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  templateNode,  this.sourceName,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  templateNode,  this.sourceName,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
329	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  true));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  true));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  true));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
330	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type,  false));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type,  false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode(type,  false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
331	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type,  false));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type,  false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  newNode(type,  false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
332	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type,  false));  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(null,  type,  false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(null,  type,  false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
333	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type,  false));  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type,  false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(this,  type,  false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
334	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false),  errorReporter);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  false),  errorReporter);	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
335	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  c);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  c);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  c);	  return    new    Node(type).clonePropsFrom(this.assign,    c);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
336	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  c,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  c,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  c,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    c);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
337	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceNode);	  return    new    Node(type).clonePropsFrom(this.assign,    c);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
338	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  errorReporter);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  errorReporter);	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
339	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  this);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  this);	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
340	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  config);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  config);	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
341	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher(this,  type));  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher(this,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher(this,  type));	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
342	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  false);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  type),  false);	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
343	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher(type));  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher(type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher(type));	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
344	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  new  TransformDispatcher(this,  type));  [CE]  illegal  start  of  type  [FE]                                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  new  TransformDispatcher(this,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  new  TransformDispatcher(this,  type));	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
345	[BUG]  [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(this,  type);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(bodyNode).clonePropsFrom(this,  type);	  return    new    Node(type).clonePropsFrom(this,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
346	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  config);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  bodyNode,  config);	  return    new    Node(type).clonePropsFrom(this,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
347	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  c,  bodyNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  c,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  c,  bodyNode);	  return    new    Node(type).clonePropsFrom(this,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
348	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
349	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.assign);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(type,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(type,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
350	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
351	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
352	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
353	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  type,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  type,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  type,  this);	  NodeTraversal.traverse(compiler,    type,    this);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
354	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  this,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  this,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  this,  fileOverviewInfo);	  NodeTraversal.traverse(compiler,    type,    this);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
355	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  this,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  this,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  this,  errorReporter);	  NodeTraversal.traverse(compiler,    type,    this);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
356	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  this,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  this,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  this,  fileLevelJsDocBuilder);	  NodeTraversal.traverse(compiler,    type,    this);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
357	[BUG]  [BUGGY]  return  new  Node(ret).clonePropsFrom(this,  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret).clonePropsFrom(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret).clonePropsFrom(this,  type);	  return    new    Node(type).clonePropsFrom(this,    ret);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
358	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  ret,  message);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  ret,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  ret,  message);	  return    new    Node(type).clonePropsFrom(this,    ret);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
359	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  ret,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  ret,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  ret,  null);	  return    new    Node(type).clonePropsFrom(this,    ret);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
360	[BUG]  [BUGGY]  return  new  Node(type,  newBlock).clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  newBlock).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  newBlock).clone();	  return    new    Node(newBlock,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
361	[BUG]  [BUGGY]  return  new  Node(newBlock,  type,  config).clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  type,  config).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  type,  config).clone();	  return    new    Node(newBlock,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
362	[BUG]  [BUGGY]  return  new  Node(newBlock,  type,  fnNode).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  type,  fnNode).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  type,  fnNode).clone();	  return    new    Node(newBlock,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
363	[BUG]  [BUGGY]  return  new  Node(this,  this,  type).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  this,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  this,  type).newNode();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
364	[BUG]  [BUGGY]  return  new  Node(this,  type),  config.newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type),  config.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type),  config.newNode();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
365	[BUG]  [BUGGY]  return  new  Node(this,  type).newString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).newString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).newString();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
366	[BUG]  [BUGGY]  return  new  Node(this,  type),  this.reporter.newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type),  this.reporter.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type),  this.reporter.newNode();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
367	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type),  this.errorReporter).newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type),  this.errorReporter).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type),  this.errorReporter).newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
368	[BUG]  [BUGGY]  return  new  Node(type,  this.bodyNode).newNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.bodyNode).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.bodyNode).newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
369	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  this.type).newNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  this.type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  this.type).newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
370	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type,  this.errorReporter).newNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type,  this.errorReporter).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type,  this.errorReporter).newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
371	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type),  this.fnNode.newNode();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type),  this.fnNode.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type),  this.fnNode.newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
372	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type),  this.reportErrorReporter).newNode();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type),  this.reportErrorReporter).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type),  this.reportErrorReporter).newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
373	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this,  config);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this,  config);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
374	[BUG]  [BUGGY]  return  new  Node(this).removePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this).removePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this).removePropsFrom(type);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
375	[BUG]  [BUGGY]  return  new  Node(this,  type).removePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).removePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).removePropsFrom(this);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
376	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this,  this);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
377	[BUG]  [BUGGY]  return  new  Node(type).getPropsFrom(this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).getPropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).getPropsFrom(this);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
378	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(null);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(null);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
379	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.assign);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
380	[BUG]  [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(type,  this.assign);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(type,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceName).clonePropsFrom(type,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
381	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
382	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
383	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  config);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
384	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
385	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  this.sourceName);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
386	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  this.fileOverviewInfo);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
387	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  config);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
388	[BUG]  [BUGGY]  return  new  Node(this.assign,  this.sourceName).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign,  this.sourceName).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign,  this.sourceName).clonePropsFrom(type);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
389	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  type);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  type);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
390	[BUG]  [BUGGY]  return  new  Node(type,  this.node).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.node).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.node).newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
391	[BUG]  [BUGGY]  return  new  Node(this.node,  this.type).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  this.type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  this.type).newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
392	[BUG]  [BUGGY]  return  new  Node(this.node,  type),  this.fnNode.newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type),  this.fnNode.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type),  this.fnNode.newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
393	[BUG]  [BUGGY]  return  new  Node(this.node,  type),  this.reporter.newNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type),  this.reporter.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type),  this.reporter.newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
394	[BUG]  [BUGGY]  return  new  Node(this.node,  type),  this.newNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type),  this.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type),  this.newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
395	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode(type));	  NodeTraversal.traverse(compiler,    newNode(type));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
396	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  errorReporter);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  errorReporter);	  NodeTraversal.traverse(compiler,    newNode(type));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
397	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type));  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode(type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  newNode(type));	  NodeTraversal.traverse(compiler,    newNode(type));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
398	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  templateNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
399	[BUG]  [BUGGY]  return  new  Node(target).clonePropsFrom(this,  templateNode,  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(target).clonePropsFrom(this,  templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(target).clonePropsFrom(this,  templateNode,  type);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
400	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
401	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  config);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
402	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  fnNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  fnNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
403	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  message);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
404	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  value);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
405	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  name).toString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  name).toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  name).toString();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
406	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  config).toString();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  config).toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  config).toString();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
407	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  this).toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  this).toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  this).toString();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
408	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).reportCodeChange();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).reportCodeChange();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).reportCodeChange();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
409	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).replaceAll( "n ",   "n ");  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).replaceAll( "n ",   "n ");  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).replaceAll( "n ",   "n ");	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
410	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).replaceChild(null,  null);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).replaceChild(null,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).replaceChild(null,  null);	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
411	[BUG]  [BUGGY]  return  new  Node(this.reporter).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.reporter).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.reporter).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
412	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  errorReporter);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.reporter,  errorReporter);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
413	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.reporter,  config);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
414	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.reporter,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
415	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  sourceName);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.reporter,  sourceName);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
416	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.errorReporter);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.errorReporter);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
417	[BUG]  [BUGGY]  return  new  Node(ret.getSourceName()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getSourceName()).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getSourceName()).clonePropsFrom(type);	  return    new    Node(ret).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
418	[BUG]  [BUGGY]  return  new  Node(ret,  config).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret,  config).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret,  config).clonePropsFrom(type);	  return    new    Node(ret).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
419	[BUG]  [BUGGY]  return  new  Node(type.getType()).clonePropsFrom(ret);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type.getType()).clonePropsFrom(ret);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type.getType()).clonePropsFrom(ret);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
420	[BUG]  [BUGGY]  return  new  Node(ret.getFirstChild()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getFirstChild()).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getFirstChild()).clonePropsFrom(type);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
421	[BUG]  [BUGGY]  return  new  Node(ret.getType()).clonePropsFrom(type,  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getType()).clonePropsFrom(type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getType()).clonePropsFrom(type,  config);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
422	[BUG]  [BUGGY]  return  new  Node(node.getType()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node.getType()).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node.getType()).clonePropsFrom(type);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
423	[BUG]  [BUGGY]  return  new  Node(ret.getReturnType()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getReturnType()).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getReturnType()).clonePropsFrom(type);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
424	[BUG]  [BUGGY]  return  new  Node(ret.getType()).clonePropsFrom(type,  this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getType()).clonePropsFrom(type,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getType()).clonePropsFrom(type,  this);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
425	[BUG]  [BUGGY]  return  new  Node(ret.getType(),  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getType(),  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getType(),  type).clonePropsFrom(type);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
426	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  bodyNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  bodyNode);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
427	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(bodyNode,  type);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
428	[BUG]  [BUGGY]  return  new  Node(type),  config.clonePropsFrom(bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type),  config.clonePropsFrom(bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type),  config.clonePropsFrom(bodyNode,  type);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
429	[BUG]  [BUGGY]  return  new  Node(config).clonePropsFrom(bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(config).clonePropsFrom(bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(config).clonePropsFrom(bodyNode,  type);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
430	[BUG]  [BUGGY]  return  new  Node(type),  config.clonePropsFrom(bodyNode,  config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type),  config.clonePropsFrom(bodyNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type),  config.clonePropsFrom(bodyNode,  config);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
431	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(buildNode,  config);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(buildNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(buildNode,  config);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
432	[BUG]  [BUGGY]  return  new  Node(name).clonePropsFrom(bodyNode,  config);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(name).clonePropsFrom(bodyNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(name).clonePropsFrom(bodyNode,  config);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
433	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  message);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fnNode,  message);	  return    new    Node(type).clonePropsFrom(this,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
434	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fnNode,  false);	  return    new    Node(type).clonePropsFrom(this,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
435	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fnNode,  this);	  return    new    Node(type).clonePropsFrom(this,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
436	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  null);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fnNode,  null);	  return    new    Node(type).clonePropsFrom(this,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
437	[BUG]  [BUGGY]  return  new  Node(type,  node).clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  node).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  node).clone();	  return    new    Node(node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
438	[BUG]  [BUGGY]  return  new  Node(this,  node,  type).clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  node,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  node,  type).clone();	  return    new    Node(node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
439	[BUG]  [BUGGY]  return  new  Node(newNode,  type).clone();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newNode,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newNode,  type).clone();	  return    new    Node(node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
440	[BUG]  [BUGGY]  return  new  Node(fnNode,  type).clone();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode,  type).clone();	  return    new    Node(node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
441	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  templateNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  templateNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  templateNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
442	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  templateNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceName,  templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
443	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  templateNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  templateNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceNode,  templateNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
444	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  type,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  type,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  type,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
445	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
446	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
447	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  templateNode);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.sourceStringNode,  templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
448	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
449	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  templateNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  templateNode,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
450	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  templateNode,  type);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
451	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  templateNode,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  templateNode,  this);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
452	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  config,  errorReporter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  config,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  config,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
453	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  config,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  config,  reportErrorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  config,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
454	[BUG]  [BUGGY]  return  new  Node(this,  this,  type).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  this,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  this,  type).clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
455	[BUG]  [BUGGY]  return  new  Node(this,  JSDocInfo.NEW_ARRAY).clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  JSDocInfo.NEW_ARRAY).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  JSDocInfo.NEW_ARRAY).clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
456	[BUG]  [BUGGY]  return  new  Node(this,  type,  this.reporter).clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type,  this.reporter).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type,  this.reporter).clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
457	[BUG]  [BUGGY]  return  new  Node(this,  JSDocInfo.NEW_TYPE).clone();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  JSDocInfo.NEW_TYPE).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  JSDocInfo.NEW_TYPE).clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
458	[BUG]  [BUGGY]  return  new  Node(this,  type).removeChild(this);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).removeChild(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).removeChild(this);	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
459	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  message);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
460	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
461	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  message,  templateNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  message,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  message,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
462	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  sourceName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  sourceName);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
463	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  message,  config);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
464	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  type);	  return    new    Node(type).clonePropsFrom(this,    fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
465	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder.getParent());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder.getParent());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder.getParent());	  return    new    Node(type).clonePropsFrom(this,    fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
466	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  jsDocBuilder,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  jsDocBuilder,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  jsDocBuilder,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
467	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  TransformDispatcher());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  new  TransformDispatcher());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  new  TransformDispatcher());	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
468	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type));  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(type));	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
469	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  new  TransformDispatcher());  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  new  TransformDispatcher());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  new  TransformDispatcher());	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
470	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher());  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  new  TransformDispatcher());	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
471	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  new  TransformDispatcher());  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  new  TransformDispatcher());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  new  TransformDispatcher());	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
472	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(),  type);  [CE]  illegal  start  of  type  [FE]                                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(),  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(),  type);	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
473	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(),  this);  [CE]  illegal  start  of  type  [FE]                                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(),  this);	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
474	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
475	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
476	[BUG]  [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceName).clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
477	[BUG]  [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(type,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(type,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceName).clonePropsFrom(type,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
478	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceName,  config);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceName,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceName,  config);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
479	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.rootNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
480	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bufferNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bufferNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bufferNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
481	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
482	[BUG]  [BUGGY]  return  new  Node(this.bufferNode).clonePropsFrom(type,  this.assign);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bufferNode).clonePropsFrom(type,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bufferNode).clonePropsFrom(type,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
483	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
484	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.errorReporter);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  this.errorReporter);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
485	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.bufferNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.bufferNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  this.bufferNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
486	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  config);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bufferNode,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
487	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  ret);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  ret);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  ret);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
488	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret,  irNode);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
489	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  fnNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(irNode,  fnNode);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
490	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  fnNode,  message);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  fnNode,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret,  fnNode,  message);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
491	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  fnNode,  target);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  fnNode,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret,  fnNode,  target);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
492	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  report);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(fnNode,  report);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(fnNode,  report);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
493	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  config);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  config);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
494	[BUG]  [BUGGY]  return  new  Node(this,  type).cloneFunctionsFrom(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).cloneFunctionsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).cloneFunctionsFrom(this);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
495	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  target);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  target);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
496	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePathFrom(this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePathFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePathFrom(this);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
497	[BUG]  [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.fnNode).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
498	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.stringNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.stringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.stringNode);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
499	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.irNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.irNode);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
500	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fnNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
501	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  config);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fnNode,  config);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
502	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this.assign);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(config,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(config,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    config);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
503	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.config);	  return    new    Node(type).clonePropsFrom(this.assign,    config);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
504	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    config);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
505	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  null);	  return    new    Node(type).clonePropsFrom(this.assign,    config);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
506	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.errorReporter);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  this.errorReporter);	  return    new    Node(type).clonePropsFrom(this.assign,    config);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
507	[BUG]  [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  config);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this).clonePropsFrom(this,  config);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
508	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(this);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
509	[BUG]  [BUGGY]  return  new  Node(type,  null).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  null).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  null).clonePropsFrom(this);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
510	[BUG]  [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this).clonePropsFrom(this,  fileOverviewInfo);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
511	[BUG]  [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this).clonePropsFrom(this,  false);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
512	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  varNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  varNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  varNode);	  return    new    Node(type).clonePropsFrom(this,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
513	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  node);	  return    new    Node(type).clonePropsFrom(this,    config);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
514	[BUG]  [BUGGY]  return  new  Node(config).clonePropsFrom(ret,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(config).clonePropsFrom(ret,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(config).clonePropsFrom(ret,  type);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
515	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(ret,  null);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
516	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret,  node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(ret,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(ret,  node);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
517	[BUG]  [BUGGY]  return  new  Node(this,  node).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  node).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  node).newNode();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
518	[BUG]  [BUGGY]  return  new  Node(this,  _config.newNode());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  _config.newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  _config.newNode());	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
519	[BUG]  [BUGGY]  return  new  Node(this,  type).cloneFunction(this);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).cloneFunction(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).cloneFunction(this);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
520	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePositionFrom(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePositionFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePositionFrom(this);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
521	[BUG]  [BUGGY]  return  new  Node(this,  type).newNode(this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).newNode(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).newNode(this);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
522	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(fnNode,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(fnNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(fnNode,  type);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
523	[BUG]  [BUGGY]  return  new  Node(config).clonePropsFrom(fnNode,  type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(config).clonePropsFrom(fnNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(config).clonePropsFrom(fnNode,  type);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
524	[BUG]  [BUGGY]  return  new  Node(type).addPropsFrom(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).addPropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).addPropsFrom(this);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
525	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this,  node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this,  node);	  return    new    Node(type).removePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
526	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
527	[BUG]  [BUGGY]  return  new  Node(type),  config.clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type),  config.clonePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type),  config.clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
528	[BUG]  [BUGGY]  return  new  Node(type,  this.bodyNode).clonePropsFrom(config,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.bodyNode).clonePropsFrom(config,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.bodyNode).clonePropsFrom(config,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
529	[BUG]  [BUGGY]  return  new  Node(node).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    node);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
530	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  node);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  node);	  return    new    Node(type).clonePropsFrom(this.assign,    node);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
531	[BUG]  [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
532	[BUG]  [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
533	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  sourceName,  templateNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  sourceName,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  sourceName,  templateNode);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
534	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
535	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  target);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  target);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
536	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  bodyNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  bodyNode);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
537	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  bodyNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  bodyNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  bodyNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
538	[BUG]  [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  type);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
539	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.templateNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.templateNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.templateNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
540	[BUG]  [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
541	[BUG]  [BUGGY]  return  new  Node(this,  fnNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  fnNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  fnNode).clonePropsFrom(type);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
542	[BUG]  [BUGGY]  return  new  Node(fnNode,  type).clonePropsFrom(newNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode,  type).clonePropsFrom(newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode,  type).clonePropsFrom(newNode);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
543	[BUG]  [BUGGY]  return  new  Node(type,  this.childNode).clonePropsFrom(this.childNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.childNode).clonePropsFrom(this.childNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.childNode).clonePropsFrom(this.childNode);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
544	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.childNode,  type);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
545	[BUG]  [BUGGY]  return  new  Node(type,  this.childNode).clonePropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.childNode).clonePropsFrom(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.childNode).clonePropsFrom(this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
546	[BUG]  [BUGGY]  return  new  Node(ret.getParent()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getParent()).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getParent()).clonePropsFrom(type);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
547	[BUG]  [BUGGY]  return  new  Node(ret.getType(),  type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getType(),  type).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getType(),  type).clonePropsFrom(this);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
548	[BUG]  [BUGGY]  return  new  Node(ret.getType(),  type).clonePropsFrom(newNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getType(),  type).clonePropsFrom(newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getType(),  type).clonePropsFrom(newNode);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
549	[BUG]  [BUGGY]  return  new  Node(newBlock,  type,  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  type,  config);	  return    new    Node(newBlock,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
550	[BUG]  [BUGGY]  return  new  Node(this.node,  type),  this.fileOverviewInfo.newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type),  this.fileOverviewInfo.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type),  this.fileOverviewInfo.newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
551	[BUG]  [BUGGY]  return  new  Node(this.reporter,  type).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.reporter,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.reporter,  type).newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
552	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false),  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  false),  this);	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
553	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(false));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  errorReporter,  newNode(false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  errorReporter,  newNode(false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
554	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(node,  false));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(node,  false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(node,  false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
555	[BUG]  [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
556	[BUG]  [BUGGY]  return  new  Node(target).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(target).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(target).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
557	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
558	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  fnNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  fnNode);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
559	[BUG]  [BUGGY]  return  new  Node(this.node,  type),  this.fileOverviewInfo.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type),  this.fileOverviewInfo.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type),  this.fileOverviewInfo.clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
560	[BUG]  [BUGGY]  return  new  Node(this.reporter,  type).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.reporter,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.reporter,  type).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
561	[BUG]  [BUGGY]  return  new  Node(this.node,  type,  this.fileOverviewInfo).clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type,  this.fileOverviewInfo).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type,  this.fileOverviewInfo).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
562	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(bodyNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).clonePropsFrom(bodyNode);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
563	[BUG]  [BUGGY]  return  new  Node(tokenBuffer,  bodyNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(tokenBuffer,  bodyNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(tokenBuffer,  bodyNode).clonePropsFrom(type);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
564	[BUG]  [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(type,  config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(bodyNode).clonePropsFrom(type,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(bodyNode).clonePropsFrom(type,  config);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
565	[BUG]  [BUGGY]  return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(this,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(this,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(this,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
566	[BUG]  [BUGGY]  return  new  Node(type,  fileOverviewInfo.clonePropsFrom(this,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  fileOverviewInfo.clonePropsFrom(this,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  fileOverviewInfo.clonePropsFrom(this,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
567	[BUG]  [BUGGY]  return  new  Node(type),  fileOverviewInfo.clonePropsFrom(this,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type),  fileOverviewInfo.clonePropsFrom(this,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type),  fileOverviewInfo.clonePropsFrom(this,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
568	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this,    fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
569	[BUG]  [BUGGY]  return  new  Node(fnNode).clonePropsFrom(type,  bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(fnNode).clonePropsFrom(type,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(fnNode).clonePropsFrom(type,  bodyNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
570	[BUG]  [BUGGY]  return  new  Node(type,  fnNode).clonePropsFrom(bodyNode,  fnNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  fnNode).clonePropsFrom(bodyNode,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  fnNode).clonePropsFrom(bodyNode,  fnNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
571	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(blockNode,  fnNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(blockNode,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(blockNode,  fnNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
572	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(buildNode,  bodyNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(buildNode,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(buildNode,  bodyNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
573	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
574	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
575	[BUG]  [BUGGY]  return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  fileLevelJsDocBuilder).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
576	[BUG]  [BUGGY]  return  new  Node(type),  fileLevelJsDocBuilder.clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type),  fileLevelJsDocBuilder.clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type),  fileLevelJsDocBuilder.clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
577	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceStringNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  sourceStringNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
578	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  sourceNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  sourceNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  sourceNode,  fileLevelJsDocBuilder);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
579	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  target);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  target);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
580	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(newNode,  fnNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(newNode,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(newNode,  fnNode);	  return    new    Node(type).clonePropsFrom(newNode);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
581	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(newNode,  this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(newNode,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(newNode,  this);	  return    new    Node(type).clonePropsFrom(newNode);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
582	[BUG]  [BUGGY]  return  new  Node(value).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(value).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(value).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
583	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign,  value);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
584	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  value);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  value);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
585	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    config);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
586	[BUG]  [BUGGY]  return  new  Node(type,  this.blockNode).clonePropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.blockNode).clonePropsFrom(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.blockNode).clonePropsFrom(this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
587	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this.blockNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this.blockNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this.blockNode);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
588	[BUG]  [BUGGY]  return  new  Node(type,  this.blockNode).clonePropsFrom(this.child);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.blockNode).clonePropsFrom(this.child);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.blockNode).clonePropsFrom(this.child);	  return    new    Node(type).clonePropsFrom(this.blockNode);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
589	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  expressionNode,  message);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  expressionNode,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  expressionNode,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
590	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  sourceNode,  message);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  sourceNode,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  sourceNode,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
591	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign,  c);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign,  c);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.assign,  c);	  return    new    Node(type).clonePropsFrom(this.assign,    c);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
592	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  c);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  c);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  c);	  return    new    Node(type).clonePropsFrom(this.assign,    c);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
593	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.assign,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceNode,  this.assign,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceNode,  this.assign,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
594	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  templateNode,  type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  templateNode,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
595	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type).clonePropsFrom(this.type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type).clonePropsFrom(this.type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type).clonePropsFrom(this.type);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
596	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  this.type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  this.type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  this.type).clonePropsFrom(type);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
597	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type).clonePropsFrom(this.sourceName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type).clonePropsFrom(this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type).clonePropsFrom(this.sourceName);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
598	[BUG]  [BUGGY]  return  new  Node(this,  node).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  node).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  node).clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
599	[BUG]  [BUGGY]  return  new  Node(this,  _config.getTypeFactory()).clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  _config.getTypeFactory()).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  _config.getTypeFactory()).clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
600	[BUG]  [BUGGY]  return  new  Node(this,  type),  this.fileOverviewInfo.clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type),  this.fileOverviewInfo.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type),  this.fileOverviewInfo.clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
601	[BUG]  [BUGGY]  return  new  Node(this,  _config.getTypeDesc()).clone();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  _config.getTypeDesc()).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  _config.getTypeDesc()).clone();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
602	[BUG]  [BUGGY]  return  new  Node(this,  type).newNodeType();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).newNodeType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).newNodeType();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
603	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode,  this);	  NodeTraversal.traverse(compiler,    type,    this);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
604	[BUG]  [BUGGY]  return  new  Node(node,  config).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  config).newNode();	  return    new    Node(type,    config).newNode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
605	[BUG]  [BUGGY]  return  new  Node(tokenType,  config).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(tokenType,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(tokenType,  config).newNode();	  return    new    Node(type,    config).newNode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
606	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  type).newNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  type).newNode();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
607	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  type).toString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  type).toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  type).toString();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
608	[BUG]  [BUGGY]  return  new  Node(node).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node).newNode();	  return    new    Node(newBlock).newNode();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
609	[BUG]  [BUGGY]  return  new  Node(newBlock,  this).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  this).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  this).newNode();	  return    new    Node(newBlock).newNode();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
610	[BUG]  [BUGGY]  return  new  Node(node,  false).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  false).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  false).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
611	[BUG]  [BUGGY]  return  new  Node(newNode,  false).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newNode,  false).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newNode,  false).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
612	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode,  type);	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
613	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.type,  newNode());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this.type,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this.type,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
614	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  newNode());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  n,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
615	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this.sourceName,  newNode());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this.sourceName,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this.sourceName,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
616	[BUG]  [BUGGY]  return  new  Node(type,  this.bodyNode).clonePropsFrom(this.fnNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.bodyNode).clonePropsFrom(this.fnNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.bodyNode).clonePropsFrom(this.fnNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
617	[BUG]  [BUGGY]  return  new  Node(newNode,  type).newNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newNode,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newNode,  type).newNode();	  return    new    Node(null,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
618	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  fileLevelJsDocBuilder).clone();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  fileLevelJsDocBuilder).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  fileLevelJsDocBuilder).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
619	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  fileOverviewInfo).clone();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  fileOverviewInfo).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  fileOverviewInfo).clone();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
620	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  config);	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
621	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  this).reset();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  this).reset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  this).reset();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
622	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  varNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  varNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret,  varNode);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
623	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  block);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(ret,  block);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(ret,  block);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
624	[BUG]  [BUGGY]  return  new  Node(this).clonePropsFrom(this,  type);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this).clonePropsFrom(this,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this).clonePropsFrom(this,  type);	  return    new    Node(type).clonePropsFrom(this,    this);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
625	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  _config);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  _config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  _config);	  return    new    Node(type).clonePropsFrom(this,    this);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
626	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  bodyNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  bodyNode);	  return    new    Node(type).clonePropsFrom(this,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
627	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  fnNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  bodyNode,  fnNode);	  return    new    Node(type).clonePropsFrom(this,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
628	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode,  reportErrorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  templateNode,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
629	[BUG]  [BUGGY]  return  new  Node(type,  reportErrorReporter).clonePropsFrom(this,  templateNode,  templateNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  reportErrorReporter).clonePropsFrom(this,  templateNode,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  reportErrorReporter).clonePropsFrom(this,  templateNode,  templateNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
630	[BUG]  [BUGGY]  return  new  Node(node,  type).newInstance();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  type).newInstance();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  type).newInstance();	  return    new    Node(node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
631	[BUG]  [BUGGY]  return  new  Node(node,  type).reset();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  type).reset();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  type).reset();	  return    new    Node(node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
632	[BUG]  [BUGGY]  return  new  Node(type,  config.clonePropsFrom(bodyNode,  type);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config.clonePropsFrom(bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config.clonePropsFrom(bodyNode,  type);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
633	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(ret);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(ret);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).clonePropsFrom(ret);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
634	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).clonePropsFrom(type);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
635	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(newNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).clonePropsFrom(newNode);	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
636	[BUG]  [BUGGY]  return  new  Node(ret.type,  config).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.type,  config).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.type,  config).clonePropsFrom(type);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
637	[BUG]  [BUGGY]  return  new  Node(ret.node,  type).clonePropsFrom(ret);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.node,  type).clonePropsFrom(ret);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.node,  type).clonePropsFrom(ret);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
638	[BUG]  [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.fnNode).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.fnNode).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
639	[BUG]  [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).clonePropsFrom(type,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).clonePropsFrom(type,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
640	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type),  this.fileOverviewInfo.newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type),  this.fileOverviewInfo.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type),  this.fileOverviewInfo.newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
641	[BUG]  [BUGGY]  return  new  Node(newNode,  this.bodyNode).newNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newNode,  this.bodyNode).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newNode,  this.bodyNode).newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
642	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type),  config.newNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type),  config.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type),  config.newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
643	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type),  this.fnNode).newNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type),  this.fnNode).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type),  this.fnNode).newNode();	  return    new    Node(this.bodyNode,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
644	[BUG]  [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  block);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  block);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this).clonePropsFrom(this,  block);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
645	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  block,  false);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
646	[BUG]  [BUGGY]  return  new  Node(this.bufferNode).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bufferNode).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bufferNode).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
647	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode,  this.bufferNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode,  this.bufferNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bindNode,  this.bufferNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
648	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.bufferNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.bufferNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.bufferNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
649	[BUG]  [BUGGY]  return  new  Node(this.assign,  this.reporter).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign,  this.reporter).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign,  this.reporter).clonePropsFrom(type);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
650	[BUG]  [BUGGY]  return  new  Node(this.assign,  type).clonePropsFrom(this.sourceName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign,  type).clonePropsFrom(this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign,  type).clonePropsFrom(this.sourceName);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
651	[BUG]  [BUGGY]  return  new  Node(this.assign).newNode(type);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).newNode(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).newNode(type);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
652	[BUG]  [BUGGY]  return  new  Node(this.assign,  type).clonePropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign,  type).clonePropsFrom(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign,  type).clonePropsFrom(this.bodyNode);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
653	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  fnNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  fnNode);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
654	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  null);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  null);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
655	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fileLevelJsDocBuilder,  null);	  return    new    Node(type).clonePropsFrom(this,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
656	[BUG]  [BUGGY]  return  new  Node(type).addPropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).addPropsFrom(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).addPropsFrom(this.bodyNode);	  return    new    Node(type).removePropsFrom(this.bodyNode);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
657	[BUG]  [BUGGY]  return  new  Node(type,  this.reporter).clonePropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.reporter).clonePropsFrom(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.reporter).clonePropsFrom(this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
658	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  type);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.reporter,  type);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
659	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  fileOverviewInfo.newNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  fileOverviewInfo.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  fileOverviewInfo.newNode();	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
660	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  this.newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  this.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  this.newNode();	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
661	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  node).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  node).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  node).newNode();	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
662	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  dataNode,  value);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  dataNode,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  dataNode,  value);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
663	[BUG]  [BUGGY]  return  new  Node(type,  value).clonePropsFrom(this,  templateNode,  value);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  value).clonePropsFrom(this,  templateNode,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  value).clonePropsFrom(this,  templateNode,  value);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
664	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  value);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  value);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
665	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  fnNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  fnNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    type);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
666	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.value);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    type);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
667	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  target);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  target);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    type);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
668	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  fileLevelJsDocBuilder).traverse(this);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  fileLevelJsDocBuilder).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  fileLevelJsDocBuilder).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
669	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode).traverse(this);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  newNode).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
670	[BUG]  [BUGGY]  return  new  Node(node,  config).clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  config).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  config).clone();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
671	[BUG]  [BUGGY]  return  new  Node(type,  config).getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).getParent();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
672	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  n,  newBlock);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  n,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  n,  newBlock);	  return    new    Node(type).clonePropsFrom(this,    newBlock);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
673	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  fileOverviewInfo.toString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  fileOverviewInfo.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  fileOverviewInfo.toString();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
674	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  this.fileLevelJsDocBuilder.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  this.fileLevelJsDocBuilder.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  this.fileLevelJsDocBuilder.toString();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
675	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type),  this.fileOverviewInfo.toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type),  this.fileOverviewInfo.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type),  this.fileOverviewInfo.toString();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
676	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(fnNode,  type));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(fnNode,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(fnNode,  type));	  NodeTraversal.traverse(compiler,    newNode(null,    type));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
677	[BUG]  [BUGGY]  return  new  Node(newBlock,  type),  config.newNode();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  type),  config.newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  type),  config.newNode();	  return    new    Node(newBlock,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
678	[BUG]  [BUGGY]  return  new  Node(type,  this.fnNode).clonePropsFrom(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.fnNode).clonePropsFrom(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.fnNode).clonePropsFrom(this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
679	[BUG]  [BUGGY]  return  new  Node(type,  this.fnNode).clonePropsFrom(this.child);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.fnNode).clonePropsFrom(this.child);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.fnNode).clonePropsFrom(this.child);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
680	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bindNode);	  return    new    Node(type).clonePropsFrom(this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
681	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(this,  type));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(this,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  newNode(this,  type));	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
682	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  false);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(this,  type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(this,  type),  false);	  NodeTraversal.traverse(compiler,    newNode(this,    type));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
683	[BUG]  [BUGGY]  return  new  Node(type,  getFlags()).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  getFlags()).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  getFlags()).newNode();	  return    new    Node(type,    this).newNode();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
684	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  this,  fileOverviewInfo);	  NodeTraversal.traverse(compiler,    newNode(type),    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
685	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  this,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  this,  fileLevelJsDocBuilder);	  NodeTraversal.traverse(compiler,    newNode(type),    this);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
686	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  type);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  type);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
687	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  this);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
688	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  null);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(this,  templateNode,  null);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
689	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceStringNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
690	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
691	[BUG]  [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.sourceName).clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
692	[BUG]  [BUGGY]  return  new  Node(type,  node).clonePropsFrom(this,  newNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  node).clonePropsFrom(this,  newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  node).clonePropsFrom(this,  newNode);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
693	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  node);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
694	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  sourceNode,  target);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  sourceNode,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  sourceNode,  target);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
695	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  target,  false);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    target);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
696	[BUG]  [BUGGY]  return  new  Node(this).clonePropsFrom(type,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this).clonePropsFrom(type,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this).clonePropsFrom(type,  false);	  return    new    Node(type).clonePropsFrom(this,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
697	[BUG]  [BUGGY]  return  new  Node(type).removePropsFrom(this,  false);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).removePropsFrom(this,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).removePropsFrom(this,  false);	  return    new    Node(type).clonePropsFrom(this,    false);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
698	[BUG]  [BUGGY]  return  new  Node(type,  this).cloneFunctionsFrom(this);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this).cloneFunctionsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this).cloneFunctionsFrom(this);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
699	[BUG]  [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this).clonePropsFrom(this,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this).clonePropsFrom(this,  node);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
700	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
701	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  fileOverviewInfo);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
702	[BUG]  [BUGGY]  return  new  Node(this.sourceStringNode).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceStringNode).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceStringNode).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
703	[BUG]  [BUGGY]  return  new  Node(type,  this.sourceStringNode).clonePropsFrom(this.assign,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.sourceStringNode).clonePropsFrom(this.assign,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.sourceStringNode).clonePropsFrom(this.assign,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceStringNode);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
704	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  config);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  config);	  NodeTraversal.traverse(compiler,    newNode(type));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
705	[BUG]  [BUGGY]  return  new  Node(this.fileOverviewInfo).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.fileOverviewInfo).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.fileOverviewInfo).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
706	[BUG]  [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.assign,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.assign,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.assign,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
707	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileNode,  this.assign);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fileNode,  this.assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fileNode,  this.assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
708	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  false,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type),  false,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type),  false,  fileOverviewInfo);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
709	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  target,  newNode(type),  false);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  target,  newNode(type),  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  target,  newNode(type),  false);	  NodeTraversal.traverse(compiler,    newNode(type),    false);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
710	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type);	  return    new    Node(Token.NAME,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
711	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  value,  target);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  value,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  value,  target);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    value);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
712	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(bodyNode,  config);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(bodyNode,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(bodyNode,  config);	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
713	[BUG]  [BUGGY]  return  new  Node(type,  config.clonePropsFrom(bodyNode,  type));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config.clonePropsFrom(bodyNode,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config.clonePropsFrom(bodyNode,  type));	  return    new    Node(type).clonePropsFrom(bodyNode,    config);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
714	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.block);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.block);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.block);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
715	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.blockNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.blockNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.blockNode);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
716	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  bodyNode);	  return    new    Node(type).clonePropsFrom(this.assign,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
717	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type),  this);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(type),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(type),  this);	  NodeTraversal.traverse(compiler,    new    TransformDispatcher());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
718	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.childNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.childNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.childNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
719	[BUG]  [BUGGY]  return  new  Node(null,  type).newNode(0);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type).newNode(0);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type).newNode(0);	  return    new    Node(null,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
720	[BUG]  [BUGGY]  return  new  Node(ret.type).newNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.type).newNode();	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
721	[BUG]  [BUGGY]  return  new  Node(ret.type,  type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.type,  type).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.type,  type).clonePropsFrom(this);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
722	[BUG]  [BUGGY]  return  new  Node(ret.node,  type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.node,  type).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.node,  type).clonePropsFrom(this);	  return    new    Node(ret.type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
723	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  config,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  config,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
724	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  target,  newNode());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  target,  newNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  target,  newNode());	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
725	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode(),  this);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode(),  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  newNode(),  this);	  NodeTraversal.traverse(compiler,    type,    newNode());    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
726	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  block);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bodyNode,  block);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bodyNode,  block);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    type);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
727	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  templateNode,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  templateNode,  reportErrorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  templateNode,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
728	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  reportErrorReporter);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  reportErrorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  reportErrorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    reportErrorReporter);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
729	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.parent);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  target,  this.parent);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  target,  this.parent);	  return    new    Node(type).clonePropsFrom(this.assign,    target);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
730	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bindNode,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
731	[BUG]  [BUGGY]  return  new  Node(this,  this.type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  this.type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  this.type).clonePropsFrom(type);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
732	[BUG]  [BUGGY]  return  new  Node(this,  type).newInstance();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).newInstance();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).newInstance();	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
733	[BUG]  [BUGGY]  return  new  Node(this,  type).removePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).removePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).removePropsFrom(type);	  return    new    Node(this,    type).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
734	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(int,  fnNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(int,  fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(int,  fnNode);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
735	[BUG]  [BUGGY]  return  new  Node(type,  fnNode).clonePropsFrom(ret,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  fnNode).clonePropsFrom(ret,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  fnNode).clonePropsFrom(ret,  type);	  return    new    Node(type).clonePropsFrom(ret,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
736	[BUG]  [BUGGY]  return  new  Node(type,  this).removePropsFrom(this);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this).removePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this).removePropsFrom(this);	  return    new    Node(type,    this).clonePropsFrom(this);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
737	[BUG]  [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(config,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(config,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret,  type).clonePropsFrom(config,  type);	  return    new    Node(type).clonePropsFrom(ret,    config);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
738	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  newBlock);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  newBlock);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
739	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  newName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  newName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  newName);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
740	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  target,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  target,  type);	  return    new    Node(type).clonePropsFrom(this,    target);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
741	[BUG]  [BUGGY]  return  new  Node(this.assign,  this.fileOverviewInfo).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign,  this.fileOverviewInfo).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign,  this.fileOverviewInfo).clonePropsFrom(type);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
742	[BUG]  [BUGGY]  return  new  Node(this.assign).newNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign).newNode();	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
743	[BUG]  [BUGGY]  return  new  Node(this.assign,  type).clonePropsFrom(this.type);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.assign,  type).clonePropsFrom(this.type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.assign,  type).clonePropsFrom(this.type);	  return    new    Node(this.assign).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
744	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  n,  this);	  NodeTraversal.traverse(compiler,    type,    this);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
745	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.templateNode,  type);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.sourceName,  this.templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.sourceName,  this.templateNode,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
746	[BUG]  [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  type);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.sourceName).clonePropsFrom(this.assign,  this.templateNode,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
747	[BUG]  [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type,  this.templateNode);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type,  this.templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.sourceName).clonePropsFrom(this.assign,  type,  this.templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
748	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).removeFirstChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).removeFirstChild();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
749	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).removeFirst();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).removeFirst();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).removeFirst();	  return    new    Node(Token.NAME,    type).toString();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
750	[BUG]  [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.assign,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.assign,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.assign,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
751	[BUG]  [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  newBlock);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).clonePropsFrom(this,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).clonePropsFrom(this,  newBlock);	  return    new    Node(type).clonePropsFrom(this,    newBlock);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
752	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  newBlock,  type);	  return    new    Node(type).clonePropsFrom(this,    newBlock);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
753	[BUG]  [BUGGY]  return  new  Node(this,  _config).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  _config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  _config).newNode();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
754	[BUG]  [BUGGY]  return(new  Node(this,  type)).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return(new  Node(this,  type)).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return(new  Node(this,  type)).newNode();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
755	[BUG]  [BUGGY]  return  new  Node(this,  this.type).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  this.type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  this.type).newNode();	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
756	[BUG]  [BUGGY]  return  new  Node(this,  type).newNode(this.bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).newNode(this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).newNode(this.bodyNode);	  return    new    Node(this,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
757	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  fileLevelJsDocBuilder,  sourceString);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
758	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  sourceStringNode).traverse(this);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  sourceStringNode).traverse(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  sourceStringNode).traverse(this);	  NodeTraversal.traverse(compiler,    this).traverse(this);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
759	[BUG]  [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  this.fileOverviewInfo).clonePropsFrom(this.bodyNode,  type);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
760	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  this);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(irNode,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(irNode,  this);	  return    new    Node(type).clonePropsFrom(irNode);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
761	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  false).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  false).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  false).newNode();	  return    new    Node(type,    false).newNode();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
762	[BUG]  [BUGGY]  return  new  Node(node,  type).newBlock();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(node,  type).newBlock();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(node,  type).newBlock();	  return    new    Node(node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
763	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fnNode,  bodyNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
764	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(block,  fnNode,  bodyNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(block,  fnNode,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(block,  fnNode,  bodyNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
765	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(buffer,  fnNode,  bodyNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(buffer,  fnNode,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(buffer,  fnNode,  bodyNode);	  return    new    Node(type).clonePropsFrom(fnNode,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
766	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  bodyNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  bodyNode);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
767	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  target);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  target);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
768	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  block);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  block);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  block);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
769	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  c);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  c);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  c);	  return    new    Node(type).clonePropsFrom(this.assign,    c);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
770	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  c,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  c,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  c,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    c);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
771	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  type).clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  type).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  type).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
772	[BUG]  [BUGGY]  return  new  Node(this.node,  this.type,  this.fileOverviewInfo).clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  this.type,  this.fileOverviewInfo).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  this.type,  this.fileOverviewInfo).clone();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
773	[BUG]  [BUGGY]  return  new  Node(this.node,  type).newInstance();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type).newInstance();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type).newInstance();	  return    new    Node(this.node,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
774	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  this.errorReporter);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  templateNode,  this.errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  templateNode,  this.errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
775	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  errorReporter);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  config,  templateNode,  errorReporter);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
776	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.assign,  this.sourceName);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.rootNode,  this.assign,  this.sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.rootNode,  this.assign,  this.sourceName);	  return    new    Node(type).clonePropsFrom(this.assign,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
777	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  message);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  bodyNode,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
778	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  charset,  message);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  charset,  message);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  charset,  message);	  return    new    Node(type).clonePropsFrom(this,    templateNode,    message);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
779	[BUG]  [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret,  type).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret,  type).clonePropsFrom(this);	  return    new    Node(ret).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
780	[BUG]  [BUGGY]  return  new  Node(ret,  node).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret,  node).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret,  node).clonePropsFrom(type);	  return    new    Node(ret).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
781	[BUG]  [BUGGY]  return  new  Node(this.report,  type).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.report,  type).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.report,  type).clonePropsFrom(type);	  return    new    Node(type).clonePropsFrom(this.report);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
782	[BUG]  [BUGGY]  return  new  Node(this.node,  this.bodyNode).newNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  this.bodyNode).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  this.bodyNode).newNode();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
783	[BUG]  [BUGGY]  return  new  Node(this.node,  type),  this.newBlock();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.node,  type),  this.newBlock();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.node,  type),  this.newBlock();	  return    new    Node(this.node,    type).newNode();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
784	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  sourceName,  templateNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  sourceName,  templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  sourceName,  templateNode);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    this.sourceName);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
785	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  config,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  config,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
786	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  assign,  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  assign,  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  assign,  config);	  return    new    Node(type).clonePropsFrom(this.assign,    templateNode,    config);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
787	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  assign);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  assign);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
788	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  c);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  block,  c);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  block,  c);	  return    new    Node(type).clonePropsFrom(this,    block);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
789	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type,  this).newNode();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type,  this).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type,  this).newNode();	  return    new    Node(Token.NAME,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
790	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  this.fnNode).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  this.fnNode).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  this.fnNode).clonePropsFrom(type);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
791	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).newNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).newNode();	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
792	[BUG]  [BUGGY]  return  new  Node(this.bodyNode).newNode(type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode).newNode(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode).newNode(type);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
793	[BUG]  [BUGGY]  return  new  Node(this.bodyNode,  this.reporter).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bodyNode,  this.reporter).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bodyNode,  this.reporter).clonePropsFrom(type);	  return    new    Node(this.bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
794	[BUG]  [BUGGY]  return  new  Node(null,  type).newInstance();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type).newInstance();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type).newInstance();	  return    new    Node(null,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
795	[BUG]  [BUGGY]  return  new  Node(null,  type).newBlock();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(null,  type).newBlock();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(null,  type).newBlock();	  return    new    Node(null,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
796	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  target,  newNode(type));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  target,  newNode(type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  target,  newNode(type));	  NodeTraversal.traverse(compiler,    newNode(type));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
797	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
798	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.report,  templateNode,  this.fileOverviewInfo);	  return    new    Node(type).clonePropsFrom(this.report,    templateNode);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
799	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  type);	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
800	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  this).newNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  this).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  this).newNode();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
801	[BUG]  [BUGGY]  return  new  Node(Token.NEW,  type).remove();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW,  type).remove();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW,  type).remove();	  return    new    Node(Token.NEW).clone();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
802	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  newImpl());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  newImpl());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  newImpl());	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
803	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  null);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  null);	  NodeTraversal.traverse(compiler,    this);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
804	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  value);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  value);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
805	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  value);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.bodyNode,  value);	  return    new    Node(type).clonePropsFrom(this.assign,    value);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
806	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.block,  this.fnNode,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.block,  this.fnNode,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.block,  this.fnNode,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
807	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  bodyNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fnNode,  bodyNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
808	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode,  this.fnNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bindNode,  this.fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bindNode,  this.fnNode);	  return    new    Node(type).clonePropsFrom(this.bodyNode,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
809	[BUG]  [BUGGY]  return  new  Node(newBlock,  getFlags(),  type);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(newBlock,  getFlags(),  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(newBlock,  getFlags(),  type);	  return    new    Node(newBlock).newNode();    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
810	[BUG]  [BUGGY]  return  new  Node(tokenBuffer,  type,  config).clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(tokenBuffer,  type,  config).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(tokenBuffer,  type,  config).clone();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
811	[BUG]  [BUGGY]  return  new  Node(tokenType,  config).clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(tokenType,  config).clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(tokenType,  config).clone();	  return    new    Node(type,    config).clone();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
812	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  Arrays.asList(ret));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  Arrays.asList(ret));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  Arrays.asList(ret));	  return    new    Node(type).clonePropsFrom(this,    ret);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
813	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  Arrays.asList(newNode));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  Arrays.asList(newNode));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  Arrays.asList(newNode));	  return    new    Node(type).clonePropsFrom(this,    ret);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
814	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  this.bodyNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.reporter,  this.bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.reporter,  this.bodyNode);	  return    new    Node(type).clonePropsFrom(this.reporter);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
815	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  target);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  target);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fnNode,  target);	  return    new    Node(type).clonePropsFrom(this,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
816	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  newBlock);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  fnNode,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  fnNode,  newBlock);	  return    new    Node(type).clonePropsFrom(this,    fnNode);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
817	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(this);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).clonePropsFrom(this);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
818	[BUG]  [BUGGY]  return  new  Node(Token.NEW).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NEW).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NEW).clonePropsFrom(type);	  return    new    Node(bodyNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
819	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  type);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.buffer,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    type);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
820	[BUG]  [BUGGY]  return  new  Node(ret,  type).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret,  type).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret,  type).newNode();	  return    new    Node(ret,    type).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
821	[BUG]  [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(fnNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(Token.NAME,  type).clonePropsFrom(fnNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(Token.NAME,  type).clonePropsFrom(fnNode);	  return    new    Node(fnNode).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
822	[BUG]  [BUGGY]  return  new  Node(this,  type).newBlock();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this,  type).newBlock();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this,  type).newBlock();	  return    new    Node(this,    type).clone();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
823	[BUG]  [BUGGY]  return  new  Node(context,  type,  config).newNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(context,  type,  config).newNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(context,  type,  config).newNode();	  return    new    Node(type,    config).newNode();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
824	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  assign);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.fnNode,  assign);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.fnNode,  assign);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
825	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.sourceStringNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.sourceStringNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.assign,  this.fnNode,  this.sourceStringNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.fnNode);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
826	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  newBlock,  node);	  return    new    Node(type).clonePropsFrom(this,    node);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
827	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  bodyNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  newBlock,  bodyNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  newBlock,  bodyNode);	  return    new    Node(type).clonePropsFrom(this,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
828	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this,  bodyNode,  c);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this,  bodyNode,  c);	  return    new    Node(type).clonePropsFrom(this,    bodyNode);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
829	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  this,  type));  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  this,  type));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  new  TransformDispatcher(this,  this,  type));	  NodeTraversal.traverse(compiler,    new    TransformDispatcher(this,    type));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
830	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode(false));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  type,  newNode(false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  type,  newNode(false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
831	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false),  config);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  newNode(type,  false),  config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  newNode(type,  false),  config);	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
832	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(type,  false));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  NodeTraversal.traverse(compiler,  this,  newNode(type,  false));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	NodeTraversal.traverse(compiler,  this,  newNode(type,  false));	  NodeTraversal.traverse(compiler,    newNode(type,    false));    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
833	[BUG]  [BUGGY]  return  new  Node(ret.getNext()).clonePropsFrom(type);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(ret.getNext()).clonePropsFrom(type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(ret.getNext()).clonePropsFrom(type);	  return    new    Node(ret.getType()).clonePropsFrom(type);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
834	[BUG]  [BUGGY]  return  new  Node(type,  config.clonePropsFrom(fnNode,  type);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config.clonePropsFrom(fnNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config.clonePropsFrom(fnNode,  type);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
835	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(fnNode,  newBlock);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(fnNode,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(fnNode,  newBlock);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
836	[BUG]  [BUGGY]  return  new  Node(type,  config).clonePropsFrom(fnNode,  this);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type,  config).clonePropsFrom(fnNode,  this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type,  config).clonePropsFrom(fnNode,  this);	  return    new    Node(type).clonePropsFrom(fnNode,    config);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
837	[BUG]  [BUGGY]  return  new  Node(this.bufferNode).clonePropsFrom(type,  this.assign,  this.bufferNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(this.bufferNode).clonePropsFrom(type,  this.assign,  this.bufferNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(this.bufferNode).clonePropsFrom(type,  this.assign,  this.bufferNode);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
838	[BUG]  [BUGGY]  return  new  Node(type).clonePropsFrom(this.bufferNode,  type);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  Node  newNode(int  type)  {      [BUGGY]  return  new  Node(type).clonePropsFrom(this.bufferNode,  type);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  newNode  [RETURN_TYPE]  Node  int  type  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	return  new  Node(type).clonePropsFrom(this.bufferNode,  type);	  return    new    Node(type).clonePropsFrom(this.assign,    this.bufferNode);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
