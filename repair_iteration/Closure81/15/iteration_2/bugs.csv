bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.errorReporter  =  new  ErrorReporter(errorReporter);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  new  ErrorReporter(errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  new  ErrorReporter(errorReporter);	  this.errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
2	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  new  ErrorReporter();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  new  ErrorReporter();  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  new  ErrorReporter();  }	  this.errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
3	[BUG]  [BUGGY]  this.errorReporter  =  new  errorReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  new  errorReporter();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  new  errorReporter();	  this.errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
4	[BUG]  [BUGGY]  this.errorReporter  =  new  ErrorReporter(sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  new  ErrorReporter(sourceString);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  new  ErrorReporter(sourceString);	  this.errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
5	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter()  :  errorReporter;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter()  :  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter()  :  errorReporter;	  this.errorReporter    =    errorReporter    {    null?    new    ErrorReporter()    :    errorReporter;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
6	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  new  ErrorReporter()  :  errorReporter;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  new  ErrorReporter()  :  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  new  ErrorReporter()  :  errorReporter;	  this.errorReporter    =    errorReporter    {    null?    new    ErrorReporter()    :    errorReporter;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter(sourceName):  errorReporter;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter(sourceName):  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter(sourceName):  errorReporter;	  this.errorReporter    =    errorReporter    {    null?    new    ErrorReporter()    :    errorReporter;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  this.errorReporter  =  errorsReporter  ==  null?  new  ErrorReporter()  :  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorsReporter  ==  null?  new  ErrorReporter()  :  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorsReporter  ==  null?  new  ErrorReporter()  :  errorReporter;	  this.errorReporter    =    errorReporter    {    null?    new    ErrorReporter()    :    errorReporter;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
10	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
12	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
14	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
15	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
16	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNode();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  this.rootNodeJsDocHolder  =  rootNodeJsDocBuilder.getRootNode();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocHolder  =  rootNodeJsDocBuilder.getRootNode();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocHolder  =  rootNodeJsDocBuilder.getRootNode();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneTree();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneTree();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneTree();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  createRootNode();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  createRootNode();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  createRootNode();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  errorReporter;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  errorReporter;	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  errorReporter;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  errorReporter;	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter  {  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter  {  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter  {  }	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  <  ErrorReporter>;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  <  ErrorReporter>;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  <  ErrorReporter>;	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  this.errorReporter  =  ErrorReporter.ERROR_REPORTER;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  ErrorReporter.ERROR_REPORTER;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  ErrorReporter.ERROR_REPORTER;	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  >=  null?  errorReporter  :  new  ErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  >=  null?  errorReporter  :  new  ErrorReporter();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  >=  null?  errorReporter  :  new  ErrorReporter();	  this.errorReporter    =    errorReporter    <    null?    errorReporter    :    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  >>  null?  errorReporter  :  new  ErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  >>  null?  errorReporter  :  new  ErrorReporter();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  >>  null?  errorReporter  :  new  ErrorReporter();	  this.errorReporter    =    errorReporter    <    null?    errorReporter    :    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  config,  errorReporter);	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  config,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  config,  null);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  config,  null);	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  config,  sourceString);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  config,  sourceString);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  config,  sourceString);	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  config,  new  ErrorReporter());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  config,  new  ErrorReporter());  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  config,  new  ErrorReporter());	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  config,  false);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  config,  false);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  config,  false);	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    ErrorReporter(config);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
36	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(config,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    ErrorReporter(config);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
37	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    ErrorReporter(config);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
38	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config,  sourceString);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config,  sourceString);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(config,  sourceString);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    ErrorReporter(config);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(config,  sourceString);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(config,  sourceString);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(config,  sourceString);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    ErrorReporter(config);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
40	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(sourceString);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(sourceString);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(sourceString);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
43	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(sourceString);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(sourceString);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(sourceString);	  this.errorReporter    =    errorReporter    ==    null?    errorReporter    :    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(sourceName);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  ErrorReporter(sourceName);	  this.errorReporter    =    errorReporter    ==    null?    errorReporter    :    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null;	  this.errorReporter    =    errorReporter    }    ;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  null  :  errorReporter;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  null  :  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  null  :  errorReporter;	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null;	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  false  :  errorReporter;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  false  :  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  false  :  errorReporter;	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  false;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  false;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  false;	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(sourceName);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  ErrorReporter(sourceName);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceString,  sourceName);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceName,  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceName,  config);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceName,  config);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
54	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  else  {  this.errorReporter  =  new  ErrorReporter();  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  else  {  this.errorReporter  =  new  ErrorReporter();  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  else  {  this.errorReporter  =  new  ErrorReporter();  }	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  else  {  this.errorReporter  =  errorReporter;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  else  {  this.errorReporter  =  errorReporter;  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  else  {  this.errorReporter  =  errorReporter;  }	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  else  {  this.errorReporter  =  new  ErrorReporter();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  else  {  this.errorReporter  =  new  ErrorReporter();  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  else  {  this.errorReporter  =  new  ErrorReporter();  }	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
57	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  errorsReporter;  }	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
58	[BUG]  [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  else  {  this.errorReporter  =  errorReporter;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  else  {  this.errorReporter  =  errorReporter;  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter!=  null)  {  this.errorReporter  =  errorReporter;  }  else  {  this.errorReporter  =  errorReporter;  }	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
59	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceName,  config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(sourceName,  config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
60	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceName,  config,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(sourceName,  config,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
61	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  sourceName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  sourceName);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  sourceName);	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  sourceString);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  sourceString);	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.getErrorReporter();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	ErrorReporter  errorReporter  =  errorReporter.getErrorReporter();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.createErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.createErrorReporter();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	ErrorReporter  errorReporter  =  errorReporter.createErrorReporter();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  errorReporter;	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
66	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceName,  errorReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceName,  errorReporter);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder;	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.reportError();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.reportError();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	ErrorReporter  errorReporter  =  errorReporter.reportError();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  if(errorReporter  ==  null)  {  this.errorReporter  =  errorReporter;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  if(errorReporter  ==  null)  {  this.errorReporter  =  errorReporter;  }  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	if(errorReporter  ==  null)  {  this.errorReporter  =  errorReporter;  }	  this.errorReporter    =    errorReporter    {    }    ;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter(sourceString):  errorReporter;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter(sourceString):  errorReporter;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  new  ErrorReporter(sourceString):  errorReporter;	  this.errorReporter    =    errorReporter    {    null?    new    ErrorReporter()    :    errorReporter;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
71	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  config);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter!=  null?  errorReporter  :  new  IRFactory(config,  sourceString,  sourceName,  config);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
72	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  ==  null?  errorReporter  :  new  IRFactory(config,  sourceString,  config);	  this.errorReporter    =    errorReporter!=    null?    errorReporter    :    new    IRFactory(config,    sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
73	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  {  null?  errorsReporter  :  new  ErrorReporter();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  {  null?  errorsReporter  :  new  ErrorReporter();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  {  null?  errorsReporter  :  new  ErrorReporter();	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
74	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  <  null?  errorsReporter  :  new  ErrorReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  <  null?  errorsReporter  :  new  ErrorReporter();  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  <  null?  errorsReporter  :  new  ErrorReporter();	  this.errorReporter    =    errorsReporter;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
75	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter  }  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter  }  config;  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter  }  config;	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
76	[BUG]  [BUGGY]  this.errorReporter  =  errorReporter,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;    [BUGGY]  this.errorReporter  =  errorReporter,  config,  errorsReporter);  [BUGGY]    this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	this.errorReporter  =  errorReporter,  config,  errorsReporter);	  this.errorReporter    =    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
