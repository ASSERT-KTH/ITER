bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
2	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "ArrayList ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "ArrayList ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "ArrayList ";	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "java.util.ArrayList ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "java.util.ArrayList ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "java.util.ArrayList ";	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  this.sourceName  =  SourceUtil.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  SourceUtil.getSourceName(sourceName);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  SourceUtil.getSourceName(sourceName);	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
8	[BUG]  [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  SourceUtils.getSourceName(sourceName);	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
10	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/ ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "/ ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/ ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_ ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "_ ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_ ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ": ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "null ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "null ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "null ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "- ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "- ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "- ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "# ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "# ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "# ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",: "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".: "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getRawErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getRawErrorReporter();	  this.sourceName    =    sourceName    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getErrorReporter();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getErrorReporter();	  this.sourceName    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName);	  this.sourceName    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalFileName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getResourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getResourceName();	  this.sourceName    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getRawReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getRawReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getRawReporter();	  this.sourceName    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "._ "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "._ "  +  config.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "._ "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
29	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",_ "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ",_ "  +  config.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",_ "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_ "  +  config.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "_ "  +  config.toString();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_ "  +  config.toString();	  this.sourceName    =    sourceName    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
31	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error "  +  sourceName,  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error "  +  sourceName,  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.Error "  +  sourceName,  config);	  this.sourceName    =   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  this.sourceName  =  sourceName,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName,  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,  config);	  this.sourceName    =   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
33	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName,  config,  errorReporter);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.Error ",  sourceName,  config,  errorReporter);	  this.sourceName    =   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
34	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.toString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.toString();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.toString();	  this.sourceName    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
35	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getQualifiedName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getQualifiedName();	  this.sourceName    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSourceName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getSourceName();	  this.sourceName    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
37	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getLocalName();	  this.sourceName    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
38	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getRawSourceName();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getRawSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getRawSourceName();	  this.sourceName    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "._ "  +  config.getErrorReporter();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "._ "  +  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "._ "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",_ "  +  config.getErrorReporter();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ",_ "  +  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",_ "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  sourceName;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  sourceName;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  sourceName;	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
42	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/FileLevelJsDocBuilder ";  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "/FileLevelJsDocBuilder ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/FileLevelJsDocBuilder ";	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
43	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName();	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
44	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ".toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ".toString();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder ".toString();	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
45	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  errorReporter;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ": "  +  errorReporter;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  errorReporter;	  this.sourceName    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",: "  +  config;	  this.sourceName    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  config: "  +  config;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ",  config: "  +  config;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  config: "  +  config;	  this.sourceName    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".: "  +  config;	  this.sourceName    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }	  this.sourceName    =   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
50	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }	  this.sourceName    =   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
51	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }	  this.sourceName    =   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }	  this.sourceName    =   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
55	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  unclosed  string  literal  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
56	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
57	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  sourceName;  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  sourceName;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  sourceName;	  this.sourceName    =   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  unclosed  string  literal	1	None	replace
58	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ");  [CE]  unclosed  string  literal  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ");	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
59	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ");  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ");	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
60	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  config);  [CE]  unclosed  string  literal  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  config);	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
61	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ");  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ");	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
62	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ".equals(errorReporter));  [CE]  unclosed  string  literal  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ".equals(errorReporter));  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ".equals(errorReporter));	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  unclosed  string  literal	4	None	replace
63	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName);  [CE]  unclosed  string  literal  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName);	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ",    sourceName);    	non-compiled	[CE]  unclosed  string  literal	18	None	replace
64	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName;	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ",    sourceName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
65	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  config);	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ",    sourceName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
66	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  errorReporter);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  errorReporter);	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ",    sourceName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
67	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
68	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
69	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
70	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError "));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError "));  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError "));	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config);	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
73	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneTree();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneTree();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneTree();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.clone();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.clone();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
77	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNode();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
81	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.SyntaxError ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "commons.report.SyntaxError ");	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
82	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getSourceName();	  this.sourceName    =    sourceName    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
83	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getSourceName();	  this.sourceName    =    sourceName    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
84	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getSourceName();	  this.sourceName    =    sourceName    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName();	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
86	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".java.util.ArrayList ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".java.util.ArrayList ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".java.util.ArrayList ";	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
87	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".jsDocBuilder ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".jsDocBuilder ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".jsDocBuilder ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
88	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/null ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "/null ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/null ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
89	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".node ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".node ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".node ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
90	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "node ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "node ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "node ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
91	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";	  this.sourceName    =   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	1	None	replace
92	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
93	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
94	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.Error ";	  this.sourceName    =   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  <identifier>  expected	3	None	replace
95	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
96	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ";	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
97	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder "  +  sourceName;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder "  +  sourceName;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.JsDocBuilder "  +  sourceName;	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
99	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
100	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
101	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ".equals(errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ".equals(errorReporter);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.Error ".equals(errorReporter);	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
102	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ");	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	14	None	replace
104	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.joda.FileLevelJsDocBuilder ";  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "org.joda.FileLevelJsDocBuilder ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.joda.FileLevelJsDocBuilder ";	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	14	None	replace
105	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	14	None	replace
106	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	14	None	replace
107	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	14	None	replace
108	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceNameReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSourceNameReporter();	  this.sourceName    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getReporter();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getReporter();	  this.sourceName    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
110	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
111	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSimpleName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  +  config.getSimpleName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSimpleName();	  this.sourceName    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
112	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  errorReporter);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  errorReporter);	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ",    sourceName);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
113	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
114	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  config.getErrorReporter();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  ErrorReporter  errorReporter  =  config.getErrorReporter();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  config.getErrorReporter();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
115	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
116	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  errorReporter;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  errorReporter;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".: "  +  errorReporter;	  this.sourceName    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
117	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
118	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  config;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  config;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js "  +  config;	  this.sourceName    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
119	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js. "  +  config;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".js. "  +  config;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js. "  +  config;	  this.sourceName    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
120	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getLocalFileName();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getLocalFileName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
121	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config.getSourceName();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config.getSourceName();  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".: "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
122	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  config);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  config);	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ",    sourceName);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
123	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }	  this.sourceName    =   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
124	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }	  this.sourceName    =   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
125	[BUG]  [BUGGY]  this.sourceName  =  config, "org.apache.commons.report.Error ",  sourceName,  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  config, "org.apache.commons.report.Error ",  sourceName,  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  config, "org.apache.commons.report.Error ",  sourceName,  config);	  this.sourceName    =   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
126	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  config);  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  config);	  this.sourceName    =   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
127	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "java.commons.report.Error ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName.equals( "java.commons.report.Error ");  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "java.commons.report.Error ");	  this.sourceName    =   "org.apache.commons.report.Error   ".equals(sourceName);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
128	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js ";  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".js ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
129	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js. ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + ".js. ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js. ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
130	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/. ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.sourceName  =  sourceName  + "/. ";  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/. ";	  this.sourceName    =    sourceName    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	10	None	replace
131	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
132	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
133	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }	  this.sourceName    =   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
134	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder;  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
135	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;    [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [BUGGY]    this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }	  this.sourceName    =   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  <identifier>  expected	3	None	replace
