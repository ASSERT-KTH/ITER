bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNode;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
2	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
3	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  sourceName;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
4	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJSDocBuilder;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJSDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJSDocBuilder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
5	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeHolder;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeHolder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeHolder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
6	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.: "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ".:   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
7	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ". "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ". "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ". "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ".:   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
8	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/._ "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/._ "  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/._ "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   "._   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
9	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separatorChar  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   "._   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
10	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  null;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  null;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
11	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder.clone();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder.clone();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder.clone();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
12	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.build();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.build();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.build();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
13	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName.clone();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName.clone();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  sourceName.clone();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
14	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getParent();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getParent();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getParent();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
15	[BUG]  [BUGGY]  this.sourceName  =  sourceString;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString;	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
16	[BUG]  [BUGGY]  this.sourceName  =  config.getFileLevelJsDocBuilder();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  config.getFileLevelJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  config.getFileLevelJsDocBuilder();	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
17	[BUG]  [BUGGY]  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
18	[BUG]  [BUGGY]  this.sourceName  =  getFileLevelJsDocBuilder();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  getFileLevelJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  getFileLevelJsDocBuilder();	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
19	[BUG]  [BUGGY]  this.sourceName  =  new  FileLevelJsDocBuilder();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  new  FileLevelJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  new  FileLevelJsDocBuilder();	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
20	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ".toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ".toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ".toString();	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
21	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  errorReporter);	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
22	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").equals(errorReporter);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").equals(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").equals(errorReporter);	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
23	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  errorReporter));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  errorReporter));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  errorReporter));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
24	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error "  +  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error "  +  errorReporter);	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
25	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ".equals(errorReporter));  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ".equals(errorReporter));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ".equals(errorReporter));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
26	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "SyntaxError ";  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "SyntaxError ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "SyntaxError ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceName,  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
30	[BUG]  [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,   "org.apache.commons.report.SyntaxError ");	  this.sourceName    =       "org.apache.commons.report.SyntaxError   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
31	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.js. ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.js. ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.js. ";	  this.sourceName    =    sourceName    +   ".js.   ";    	non-compiled	[CE]  <identifier>  expected	129	None	replace
32	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js ".trim();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js ".trim();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js ".trim();	  this.sourceName    =    sourceName    +   ".js.   ";    	non-compiled	[CE]  <identifier>  expected	129	None	replace
33	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "Error "  +  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "Error "  +  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "Error "  +  config);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
34	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error "  +  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error "  +  sourceName,  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.Error "  +  sourceName,  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
35	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separatorChar  +  config);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
36	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter,  config);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
37	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(sourceName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(sourceName);	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
38	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(config);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(config);	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
39	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(fileLevelJsDocBuilder);	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
40	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(rootNode);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(rootNode);	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
41	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(0);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(0);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(0);	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
42	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(null);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(null);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(null);	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	115	None	replace
43	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.js ";  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.js ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.js ";	  this.sourceName    =    sourceName    +   ".js   ";    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
44	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js ",  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js ",  config);	  this.sourceName    =    sourceName    +   ".js   ";    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
45	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  js ";  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  js ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  js ";	  this.sourceName    =    sourceName    +   ".js   ";    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
46	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".null ";  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".null ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".null ";	  this.sourceName    =    sourceName    +   "null   ";    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
47	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  null ";  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  null ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  null ";	  this.sourceName    =    sourceName    +   "null   ";    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
48	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "null ",  config);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "null ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "null ",  config);	  this.sourceName    =    sourceName    +   "null   ";    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
50	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceString;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
51	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceString);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceString);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError ",  sourceString);	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
52	[BUG]  [BUGGY]  this.sourceName  =  config.getSyntaxErrorReporter();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  config.getSyntaxErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  config.getSyntaxErrorReporter();	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
53	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
54	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
55	[BUG]  [BUGGY]  this.sourceName  =  JsDocBuilder.class.getSimpleName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  JsDocBuilder.class.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  JsDocBuilder.class.getSimpleName();	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
56	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.JSDocBuilder ";  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.JSDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.JSDocBuilder ";	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
57	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
58	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
59	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ".equals(sourceName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ".equals(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder ".equals(sourceName);	  if(sourceName    ==    null)    {    this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
60	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",: "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
61	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getQualifiedName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getQualifiedName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getQualifiedName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
62	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.toString();	  this.sourceName    =    sourceName    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
63	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getSimpleName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getSimpleName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
64	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getResourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getResourceName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
65	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder;	  this.sourceName    =    sourceName    +   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	104	None	replace
67	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.toString();	  this.sourceName    =    sourceName    +   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	104	None	replace
68	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FILE_NAME;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FILE_NAME;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FILE_NAME;	  this.sourceName    =    sourceName    +   "org.joda.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	104	None	replace
69	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null)    {    this.sourceName    =    sourceName;    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
70	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null)    {    this.sourceName    =    sourceName;    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
71	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separatorChar  +  errorReporter;	  this.sourceName    =    sourceName    +   ".java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	86	None	replace
72	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/ArrayList ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/ArrayList ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/ArrayList ";	  this.sourceName    =    sourceName    +   ".java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	86	None	replace
73	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".java.util.ArrayList ",  config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".java.util.ArrayList ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".java.util.ArrayList ",  config);	  this.sourceName    =    sourceName    +   ".java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	86	None	replace
74	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
75	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getQualifiedName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getQualifiedName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getQualifiedName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
76	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(config);	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
77	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.class.getSimpleName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
78	[BUG]  [BUGGY]  this.sourceName  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
79	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
80	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter: ";  [CE]  unclosed  string  literal  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter: ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  errorReporter: ";	  this.sourceName    =    sourceName    +   ":   ";    	non-compiled	[CE]  unclosed  string  literal	15	None	replace
81	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "./ ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "./ ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "./ ";	  this.sourceName    =    sourceName    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
82	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName,  errorReporter);	  this.sourceName    =    sourceName    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
83	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getErrorReporter(config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getErrorReporter(config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getErrorReporter(config);	  this.sourceName    =    sourceName    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
84	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getErrorReporter(errorReporter);	  this.sourceName    =    sourceName    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
85	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName)+  1;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName)+  1;	  this.sourceName    =    sourceName    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
86	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getConfig().getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getConfig().getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getConfig().getErrorReporter();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
87	[BUG]  [BUGGY]  this.sourceName  +=  '_'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  +=  '_'  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  +=  '_'  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
88	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getResourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getResourceName();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
89	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
90	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getReporter();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
91	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "commons.report.SyntaxError ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
92	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().startsWith( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().startsWith( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().startsWith( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
93	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  config);	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
94	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ".toLowerCase());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ".toLowerCase());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ".toLowerCase());	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
95	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "report.SyntaxError ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
96	[BUG]  [BUGGY]  this.sourceName  =  SourceUtil.getSourceName(sourceName,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  SourceUtil.getSourceName(sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  SourceUtil.getSourceName(sourceName,  config);	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
97	[BUG]  [BUGGY]  this.sourceName  =  SourceUtil.getSourceName(sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  SourceUtil.getSourceName(sourceName,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  SourceUtil.getSourceName(sourceName,  errorReporter);	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
98	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  sourceName;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  sourceName;	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
99	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceName);	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
100	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtil.getSourceName(sourceName):  sourceName;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtil.getSourceName(sourceName):  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?  SourceUtil.getSourceName(sourceName):  sourceName;	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
101	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?  sourceName  :  SourceUtil.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?  sourceName  :  SourceUtil.getSourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?  sourceName  :  SourceUtil.getSourceName(sourceName);	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
102	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getParentNode();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getParentNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getParentNode();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
103	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.findRootNode();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.findRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.findRootNode();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
104	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRawNode();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRawNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRawNode();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
105	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ").equals( "org.apache.commons.report.SyntaxError "));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ").equals( "org.apache.commons.report.SyntaxError "));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ").equals( "org.apache.commons.report.SyntaxError "));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
106	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.equals( "org.apache.commons.report.SyntaxError "));  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.equals( "org.apache.commons.report.SyntaxError "));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.equals( "org.apache.commons.report.SyntaxError "));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
107	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError "));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError "));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ".equals( "org.apache.commons.report.SyntaxError "));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
108	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",   "org.apache.commons.report.SyntaxError "));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",   "org.apache.commons.report.SyntaxError "));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",   "org.apache.commons.report.SyntaxError "));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
109	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ";	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
110	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  config);	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
111	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  errorReporter);	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
112	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "commons.report.Error ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "commons.report.Error ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
113	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.ErrorReporter ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.ErrorReporter ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.ErrorReporter ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
114	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ".trim());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ".trim());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ".trim());	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
115	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =    FileLevelJsDocBuilder.class.getSimpleName();    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
116	[BUG]  [BUGGY]  ||  sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ||  sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	||  sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =    FileLevelJsDocBuilder.class.getSimpleName();    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
117	[BUG]  [BUGGY]  This.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  This.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	This.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();	  if(sourceName    ==    null)    {    this.sourceName    =    FileLevelJsDocBuilder.class.getSimpleName();    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
118	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null)    {    this.sourceName    =    FileLevelJsDocBuilder.class.getSimpleName();    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
119	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder;	  this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
120	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "FileLevelJsDocBuilder ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "FileLevelJsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "FileLevelJsDocBuilder ";	  this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
121	[BUG]  [BUGGY]  this.sourceName  =  sourceString  +  FileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString  +  FileLevelJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString  +  FileLevelJsDocBuilder;	  this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
122	[BUG]  [BUGGY]  this.sourceName  =  sourceName,  errorReporter);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   ",    sourceName,    errorReporter);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
123	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "./FileLevelJsDocBuilder ";  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "./FileLevelJsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "./FileLevelJsDocBuilder ";	  this.sourceName    =    sourceName    +   "/FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
124	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",/FileLevelJsDocBuilder ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",/FileLevelJsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",/FileLevelJsDocBuilder ";	  this.sourceName    =    sourceName    +   "/FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
125	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/fileLevelJsDocBuilder ";  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/fileLevelJsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/fileLevelJsDocBuilder ";	  this.sourceName    =    sourceName    +   "/FileLevelJsDocBuilder   ";    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
126	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.Error ");  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.Error ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ",    config);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
127	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.Error ",  config);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.Error ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.Error ",  config);	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ",    config);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
128	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.ErrorReporter ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.ErrorReporter ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ", "org.apache.commons.report.config.ErrorReporter ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ",    config);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
129	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
130	[BUG]  [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
131	[BUG]  [BUGGY]  if(sourceName!=  null  ||  fileLevelJsDocBuilder  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null  ||  fileLevelJsDocBuilder  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null  ||  fileLevelJsDocBuilder  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
132	[BUG]  [BUGGY]  if(sourceName!=  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
133	[BUG]  [BUGGY]  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
134	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode(sourceName);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode(sourceName);	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.createRootNode();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
135	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.buildRootNode();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.buildRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.buildRootNode();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.createRootNode();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
136	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode(config);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode(config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.createRootNode(config);	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.createRootNode();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
137	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.newRootNode();  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.newRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.newRootNode();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.createRootNode();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
138	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.findRootNode(sourceName);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.findRootNode(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.findRootNode(sourceName);	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.createRootNode();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
139	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "commons.report.SyntaxError ");  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "commons.report.SyntaxError   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
140	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.hibernate.report.SyntaxError ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.hibernate.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.hibernate.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "commons.report.SyntaxError   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
141	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.SyntaxError ",  config);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.SyntaxError ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "commons.report.SyntaxError ",  config);	  this.sourceName    =    sourceName.equals(   "commons.report.SyntaxError   ");    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
142	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.Error ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
143	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter.: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter.: "  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  errorReporter.: "  +  errorReporter;	  this.sourceName    =    sourceName    +   ".:   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
144	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.: "  +  errorReporter;	  this.sourceName    =    sourceName    +   ".:   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
145	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ";  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.Error ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
146	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.Error ",  sourceName);	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
147	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/ ",  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/ ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/ ",  config);	  this.sourceName    =    sourceName    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	13	None	replace
148	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  errorReporter ";	  this.sourceName    =    sourceName    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	13	None	replace
149	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.getErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  errorReporter.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  errorReporter.getErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
150	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  config.getErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  config.getErrorReporter(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  config.getErrorReporter(sourceName);	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
151	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  sourceName.getErrorReporter();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  sourceName.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  sourceName.getErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
152	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  sourceName,  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  sourceName,  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  sourceName,  config.getErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
153	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  sourceName  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  sourceName  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  sourceName  +  config.getErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
154	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
155	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName;  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
156	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocHolder.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocHolder.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  rootNodeJsDocHolder.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder.getSourceName();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
157	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.getSourceName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder.getSourceName();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
158	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocBuilder.getSourceName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocBuilder.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  rootNodeJsDocBuilder.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder.getSourceName();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
159	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getLocalName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getLocalName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getLocalName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder.getSourceName();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
160	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.: "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ".:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
161	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ". "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ". "  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ". "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ".:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
162	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ".trim();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ".trim();  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ".trim();  }	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
163	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "JsDocBuilder ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "JsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "JsDocBuilder ";	  this.sourceName    =    sourceName    +   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	96	None	replace
164	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/JsDocBuilder ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/JsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/JsDocBuilder ";	  this.sourceName    =    sourceName    +   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	96	None	replace
165	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ",  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ",  config);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	96	None	replace
166	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getQualifiedName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getQualifiedName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getQualifiedName();	  this.sourceName    =    sourceName    +    '_'    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
167	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSimpleName();  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getSimpleName();	  this.sourceName    =    sourceName    +    '_'    +    config.getSourceName();    	non-compiled	[CE]  	82	None	replace
168	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.toString();  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.toString();	  this.sourceName    =    sourceName    +    '_'    +    config.getSourceName();    	non-compiled	[CE]  	82	None	replace
169	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getLocalName();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getLocalName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getLocalName();	  this.sourceName    =    sourceName    +    '_'    +    config.getSourceName();    	non-compiled	[CE]  	82	None	replace
170	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "  config: "  +  config;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "  config: "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "  config: "  +  config;	  this.sourceName    =    sourceName    +   ",    config:   "    +    config;    	non-compiled	[CE]  	47	None	replace
171	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".config: "  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".config: "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".config: "  +  config;	  this.sourceName    =    sourceName    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
172	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  config: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  config: "  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  config: "  +  errorReporter;	  this.sourceName    =    sourceName    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
173	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/,  config: "  +  config;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/,  config: "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/,  config: "  +  config;	  this.sourceName    =    sourceName    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
174	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ", "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ", "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ", "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ",    config);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
175	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ", "org.apache.commons.report.SyntaxError ",  config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ", "org.apache.commons.report.SyntaxError ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ", "org.apache.commons.report.SyntaxError ",  config);	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ",    config);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
176	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.sourceName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.sourceName);	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ",    config);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
177	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getQualifiedName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getQualifiedName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getQualifiedName();	  this.sourceName    =    sourceName    +    config.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
178	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getQualifiedName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getQualifiedName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getQualifiedName();	  this.sourceName    =    sourceName    +    config.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
179	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.getQualifiedName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.getQualifiedName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.getQualifiedName();	  this.sourceName    =    sourceName    +    config.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
180	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getQualifiedName(sourceName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getQualifiedName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getQualifiedName(sourceName);	  this.sourceName    =    sourceName    +    config.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
181	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
182	[BUG]  [BUGGY]  this.sourceName  =  config.createFileLevelJsDocBuilder();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  config.createFileLevelJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  config.createFileLevelJsDocBuilder();	  if(sourceName    ==    null)    {    this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
183	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
184	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ".trim());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ".trim());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ".trim());	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
185	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals(config.getErrorReporter());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals(config.getErrorReporter());	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
186	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals(config.getSourceName());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals(config.getSourceName());	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
187	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
188	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
189	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  config);	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
190	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ".toLowerCase());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ".toLowerCase());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ".toLowerCase());	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
191	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "commons.report.Error ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "commons.report.Error ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
192	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  errorReporter);	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
193	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals(config.getErrorReporter());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals(config.getErrorReporter());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals(config.getErrorReporter());	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
194	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config.getLocalFileName();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  config.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",: "  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
195	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config.getLocalFileName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".: "  +  config.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".: "  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
196	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getLocalPath();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getLocalPath();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getLocalPath();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
197	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getFileName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
198	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
199	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?   "org.apache.commons.report.Error "  :  sourceName,  config);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?   "org.apache.commons.report.Error "  :  sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?   "org.apache.commons.report.Error "  :  sourceName,  config);	  this.sourceName    =    sourceName    ==    null?       "org.apache.commons.report.Error   "    :    sourceName,    config);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
200	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?  errorReporter  :   "org.apache.commons.report.Error "  :  sourceName,  config);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?  errorReporter  :   "org.apache.commons.report.Error "  :  sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?  errorReporter  :   "org.apache.commons.report.Error "  :  sourceName,  config);	  this.sourceName    =    sourceName    ==    null?       "org.apache.commons.report.Error   "    :    sourceName,    config);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
201	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceString,  config);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceString,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceString,  config);	  this.sourceName    =    sourceName    ==    null?       "org.apache.commons.report.Error   "    :    sourceName,    config);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
202	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error ".getMessage()  :  sourceName,  config);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error ".getMessage()  :  sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error ".getMessage()  :  sourceName,  config);	  this.sourceName    =    sourceName    ==    null?       "org.apache.commons.report.Error   "    :    sourceName,    config);    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
203	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "#n ";  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "#n ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "#n ";	  this.sourceName    =    sourceName    +   "#   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
204	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".# ";  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".# ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".# ";	  this.sourceName    =    sourceName    +   "#   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
205	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "# ",  errorReporter;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "# ",  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "# ",  errorReporter;	  this.sourceName    =    sourceName    +   "#   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
206	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",# ";  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",# ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",# ";	  this.sourceName    =    sourceName    +   "#   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
207	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "# ",  errorReporter);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "# ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "# ",  errorReporter);	  this.sourceName    =    sourceName    +   "#   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
208	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",java.util.ArrayList ";  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",java.util.ArrayList ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",java.util.ArrayList ";	  this.sourceName    =    sourceName    +   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
209	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".ArrayList ";  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".ArrayList ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".ArrayList ";	  this.sourceName    =    sourceName    +   "java.util.ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
210	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getConfig().getRawSourceName();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getConfig().getRawSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getConfig().getRawSourceName();	  this.sourceName    =    sourceName    +    config.getRawSourceName();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
211	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "List ";  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "List ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "List ";	  this.sourceName    =    sourceName    +   "ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
212	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_ArrayList ";  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "_ArrayList ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_ArrayList ";	  this.sourceName    =    sourceName    +   "ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
213	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "Arrays ";  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "Arrays ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "Arrays ";	  this.sourceName    =    sourceName    +   "ArrayList   ";    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
214	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.class.getName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.class.getName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.class.getName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
215	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.toString();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
216	[BUG]  [BUGGY]  this.sourceName  =  sourceString  +  FileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString  +  FileLevelJsDocBuilder.class.getName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString  +  FileLevelJsDocBuilder.class.getName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
217	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  config);	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
218	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.jsDocBuilder ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.jsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.jsDocBuilder ";	  this.sourceName    =    sourceName    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
219	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_jsDocBuilder ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "_jsDocBuilder ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_jsDocBuilder ";	  this.sourceName    =    sourceName    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
220	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.jsDocBuilder();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.jsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.jsDocBuilder();	  this.sourceName    =    sourceName    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
221	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
222	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder  +  config.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
223	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocHolder  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocHolder  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  rootNodeJsDocHolder  +  config.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
224	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter  +  config.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
225	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocBuilder  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  rootNodeJsDocBuilder  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  rootNodeJsDocBuilder  +  config.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
226	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
227	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
228	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceString,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceString,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
229	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
230	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
231	[BUG]  [BUGGY]  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
232	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.node ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.node ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.node ";	  this.sourceName    =    sourceName    +   ".node   ";    	non-compiled	[CE]  <identifier>  expected	89	None	replace
233	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".errorReporter ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".errorReporter ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".errorReporter ";	  this.sourceName    =    sourceName    +   ".node   ";    	non-compiled	[CE]  <identifier>  expected	89	None	replace
234	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".errors ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".errors ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".errors ";	  this.sourceName    =    sourceName    +   ".node   ";    	non-compiled	[CE]  <identifier>  expected	89	None	replace
235	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".node ",  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".node ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".node ",  errorReporter);	  this.sourceName    =    sourceName    +   ".node   ";    	non-compiled	[CE]  <identifier>  expected	89	None	replace
236	[BUG]  [BUGGY]  this.sourceName  =  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.Error   ",    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
237	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getFileName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getFileName();	  this.sourceName    =    sourceName    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
238	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getPropertyName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getPropertyName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getPropertyName();	  this.sourceName    =    sourceName    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
239	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "commons.report.SyntaxError ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
240	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "report.SyntaxError ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
241	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  config);	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
242	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "JSC_SYNTHETIC_ERROR ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "JSC_SYNTHETIC_ERROR ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "JSC_SYNTHETIC_ERROR ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
243	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxWarning ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxWarning ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxWarning ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
244	[BUG]  [BUGGY]  this.sourceName  =  sourceName,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,  config,  errorsReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,  config,  errorsReporter);	  this.sourceName    =    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
245	[BUG]  [BUGGY]  this.sourceName  =  sourceName,  config,  ErrorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,  config,  ErrorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,  config,  ErrorReporter);	  this.sourceName    =    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
246	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
247	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
248	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
249	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter.getErrorReporter();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
250	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
251	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  errorReporter;	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
252	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "SyntaxError ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "SyntaxError ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "SyntaxError ";	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
253	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/SyntaxError ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/SyntaxError ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/SyntaxError ";	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
254	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".syntaxError ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".syntaxError ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".syntaxError ";	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
255	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode.getRootNode();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNode.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
256	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeHolder.getRootNode();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeHolder.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeHolder.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
257	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.getRootNode();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
258	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJSDocBuilder.getRootNode();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJSDocBuilder.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJSDocBuilder.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
259	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode(sourceName);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNode(sourceName);	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
260	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode,  config.getRootNode();  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode,  config.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNode,  config.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
261	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.toString();	  this.sourceName    =    sourceName    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
262	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.toString();	  this.sourceName    =    sourceName    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
263	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getName();	  this.sourceName    =    sourceName    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
264	[BUG]  [BUGGY]  this.sourceName  =  sourceString  +  config.toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString  +  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString  +  config.toString();	  this.sourceName    =    sourceName    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
265	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.name();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.name();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.name();	  this.sourceName    =    sourceName    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
266	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/errors/null ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/errors/null ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/errors/null ";	  this.sourceName    =    sourceName    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	88	None	replace
267	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/null ",  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/null ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/null ",  config);	  this.sourceName    =    sourceName    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	88	None	replace
268	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "./null ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "./null ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "./null ";	  this.sourceName    =    sourceName    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	88	None	replace
269	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.js. "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.js. "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.js. "  +  config;	  this.sourceName    =    sourceName    +   ".js.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	119	None	replace
270	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js ",  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js ",  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js ",  config;	  this.sourceName    =    sourceName    +   ".js.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	119	None	replace
271	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separator  +  config;	  this.sourceName    =    sourceName    +   ".js.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	119	None	replace
272	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName);  [CE]  unclosed  string  literal  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName);	  ErrorReporter    errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  unclosed  string  literal	113	None	replace
273	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(config);  [CE]  unclosed  string  literal  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter(config);	  ErrorReporter    errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  unclosed  string  literal	113	None	replace
274	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(config.getErrorReporter());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter(config.getErrorReporter());	  ErrorReporter    errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
275	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(0);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter(0);	  ErrorReporter    errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
276	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getConfig().getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getConfig().getRawErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getConfig().getRawErrorReporter();	  this.sourceName    =    sourceName    +   ":   "    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
277	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "java.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "java.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "java.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "java.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	127	None	replace
278	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "java.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "java.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "java.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "java.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	127	None	replace
279	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "java.commons.report.Error ",  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "java.commons.report.Error ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "java.commons.report.Error ",  config);	  this.sourceName    =    sourceName.equals(   "java.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	127	None	replace
280	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "java.commons.report.Error ",  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "java.commons.report.Error ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "java.commons.report.Error ",  errorReporter);	  this.sourceName    =    sourceName.equals(   "java.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	127	None	replace
281	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getBaseName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getBaseName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getBaseName();	  this.sourceName    =    sourceName    +    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
282	[BUG]  [BUGGY]  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
283	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.html ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.html ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.html ";	  this.sourceName    =    sourceName    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	130	None	replace
284	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.* ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.* ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.* ";	  this.sourceName    =    sourceName    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	130	None	replace
285	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.n ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.n ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.n ";	  this.sourceName    =    sourceName    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	130	None	replace
286	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.foo. ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.foo. ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.foo. ";	  this.sourceName    =    sourceName    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	130	None	replace
287	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
288	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/node ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/node ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/node ";	  this.sourceName    =    sourceName    +   "node   ";    	non-compiled	[CE]  <identifier>  expected	90	None	replace
289	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_node ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "_node ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_node ";	  this.sourceName    =    sourceName    +   "node   ";    	non-compiled	[CE]  <identifier>  expected	90	None	replace
290	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.SyntaxError "  +  sourceName,  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
291	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
292	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "SyntaxError "  +  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "SyntaxError "  +  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "SyntaxError "  +  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
293	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
294	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/SyntaxError "  +  config);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/SyntaxError "  +  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/SyntaxError "  +  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
295	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "._ ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "._ ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "._ ";	  this.sourceName    =    sourceName    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	14	None	replace
296	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "._ "  +  config.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "._ "  +  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "._ "  +  config.toString();	  this.sourceName    =    sourceName    +   "_   "    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
297	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_ "  +  config.getName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "_ "  +  config.getName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_ "  +  config.getName();	  this.sourceName    =    sourceName    +   "_   "    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
298	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",_ "  +  config.toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",_ "  +  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",_ "  +  config.toString();	  this.sourceName    =    sourceName    +   "_   "    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
299	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getSourceName();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
300	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getConfig().getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getConfig().getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getConfig().getErrorReporter();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
301	[BUG]  [BUGGY]  this.sourceName  +=  ':'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  +=  ':'  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  +=  ':'  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
302	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
303	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getResourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getResourceName();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
304	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getErrorReporter(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getErrorReporter(sourceName);	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
305	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/._ "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/._ "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/._ "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   "._   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
306	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separatorChar  +  config.getSourceName();	  this.sourceName    =    sourceName    +   "._   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
307	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.clonePath();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.clonePath();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.clonePath();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
308	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneBlock();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneBlock();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.cloneBlock();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
309	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  errorReporter: "  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  errorReporter: "  +  errorReporter;	  this.sourceName    =    sourceName    +   ":   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
310	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode(sourceName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode(sourceName);	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
311	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.getRootNode();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.getRootNode();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
312	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().getFirstChild();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().getFirstChild();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode().getFirstChild();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
313	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  this.rootNode.getRootNode();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  this.rootNode.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  this.rootNode.getRootNode();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
314	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.createRootNode();  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.createRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.createRootNode();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
315	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().getNext();  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().getNext();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode().getNext();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
316	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  errorReporter);	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
317	[BUG]  [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ",  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,   "org.apache.commons.report.Error ",  config);	  this.sourceName    =    config,   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
318	[BUG]  [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,   "org.apache.commons.report.Error ");	  this.sourceName    =    config,   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
319	[BUG]  [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,   "org.apache.commons.report.Error ";	  this.sourceName    =    config,   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
320	[BUG]  [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ".getMessage(),  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ".getMessage(),  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,   "org.apache.commons.report.Error ".getMessage(),  config);	  this.sourceName    =    config,   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
321	[BUG]  [BUGGY]  if(sourceName!=  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
322	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/org.apache.commons.report.Error ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/org.apache.commons.report.Error ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/org.apache.commons.report.Error ";	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  <identifier>  expected	94	None	replace
323	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  config);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  <identifier>  expected	94	None	replace
324	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  errorReporter);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  <identifier>  expected	94	None	replace
325	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ";: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ";: "  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ";: "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ",:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
326	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/,: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/,: "  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/,: "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ",:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
327	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ", "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ", "  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ", "  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   ",:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
328	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  errorReporter);	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
329	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  config);	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
330	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ".trim());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ".trim());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ".trim());	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
331	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.toString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.toString();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
332	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
333	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
334	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/FileLevelJsDocBuilder ".toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/FileLevelJsDocBuilder ".toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/FileLevelJsDocBuilder ".toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
335	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  sourceName.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  sourceName.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  sourceName.toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
336	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_fileLevelJsDocBuilder ".toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "_fileLevelJsDocBuilder ".toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_fileLevelJsDocBuilder ".toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
337	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  config.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  config.toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
338	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalFileNameReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalFileNameReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getLocalFileNameReporter();	  this.sourceName    =    sourceName    +    config.getSourceNameReporter();    	non-compiled	[CE]  <identifier>  expected	108	None	replace
339	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
340	[BUG]  [BUGGY]  ||  sourceName!=  null)  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ||  sourceName!=  null)  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	||  sourceName!=  null)  {  this.sourceName  =  sourceName;  }	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
341	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",: "  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",: "  +  errorReporter;	  this.sourceName    =    sourceName    +   ",:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
342	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ";: "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ";: "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ";: "  +  config;	  this.sourceName    =    sourceName    +   ",:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
343	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ");	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
344	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "SyntaxError ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "SyntaxError ");	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
345	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getNamespaceURI();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getNamespaceURI();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getNamespaceURI();	  this.sourceName    =    sourceName    +    config.getLocalName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
346	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalPath();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getLocalPath();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getLocalPath();	  this.sourceName    =    sourceName    +    config.getLocalName();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
347	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getReporter();	  this.sourceName    =    sourceName    +    config.getReporter();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
348	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getConfig().getReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getConfig().getReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getConfig().getReporter();	  this.sourceName    =    sourceName    +    config.getReporter();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
349	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getRawReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getRawReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getRawReporter();	  this.sourceName    =    sourceName    +    config.getRawReporter();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
350	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getConfig().getRawReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getConfig().getRawReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getConfig().getRawReporter();	  this.sourceName    =    sourceName    +    config.getRawReporter();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
351	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.js "  +  config;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.js "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.js "  +  config;	  this.sourceName    =    sourceName    +   ".js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
352	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "_js "  +  config;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "_js "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "_js "  +  config;	  this.sourceName    =    sourceName    +   ".js   "    +    config;    	non-compiled	[CE]  illegal  start  of  type	118	None	replace
353	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",  js "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",  js "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",  js "  +  config;	  this.sourceName    =    sourceName    +   ".js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
354	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  errorReporter,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  errorReporter,  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
355	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "SyntaxError "  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "SyntaxError "  +  errorReporter,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "SyntaxError "  +  errorReporter,  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
356	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "org.apache.commons.report.SyntaxError "  +  errorReporter);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
357	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  sourceName.equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  sourceName.equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  sourceName.equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
358	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ").equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ").equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ").equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
359	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  +  sourceName.equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  +  sourceName.equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  +  sourceName.equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
360	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.name();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.name();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.name();	  this.sourceName    =    sourceName    +   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	91	None	replace
361	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.equals(errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.equals(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.equals(errorReporter);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
362	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter().equals(errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter().equals(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getErrorReporter().equals(errorReporter);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
363	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.toString().equals(errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.toString().equals(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.toString().equals(errorReporter);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
364	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ",  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ",  config);	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
365	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ",  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ",  errorReporter);	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
366	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ".trim());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ".trim());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error ".trim());	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
367	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "commons.report.Error ");  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "commons.report.Error ");	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
368	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ",  config);  [CE]  unclosed  string  literal  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ",  config);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  unclosed  string  literal	95	None	replace
369	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ",  errorReporter);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ",  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ",  errorReporter);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  	95	None	replace
370	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSyntaxError();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getSyntaxError();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSyntaxError();	  this.sourceName    =    sourceName    +   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  	95	None	replace
371	[BUG]  [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName,  config);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  SourceUtils.getSourceName(sourceName,  config);	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  	8	None	replace
372	[BUG]  [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  SourceUtils.getSourceName(sourceName,  errorReporter);	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
373	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceName);	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
374	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceName);	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
375	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  sourceName;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  sourceName;	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
376	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  sourceName;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  sourceName;	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
377	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/.: "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/.: "  +  config;	  this.sourceName    =    sourceName    +   ".:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
378	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ". "  +  config;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ". "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ". "  +  config;	  this.sourceName    =    sourceName    +   ".:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
379	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getRawLocalFileName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getRawLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getRawLocalFileName();	  this.sourceName    =    sourceName    +    config.getLocalFileName();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
380	[BUG]  [BUGGY]  this.sourceName  =  config.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  config.getSourceName();	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
381	[BUG]  [BUGGY]  this.sourceName  =  new  ArrayList();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  new  ArrayList();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  new  ArrayList();	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
382	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getConfig().getErrorReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getConfig().getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getConfig().getErrorReporter();	  this.sourceName    =    sourceName    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
383	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getLocalFileName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getLocalFileName();	  this.sourceName    =    sourceName    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
384	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getRawErrorReporter();  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getRawErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getRawErrorReporter();	  this.sourceName    =    sourceName    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  	23	None	replace
385	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getConfig();  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getConfig();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getConfig();	  this.sourceName    =    sourceName    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  	23	None	replace
386	[BUG]  [BUGGY]  this.sourceName  =  sourceName  /  errorReporter.getSourceName();  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  /  errorReporter.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  /  errorReporter.getSourceName();	  this.sourceName    =    sourceName    +    errorReporter.getSourceName();    	non-compiled	[CE]  	36	None	replace
387	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getLocalName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getLocalName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getLocalName();	  this.sourceName    =    sourceName    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
388	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.toSourceName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.toSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.toSourceName();	  this.sourceName    =    sourceName    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
389	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.reportError();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.reportError();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.reportError();	  this.sourceName    =    sourceName    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
390	[BUG]  [BUGGY]  this.sourceName  =  sourceString  +  fileLevelJsDocBuilder  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString  +  fileLevelJsDocBuilder  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString  +  fileLevelJsDocBuilder  +  config.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
391	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  config.createErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  config.createErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  config.createErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
392	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  config  ==  null?  null  :  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  config  ==  null?  null  :  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  config  ==  null?  null  :  config.getErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
393	[BUG]  [BUGGY]  this.sourceName  =  fileLevelJsDocBuilder.toString();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  fileLevelJsDocBuilder.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  fileLevelJsDocBuilder.toString();	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
394	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName  +  config.getRootNode();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName  +  config.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  sourceName  +  config.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
395	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode()  +  sourceName;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode()  +  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNode()  +  sourceName;	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
396	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.joda.FileLevelJsDocBuilder ";  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
397	[BUG]  [BUGGY]  this.sourceName  =  config, "org.apache.commons.report.Error ",  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  config, "org.apache.commons.report.Error ",  sourceName,  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  config, "org.apache.commons.report.Error ",  sourceName,  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.Error   ",    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
398	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "java.util.ArrayList ";  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "java.util.ArrayList ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "java.util.ArrayList ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
399	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()!=  0)  {  this.sourceName  =   "java.util.ArrayList ";  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()!=  0)  {  this.sourceName  =   "java.util.ArrayList ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()!=  0)  {  this.sourceName  =   "java.util.ArrayList ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
400	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "java.util.ArrayList ";  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "java.util.ArrayList ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "java.util.ArrayList ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
401	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/- ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/- ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/- ";	  this.sourceName    =    sourceName    +   "-   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
402	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".- ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".- ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".- ";	  this.sourceName    =    sourceName    +   "-   ";    	non-compiled	[CE]  <identifier>  expected	17	None	replace
403	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.jsDocBuilder();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.jsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.jsDocBuilder();	  this.sourceName    =    sourceName    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	87	None	replace
404	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ".equals(errorReporter));  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ".equals(errorReporter));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ".equals(errorReporter));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
405	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").equals(errorReporter));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").equals(errorReporter));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").equals(errorReporter));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
406	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").toString());  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").toString());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ").toString());	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
407	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
408	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter;	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
409	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.ALLOWED_DIRECTIVES;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.ALLOWED_DIRECTIVES;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.ALLOWED_DIRECTIVES;	  this.sourceName    =    sourceName    +   "null   ";    	non-compiled	[CE]  <identifier>  expected	16	None	replace
410	[BUG]  [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ".getMessage());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,   "org.apache.commons.report.Error ".getMessage());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,   "org.apache.commons.report.Error ".getMessage());	  this.sourceName    =    config,   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
411	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceString);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceString);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceString);	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
412	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceString);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?  SourceUtils.getSourceName(sourceName):  SourceUtils.getSourceName(sourceString);	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
413	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
414	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/ ".jsDocBuilder;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/ ".jsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/ ".jsDocBuilder;	  this.sourceName    =    sourceName    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	13	None	replace
415	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '/';  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '/';  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '/';	  this.sourceName    =    sourceName    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	13	None	replace
416	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  rootNodeJsDocBuilder();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  rootNodeJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  rootNodeJsDocBuilder();	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
417	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  createRootNodeJsDocBuilder();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  createRootNodeJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  createRootNodeJsDocBuilder();	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
418	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  sourceName.getRootNode();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  sourceName.getRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  sourceName.getRootNode();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
419	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().getLastChild();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().getLastChild();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode().getLastChild();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
420	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode()  +  sourceName;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode()  +  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode()  +  sourceName;	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
421	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE_NAME;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE_NAME;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE_NAME;	  this.sourceName    =    sourceName    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	130	None	replace
422	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getSourceFileName();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getSourceFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getSourceFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
423	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '#';  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '#';  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '#';	  this.sourceName    =    sourceName    +   "#   ";    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
424	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  this.sourceName  =  sourceName;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =    sourceName;    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
425	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceString;  }  else  {  this.sourceName  =  sourceName;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceString;  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceString;  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =    sourceName;    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
426	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  <  sourceName?  null  :  rootNodeJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  <  sourceName?  null  :  rootNodeJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  <  sourceName?  null  :  rootNodeJsDocBuilder;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
427	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  <  null?  rootNodeJsDocBuilder  :  sourceName;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  <  null?  rootNodeJsDocBuilder  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  <  null?  rootNodeJsDocBuilder  :  sourceName;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
428	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  rootNodeJsDocBuilder.clone();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  rootNodeJsDocBuilder.clone();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  rootNodeJsDocBuilder.clone();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
429	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  rootNodeJsDocBuilder;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  rootNodeJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  rootNodeJsDocBuilder;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
430	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  sourceName;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.clone()  :  sourceName;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
431	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
432	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.io.FileLevelJsDocBuilder ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
433	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( ".java.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( ".java.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( ".java.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "java.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	127	None	replace
434	[BUG]  [BUGGY]  this.sourceName  =  sourceName.startsWith( "java.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.startsWith( "java.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.startsWith( "java.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "java.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	127	None	replace
435	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  System.getProperty( "org.apache.commons.report.SyntaxError "  +  sourceName,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  System.getProperty( "org.apache.commons.report.SyntaxError "  +  sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  System.getProperty( "org.apache.commons.report.SyntaxError "  +  sourceName,  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
436	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getSourceNameReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getSourceNameReporter();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
437	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  + "org.apache.commons.report.SyntaxError "));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  + "org.apache.commons.report.SyntaxError "));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  + "org.apache.commons.report.SyntaxError "));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
438	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceFileName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSourceFileName();	  this.sourceName    =    sourceName    +    config.getLocalFileName();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
439	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceString;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  sourceString;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  sourceString;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
440	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".org.apache.commons.report.SyntaxError ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".org.apache.commons.report.SyntaxError ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".org.apache.commons.report.SyntaxError ";	  this.sourceName    =    sourceName    +   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	95	None	replace
441	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.SYNTHETIC_ERROR;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.SYNTHETIC_ERROR;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.SYNTHETIC_ERROR;	  this.sourceName    =    sourceName    +   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	95	None	replace
442	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SYNTHETIC_ERROR;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SYNTHETIC_ERROR;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SYNTHETIC_ERROR;	  this.sourceName    =    sourceName    +   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	95	None	replace
443	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getSourceName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
444	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getLocalName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getLocalName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getLocalName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
445	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceReferenceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceReferenceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSourceReferenceName();	  this.sourceName    =    sourceName    +    config.getReporter();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
446	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName()  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName()  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class.getName()  +  config;	  this.sourceName    =    sourceName    +   ".:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	48	None	replace
447	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_';  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_';  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_';	  this.sourceName    =    sourceName    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	14	None	replace
448	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSimpleName(sourceName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getSimpleName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSimpleName(sourceName);	  this.sourceName    =    sourceName    +    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	111	None	replace
449	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSourceNameReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getSourceNameReporter();	  this.sourceName    =    sourceName    +    config.getSourceNameReporter();    	non-compiled	[CE]  <identifier>  expected	108	None	replace
450	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getSourceNameReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder.getSourceNameReporter();	  this.sourceName    =    sourceName    +    config.getSourceNameReporter();    	non-compiled	[CE]  <identifier>  expected	108	None	replace
451	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getSourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSourceName(sourceName);	  this.sourceName    =    sourceName    +    config.getSourceNameReporter();    	non-compiled	[CE]  <identifier>  expected	108	None	replace
452	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".,  config: "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".,  config: "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".,  config: "  +  config;	  this.sourceName    =    sourceName    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
453	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName.cloneTree();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName.cloneTree();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  sourceName.cloneTree();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
454	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.cloneTree()  :  sourceName;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.cloneTree()  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.cloneTree()  :  sourceName;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
455	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.joda.FileLevelJsDocBuilder ".toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.joda.FileLevelJsDocBuilder ".toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.joda.FileLevelJsDocBuilder ".toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
456	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  String.valueOf(sourceName).toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  String.valueOf(sourceName).toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  String.valueOf(sourceName).toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
457	[BUG]  [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  String.valueOf(sourceName)+ ".toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  String.valueOf(sourceName)+ ".toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.joda.FileLevelJsDocBuilder "  +  String.valueOf(sourceName)+ ".toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
458	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  sourceName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxError ",  sourceName);	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
459	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName)+  errorReporter;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName)+  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getErrorReporter(sourceName)+  errorReporter;	  this.sourceName    =    sourceName    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
460	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '.'  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '.'  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '.'  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ".:   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	121	None	replace
461	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/node. ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/node. ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/node. ";	  this.sourceName    =    sourceName    +   "node   ";    	non-compiled	[CE]  <identifier>  expected	90	None	replace
462	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  errorReporter,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  errorReporter,  config);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
463	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  config);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
464	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "org.apache.commons.report.Error "  +  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
465	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +   "Error "  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +   "Error "  +  errorReporter,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +   "Error "  +  errorReporter,  config);	  this.sourceName    =       "org.apache.commons.report.Error   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
466	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSource();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSource();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getSource();	  this.sourceName    =    sourceName    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
467	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.createSourceName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.createSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.createSourceName();	  this.sourceName    =    sourceName    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
468	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.findSourceName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.findSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.findSourceName();	  this.sourceName    =    sourceName    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
469	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT;	  this.sourceName    =    sourceName    +   "org.apache.commons.report.JsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	96	None	replace
470	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.INSTANCE;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.INSTANCE;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.INSTANCE;	  this.sourceName    =    sourceName    +   "java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
471	[BUG]  [BUGGY]  this.sourceName  =  sourceName.startsWith( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.startsWith( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.startsWith( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
472	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().contains( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().contains( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().contains( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
473	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( ".org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( ".org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( ".org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
474	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.error ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.error ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
475	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  sourceName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.Error ",  sourceName);	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
476	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().contains( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().contains( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().contains( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
477	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( ".org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( ".org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( ".org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
478	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  sourceName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  sourceName);	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
479	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( ".org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( ".org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( ".org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
480	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error. ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error. ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
481	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError ";  }	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
482	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceName);	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
483	[BUG]  [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceString);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceString);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName!=  null?  SourceUtil.getSourceName(sourceName):  SourceUtil.getSourceName(sourceString);	  this.sourceName    =    SourceUtil.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
484	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.mockito.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.mockito.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.mockito.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
485	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.JsDocBuilderError ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "commons.report.JsDocBuilderError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "commons.report.JsDocBuilderError ");	  this.sourceName    =    sourceName.equals(   "commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
486	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getRawErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getRawErrorReporter();	  this.sourceName    =    sourceName    +   ":   "    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
487	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getRawErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getRawErrorReporter();	  this.sourceName    =    sourceName    +   ":   "    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
488	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
489	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js ".equals(config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js ".equals(config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js ".equals(config);	  this.sourceName    =    sourceName    +   ".js.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	119	None	replace
490	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  sourceName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals( "org.apache.commons.report.SyntaxError ",  sourceName);	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
491	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getLineno();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getLineno();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getLineno();	  this.sourceName    =    sourceName    +    config.getRawSourceName();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
492	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  errorReporter);	  this.sourceName    =    sourceName    ==    null?       "org.apache.commons.report.Error   "    :    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
493	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName,  errorReporter);	  ErrorReporter    errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
494	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()!=  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()!=  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()!=  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
495	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_NAME;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_NAME;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_NAME;	  this.sourceName    =    sourceName    +   ".node   ";    	non-compiled	[CE]  <identifier>  expected	89	None	replace
496	[BUG]  [BUGGY]  this.sourceName  =  sourceString  +  fileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString  +  fileLevelJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString  +  fileLevelJsDocBuilder;	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
497	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSourceName().equals(sourceName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getSourceName().equals(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getSourceName().equals(sourceName);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
498	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getErrorReporter().equals(errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getErrorReporter().equals(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getErrorReporter().equals(errorReporter);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
499	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.equals(sourceName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.equals(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.equals(sourceName);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
500	[BUG]  [BUGGY]  this.sourceName  =  config, "org.apache.commons.report.SyntaxError ",  sourceName,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  config, "org.apache.commons.report.SyntaxError ",  sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  config, "org.apache.commons.report.SyntaxError ",  sourceName,  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	122	None	replace
501	[BUG]  [BUGGY]  if(sourceName!=  null)  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
502	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  sourceString;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  sourceString;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  sourceString;	  this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
503	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".jsDocBuilder: ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".jsDocBuilder: ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".jsDocBuilder: ";	  this.sourceName    =    sourceName    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
504	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ":n ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ":n ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ":n ";	  this.sourceName    =    sourceName    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
505	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':';  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':';  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':';	  this.sourceName    =    sourceName    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	15	None	replace
506	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_COLLECTION;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_COLLECTION;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_COLLECTION;	  this.sourceName    =    sourceName    +   ".java.util.ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	86	None	replace
507	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FONT;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FONT;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FONT;	  this.sourceName    =    sourceName    +   "org.apache.commons.io.FileLevelJsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	91	None	replace
508	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config;	  this.sourceName    =    sourceName    +   ".js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
509	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config  + ".js ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config  + ".js ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config  + ".js ";	  this.sourceName    =    sourceName    +   ".js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
510	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.JsDocBuilder ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
511	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ";  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName  + "org.apache.commons.report.JsDocBuilder ";  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.JsDocBuilder   ";    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
512	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileOverviewInfo.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileOverviewInfo.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileOverviewInfo.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder.getSourceName();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
513	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getResourceName(sourceName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getResourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getResourceName(sourceName);	  this.sourceName    =    sourceName    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
514	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().trim().equals( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().trim().equals( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().trim().equals( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
515	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().contains( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().contains( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().contains( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
516	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( ".org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( ".org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( ".org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
517	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  sourceName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.Error ",  sourceName);	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
518	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error. ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error. ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.Error. ");	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
519	[BUG]  [BUGGY]  this.sourceName  +=  '_'  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  +=  '_'  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  +=  '_'  +  config.getSourceName();	  this.sourceName    =    sourceName    +    '_'    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
520	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSourceNameReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getSourceNameReporter();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
521	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSource();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getSource();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getSource();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
522	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSourceNameReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getSourceNameReporter();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
523	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getReporter();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
524	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSource();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSource();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getSource();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
525	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName;	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
526	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.jsDocBuilder;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.jsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.jsDocBuilder;	  this.sourceName    =    sourceName    +   ".js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
527	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getLineNumber();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getLineNumber();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getLineNumber();	  this.sourceName    =    sourceName    +    '_'    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
528	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.fileLevelJsDocBuilder.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.fileLevelJsDocBuilder.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.fileLevelJsDocBuilder.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder.getSourceName();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
529	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.fileLevelJsDocBuilder  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.fileLevelJsDocBuilder  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.fileLevelJsDocBuilder  +  config.getSourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
530	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.toString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.toString();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
531	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getResourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  fileLevelJsDocBuilder  +  config.getResourceName();	  this.sourceName    =    sourceName    +    fileLevelJsDocBuilder    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
532	[BUG]  [BUGGY]  this.sourceName  =  sourceString  +  config.getQualifiedName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString  +  config.getQualifiedName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString  +  config.getQualifiedName();	  this.sourceName    =    sourceName    +    config.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	35	None	replace
533	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  config.newErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  config.newErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  config.newErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
534	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  config.isErrorReporter();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  config.isErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  config.isErrorReporter();	  ErrorReporter    errorReporter    =    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	114	None	replace
535	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.Error ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
536	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  errorReporter,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separatorChar  +  errorReporter,  config);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
537	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "[SyntaxError] ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "[SyntaxError] ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "[SyntaxError] ";	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
538	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separator  +  config.getSourceName();	  this.sourceName    =    sourceName    +   "._   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
539	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getQualifiedSourceName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getQualifiedSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getQualifiedSourceName();	  this.sourceName    =    sourceName    +    config.getRawSourceName();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
540	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getHeaderSuffix();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getHeaderSuffix();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getHeaderSuffix();	  this.sourceName    =    sourceName    +    config.getRawSourceName();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
541	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getRawSourceName(sourceName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getRawSourceName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getRawSourceName(sourceName);	  this.sourceName    =    sourceName    +    config.getRawSourceName();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
542	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separatorChar  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separatorChar  +  config;	  this.sourceName    =    sourceName    +   ",:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
543	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "./,: "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "./,: "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "./,: "  +  config;	  this.sourceName    =    sourceName    +   ",:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
544	[BUG]  [BUGGY]  this.sourceName  =  sourceName,  config,   "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName,  config,   "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName,  config,   "org.apache.commons.report.Error ");	  this.sourceName    =    config,   "org.apache.commons.report.Error   ",    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
545	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.report.JsDocBuilder "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.report.JsDocBuilder "  +  config;	  this.sourceName    =       "org.apache.commons.report.JsDocBuilder   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
546	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/ ".jsDocBuilder();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/ ".jsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/ ".jsDocBuilder();	  this.sourceName    =    sourceName    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	13	None	replace
547	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxWarning ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxWarning ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().equals( "org.apache.commons.report.SyntaxWarning ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	68	None	replace
548	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  :  sourceName,  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.Error   ",    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
549	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
550	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FilelevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FilelevelJsDocBuilder.class.getName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FilelevelJsDocBuilder.class.getName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
551	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  System.getProperty( "line.separator ")+  config.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  System.getProperty( "line.separator ")+  config.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  System.getProperty( "line.separator ")+  config.toString();	  this.sourceName    =    sourceName    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
552	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.cloneTree()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.cloneTree()  :  null;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.cloneTree()  :  null;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.cloneTree();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
553	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
554	[BUG]  [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
555	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().startsWith( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().startsWith( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().startsWith( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
556	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxWarning ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxWarning ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().equals( "org.apache.commons.report.SyntaxWarning ");	  this.sourceName    =    sourceName.trim().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	69	None	replace
557	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  : "org.apache.commons.report.Error ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  : "org.apache.commons.report.Error ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.Error "  : "org.apache.commons.report.Error ";	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
558	[BUG]  [BUGGY]  this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.Error "  : "org.apache.commons.report.Error ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.Error "  : "org.apache.commons.report.Error ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.Error "  : "org.apache.commons.report.Error ";	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
559	[BUG]  [BUGGY]  this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.Error "  :  sourceName;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.Error "  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.Error "  :  sourceName;	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
560	[BUG]  [BUGGY]  this.sourceName  =  sourceName  <   "org.apache.commons.report.Error ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  <   "org.apache.commons.report.Error ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  <   "org.apache.commons.report.Error ";	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    	non-compiled	[CE]  <identifier>  expected	135	None	replace
561	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().contains( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().contains( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().contains( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
562	[BUG]  [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals(config.getSyntaxError());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.trim().toLowerCase().equals(config.getSyntaxError());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.trim().toLowerCase().equals(config.getSyntaxError());	  this.sourceName    =    sourceName.trim().toLowerCase().equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	80	None	replace
563	[BUG]  [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName).toLowerCase();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  SourceUtils.getSourceName(sourceName).toLowerCase();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  SourceUtils.getSourceName(sourceName).toLowerCase();	  this.sourceName    =    SourceUtils.getSourceName(sourceName);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
564	[BUG]  [BUGGY]  if(sourceName!=  null  &&  sourceName.length()  >  0)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null  &&  sourceName.length()  >  0)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null  &&  sourceName.length()  >  0)  {  this.sourceName  =  sourceName;  }  else  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
565	[BUG]  [BUGGY]  if(sourceName!=  null)  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  fileLevelJsDocBuilder  =  new  FileLevelJsDocBuilder();  }	  if(sourceName!=    null)    {    this.sourceName    =    sourceName;    }    else    {    fileLevelJsDocBuilder    =    new    FileLevelJsDocBuilder();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
566	[BUG]  [BUGGY]  this.sourceName  =  sourceName.endsWith( "java.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.endsWith( "java.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.endsWith( "java.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "java.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	127	None	replace
567	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "SyntaxError "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "SyntaxError "  +  config,  errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "SyntaxError "  +  config,  errorReporter);	  this.sourceName    =       "org.apache.commons.report.SyntaxError   "    +    sourceName,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
568	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separator  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
569	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  config.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js "  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
570	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js. "  +  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js. "  +  config.getLocalFileName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js. "  +  config.getLocalFileName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getLocalFileName();    	non-compiled	[CE]  <identifier>  expected	120	None	replace
571	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getLineNumber();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getLineNumber();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getLineNumber();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
572	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  ':'  +  config.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  ':'  +  config.getSimpleName();	  this.sourceName    =    sourceName    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	110	None	replace
573	[BUG]  [BUGGY]  this.sourceName  =  sourceName.endsWith( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.endsWith( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.endsWith( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	67	None	replace
574	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getSimpleName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getSimpleName();	  this.sourceName    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
575	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName;  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =   "org.apache.commons.report.Error ",  sourceName;  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName!=    null)    {    this.sourceName    =       "org.apache.commons.report.Error   ";    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
576	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js "  +  errorReporter;	  this.sourceName    =    sourceName    +   ":   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
577	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter(sourceName,  config);	  ErrorReporter    errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
578	[BUG]  [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ErrorReporter  errorReporter  =  new  ErrorReporter(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	ErrorReporter  errorReporter  =  new  ErrorReporter(errorReporter);	  ErrorReporter    errorReporter    =    new    ErrorReporter();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
579	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.getRootNode()  :  sourceName;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.getRootNode()  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder.getRootNode()  :  sourceName;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
580	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getLocation();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  errorReporter.getLocation();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  errorReporter.getLocation();	  this.sourceName    =    sourceName    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
581	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".org.apache.commons.report.Error ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".org.apache.commons.report.Error ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".org.apache.commons.report.Error ";	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  <identifier>  expected	94	None	replace
582	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error. ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error. ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.Error. ";	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ";    	non-compiled	[CE]  <identifier>  expected	94	None	replace
583	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getRawSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getRawSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getRawSourceName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
584	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getVersion();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ": "  +  config.getVersion();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ": "  +  config.getVersion();	  this.sourceName    =    sourceName    +   ":   "    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
585	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(new  FileLevelJsDocBuilder());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(new  FileLevelJsDocBuilder());  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  RootNodeJsDocBuilder(new  FileLevelJsDocBuilder());	  this.rootNodeJsDocBuilder    =    new    RootNodeJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
586	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  File.separator  +  config.getErrorReporter();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  File.separator  +  config.getErrorReporter();	  this.sourceName    =    sourceName    +   "._   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
587	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".node ",  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".node ",  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".node ",  config);	  this.sourceName    =    sourceName    +   ".node   ";    	non-compiled	[CE]  <identifier>  expected	89	None	replace
588	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ",node ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ",node ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ",node ";	  this.sourceName    =    sourceName    +   ".node   ";    	non-compiled	[CE]  <identifier>  expected	89	None	replace
589	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.equals( "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.equals( "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError ",  config.equals( "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
590	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  + "org.apache.commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  + "org.apache.commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.SyntaxError "  + "org.apache.commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.SyntaxError   ".equals(   "org.apache.commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
591	[BUG]  [BUGGY]  ||  config  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  ||  config  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	||  config  ==  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceName;  }	  if(sourceName    ==    null)    {    this.sourceName    =    FileLevelJsDocBuilder.class.getSimpleName();    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
592	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =  FileLevelJsDocBuilder.class.getSimpleName();  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceName    ==    null)    {    this.sourceName    =    FileLevelJsDocBuilder.class.getSimpleName();    }    else    {    this.sourceName    =    sourceName;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
593	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  new  FileLevelJsDocBuilder();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  new  FileLevelJsDocBuilder();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  new  FileLevelJsDocBuilder();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
594	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode.rootNodeJsDocBuilder;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode.rootNodeJsDocBuilder;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNode.rootNodeJsDocBuilder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	134	None	replace
595	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "/,_ "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "/,_ "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "/,_ "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ",_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
596	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ", "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ", "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ", "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ",_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
597	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.createRootNode();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.createRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  fileLevelJsDocBuilder.createRootNode();	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.createRootNode();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
598	[BUG]  [BUGGY]  this.sourceName  =  sourceName.endsWith( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.endsWith( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.endsWith( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
599	[BUG]  [BUGGY]  this.sourceName  =  sourceName.startsWith( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.startsWith( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.startsWith( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	58	None	replace
600	[BUG]  [BUGGY]  this.sourceName  =  sourceName.endsWith( "commons.report.SyntaxError ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.endsWith( "commons.report.SyntaxError ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.endsWith( "commons.report.SyntaxError ");	  this.sourceName    =    sourceName.equals(   "commons.report.SyntaxError   ");    	non-compiled	[CE]  <identifier>  expected	81	None	replace
601	[BUG]  [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  config;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =   "org.apache.commons.io.FileLevelJsDocBuilder "  +  config;	  this.sourceName    =       "org.apache.commons.io.FileLevelJsDocBuilder   "    +    sourceName;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
602	[BUG]  [BUGGY]  this.sourceName  =  sourceString.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString.toString();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString.toString();	  this.sourceName    =       "org.joda.FileLevelJsDocBuilder   ".toString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
603	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.SyntaxError "  : "org.apache.commons.report.SyntaxError ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.SyntaxError "  : "org.apache.commons.report.SyntaxError ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.SyntaxError "  : "org.apache.commons.report.SyntaxError ";	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
604	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceName  =   "org.apache.commons.report.SyntaxError ";  }	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
605	[BUG]  [BUGGY]  this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.SyntaxError "  : "org.apache.commons.report.SyntaxError ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.SyntaxError "  : "org.apache.commons.report.SyntaxError ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  <  null?   "org.apache.commons.report.SyntaxError "  : "org.apache.commons.report.SyntaxError ";	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
606	[BUG]  [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.SyntaxError "  :  sourceName;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.SyntaxError "  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  ==  null?   "org.apache.commons.report.SyntaxError "  :  sourceName;	  if(sourceName    ==    null    ||    sourceName.length()    ==    0)    {    this.sourceName    =       "org.apache.commons.report.SyntaxError   ";    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
607	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNodeForName(sourceName);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNodeForName(sourceName);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNodeForName(sourceName);	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
608	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.createRootNode();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  config.createRootNode();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  config.createRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
609	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  config.equals(errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  config.equals(errorReporter);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.Error ",  config.equals(errorReporter);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
610	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ".equals(errorReporter,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.Error ".equals(errorReporter,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.Error ".equals(errorReporter,  config);	  this.sourceName    =    sourceName    +   "org.apache.commons.report.Error   ".equals(errorReporter);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
611	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getRawPrefix();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getRawPrefix();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getRawPrefix();	  this.sourceName    =    sourceName    +    config.getRawReporter();    	non-compiled	[CE]  <identifier>  expected	27	None	replace
612	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
613	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ".js. "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ".js. "  +  config.getSourceName();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ".js. "  +  config.getSourceName();	  this.sourceName    =    sourceName    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
614	[BUG]  [BUGGY]  this.sourceName  =  sourceName.toLowerCase().startsWith( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.toLowerCase().startsWith( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.toLowerCase().startsWith( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.toLowerCase().equals(   "org.apache.commons.report.Error   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
615	[BUG]  [BUGGY]  this.sourceName  =  sourceString,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceString,  config);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceString,  config);	  this.sourceName    =    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
616	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  config.getSource();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  config.getSource();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  config.getSource();	  this.sourceName    =    sourceName    +    config.getReporter();    	non-compiled	[CE]  <identifier>  expected	109	None	replace
617	[BUG]  [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getVersion();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  +  '_'  +  config.getVersion();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  +  '_'  +  config.getVersion();	  this.sourceName    =    sourceName    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	92	None	replace
618	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName!=  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName!=  null)  {  this.sourceName  =   "java.util.ArrayList ";  }  else  {  System.arraycopy(sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
619	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(this.sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(this.sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceName;  }  else  {  System.arraycopy(this.sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
620	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  System.arraycopy(this.sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  System.arraycopy(this.sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	if(sourceName  ==  null)  {  this.sourceName  =  sourceString;  }  else  {  System.arraycopy(this.sourceName,  0,  this.sourceName,  sourceName,  errorReporter);  }	  if(sourceName    ==    null)    {    this.sourceName    =       "java.util.ArrayList   ";    }    else    {    System.arraycopy(sourceName,    0,    this.sourceName,    sourceName,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
621	[BUG]  [BUGGY]  this.sourceName  =  errorReporter.equals( "org.apache.commons.report.Error ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  errorReporter.equals( "org.apache.commons.report.Error ");  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  errorReporter.equals( "org.apache.commons.report.Error ");	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
622	[BUG]  [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  config.equals(errorReporter));  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  config.equals(errorReporter));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName.equals( "org.apache.commons.report.Error ",  config.equals(errorReporter));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
623	[BUG]  [BUGGY]  this.sourceName  =  errorReporter.equals( "org.apache.commons.report.Error ").equals(sourceName));  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  errorReporter.equals( "org.apache.commons.report.Error ").equals(sourceName));  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  errorReporter.equals( "org.apache.commons.report.Error ").equals(sourceName));	  this.sourceName    =    sourceName.equals(   "org.apache.commons.report.Error   ".equals(errorReporter));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
624	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder.clone()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder.clone()  :  null;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder.clone()  :  null;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
625	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder.clone()  :  sourceName;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder.clone()  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder.clone()  :  sourceName;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder.clone();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
626	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + ". "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + ". "  +  errorReporter;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + ". "  +  errorReporter;	  this.sourceName    =    sourceName    +   ".:   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	116	None	replace
627	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().cloneTree();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode().cloneTree();  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode().cloneTree();	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
628	[BUG]  [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode(rootNode);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  Node  rootNodeJsDocBuilder  =  config.getRootNode(rootNode);  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	Node  rootNodeJsDocBuilder  =  config.getRootNode(rootNode);	  Node    rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
629	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder  :  sourceName;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder!=  null?  rootNodeJsDocBuilder  :  sourceName;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
630	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder  :  sourceName;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder  :  sourceName;  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder  ==  null?  rootNodeJsDocBuilder  :  sourceName;	  this.rootNodeJsDocBuilder    =    rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
631	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError. ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError. ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "org.apache.commons.report.SyntaxError. ";	  this.sourceName    =    sourceName    +   "org.apache.commons.report.SyntaxError   ";    	non-compiled	[CE]  <identifier>  expected	95	None	replace
632	[BUG]  [BUGGY]  this.sourceName  =  sourceName  + "Array ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {  this.sourceString  =  sourceString;      [BUGGY]  this.sourceName  =  sourceName  + "Array ";  [BUGGY]      this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	this.sourceName  =  sourceName  + "Array ";	  this.sourceName    =    sourceName    +   "ArrayList   ";    	non-compiled	[CE]  <identifier>  expected	5	None	replace
