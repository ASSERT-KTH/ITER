bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK;	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
2	[BUG]  [BUGGY]  if(JSR!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(JSR!=  null)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(JSR!=  null)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
3	[BUG]  [BUGGY]  if(JSR  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(JSR  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(JSR  ==  null)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
4	[BUG]  [BUGGY]  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
5	[BUG]  [BUGGY]  if(JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]            AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
6	[BUG]  [BUGGY]  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]              AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
7	[BUG]  [BUGGY]    [CE]  ')'  expected  [FE]                AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]    [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	  	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
8	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
9	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
10	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
11	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
12	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]            AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
13	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK;  [CE]  ')'  expected  [FE]              AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK;	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
14	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]    AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
15	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]      AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
16	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]        AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
17	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]          AssertionFailedError  [CONTEXT]  return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]  if(Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }	return  Token.BLOCK;  	non-compiled	[CE]  ')'  expected	5	None	replace
