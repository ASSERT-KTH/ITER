bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  +  Token.BLOCK;  }	  return    Token.BLOCK    +    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	114	None	replace
2	[BUG]  [BUGGY]  result  =  Token.BLOCK  +  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  +  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	result  =  Token.BLOCK  +  Token.BLOCK;	  return    Token.BLOCK    +    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	114	None	replace
3	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
4	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
5	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
6	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
7	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
8	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	1	None	replace
9	[BUG]  [BUGGY]  if(Token.CATCH  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	1	None	replace
10	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	1	None	replace
11	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	1	None	replace
12	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.BLOCK;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	16	None	replace
13	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	16	None	replace
14	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.BLOCK;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	16	None	replace
15	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	16	None	replace
16	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	16	None	replace
17	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	50	None	replace
18	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	50	None	replace
19	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	50	None	replace
20	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	50	None	replace
21	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  Token.BLOCK;  }	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
22	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  -  Token.BLOCK  +  1;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
23	[BUG]  [BUGGY]  result  =  Token.BLOCK  -  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	result  =  Token.BLOCK  -  Token.BLOCK;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
24	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  BLOCK  -  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  BLOCK  -  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  BLOCK  -  Token.BLOCK;  }	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
25	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK  -  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
26	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.EXPR_RESULT  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.EXPR_RESULT  ==  Token.BLOCK;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	117	None	replace
27	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.CATCH;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  ==  Token.CATCH;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	117	None	replace
28	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token!=  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token!=  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token!=  Token.EXPR_RESULT;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	117	None	replace
29	[BUG]  [BUGGY]  |  Token.EXPR_RESULT  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.EXPR_RESULT  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.EXPR_RESULT  ==  Token.BLOCK;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	117	None	replace
30	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  ||  token  ==  Token.EXPR_RESULT;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	117	None	replace
31	[BUG]  [BUGGY]  ||(parent!=  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(parent!=  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(parent!=  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
32	[BUG]  [BUGGY]  ||(Token.BLOCK!=  parent  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  parent  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  parent  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
33	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
34	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(name)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(name)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(name)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
35	[BUG]  [BUGGY]  ||(Token.BLOCK!=  null  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  null  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  null  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
36	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NAME  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
37	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
38	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
39	[BUG]  [BUGGY]  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NAME    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	33	None	replace
40	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
41	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(token))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(token))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(token))  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
42	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
43	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
44	[BUG]  [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.NAME;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.NAME;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME!=  Token.NAME)  {  return  Token.NAME;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
45	[BUG]  [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME!=  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
46	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
47	[BUG]  [BUGGY]  if(Token.NAME!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
48	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME  ==  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME  ==  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
49	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESERVED);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESERVED);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESERVED);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK);    	non-compiled	[CE]  ')'  expected	7	None	replace
50	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK);    	non-compiled	[CE]  ')'  expected	7	None	replace
51	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EMPTY);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK);    	non-compiled	[CE]  ')'  expected	7	None	replace
52	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH,  Token.BLOCK);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH,  Token.BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH,  Token.BLOCK);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK);    	non-compiled	[CE]  ')'  expected	7	None	replace
53	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESERVED,  token);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESERVED,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESERVED,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK);    	non-compiled	[CE]  ')'  expected	7	None	replace
54	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.ASSIGN);  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.ASSIGN);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.ASSIGN);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK);    	non-compiled	[CE]  ')'  expected	7	None	replace
55	[BUG]  [BUGGY]  ||(token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
56	[BUG]  [BUGGY]  ||(Token.BLOCK  ==  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK  ==  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK  ==  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
57	[BUG]  [BUGGY]  |(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
58	[BUG]  [BUGGY]  &&(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
59	[BUG]  [BUGGY]  ||(token.BLOCK!=  null  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  null  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  null  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
60	[BUG]  [BUGGY]  ||(BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
61	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK;case  BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK;case  BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK;case  BLOCK:  return  Token.BLOCK;	  case    BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	21	None	replace
62	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  case    BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	21	None	replace
63	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BOOLEAN;	  case    BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	21	None	replace
64	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK  -  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK  -  1;	  case    BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	21	None	replace
65	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLACK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLACK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLACK;	  case    BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	21	None	replace
66	[BUG]  [BUGGY]  if(Token.CATCH!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  ')'  expected	107	None	replace
67	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	107	None	replace
68	[BUG]  [BUGGY]  if(token  ==  Token.JSR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  Token.JSR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  Token.JSR)  {  return  Token.BLOCK;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
69	[BUG]  [BUGGY]  if(token  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
70	[BUG]  [BUGGY]  if(token  ==  JSErrorReporter.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  JSErrorReporter.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  JSErrorReporter.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
71	[BUG]  [BUGGY]  if(token  ==  JSErrorReporter.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  JSErrorReporter.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  JSErrorReporter.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
72	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  	113	None	replace
73	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  ')'  expected	113	None	replace
74	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  ')'  expected	113	None	replace
75	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  	113	None	replace
76	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  	113	None	replace
77	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  	113	None	replace
78	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
79	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
80	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
81	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	53	None	replace
82	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	53	None	replace
83	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	53	None	replace
84	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.FOR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.FOR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.FOR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	53	None	replace
85	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.RETURN)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.RETURN)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.RETURN)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	53	None	replace
86	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	91	None	replace
87	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.getParent();  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	91	None	replace
88	[BUG]  [BUGGY]  parent  ==  null)  {  return  Token.BLOCK;  }  else  if(parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null)  {  return  Token.BLOCK;  }  else  if(parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null)  {  return  Token.BLOCK;  }  else  if(parent!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	91	None	replace
89	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
90	[BUG]  [BUGGY]  if(Token.CATCH  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
91	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
92	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
93	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  case    Boolean.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	22	None	replace
94	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BOOLEAN;	  case    Boolean.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	22	None	replace
95	[BUG]  [BUGGY]  case  Boolean.FALSE:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.FALSE:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.FALSE:  return  Token.BLOCK;	  case    Boolean.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	22	None	replace
96	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;	  case    Boolean.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	22	None	replace
97	[BUG]  [BUGGY]  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
98	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  Token.EXPR_RESULT)  {  return  Token.EXPR_RESULT;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
99	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  Token.BLOCK  ||  token  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
100	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	25	None	replace
101	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLACK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLACK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLACK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	25	None	replace
102	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK  +  1;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	80	None	replace
103	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  2;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  2;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	80	None	replace
104	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK  +  1;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	80	None	replace
105	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	70	None	replace
106	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	122	None	replace
107	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	59	None	replace
108	[BUG]  [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	59	None	replace
109	[BUG]  [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(jscomp.jscomp.mozilla.rhino.Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	59	None	replace
110	[BUG]  [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(jscomp.jscomp.mozilla.rhino.Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	59	None	replace
111	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    &&    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
112	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(TOKEN))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    &&    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
113	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    &&    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
114	[BUG]  [BUGGY]  ||(token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
115	[BUG]  [BUGGY]  ||(Token.BLOCK  ==  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK  ==  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK  ==  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
116	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.EMPTY  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.EMPTY  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.EMPTY  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
117	[BUG]  [BUGGY]  ||(token.BLOCK!=  Token.EXPR_RESERVED  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  Token.EXPR_RESERVED  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  Token.EXPR_RESERVED  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
118	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
119	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
120	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK;  break;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK;  break;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
121	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK;  break;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
122	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK;  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK;  break;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
123	[BUG]  [BUGGY]  case  'n':  return  Token.BLOCK;  break;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  'n':  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  'n':  return  Token.BLOCK;  break;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  	127	None	replace
124	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  break;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  break;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  	127	None	replace
125	[BUG]  [BUGGY]  ||  parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
126	[BUG]  [BUGGY]  parent  ==  null  ||  parent.parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
127	[BUG]  [BUGGY]  parent  ==  null  ||  parent.parent!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.parent!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.parent!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
128	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.parent;  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
129	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.parent;  return  Token.BLOCK;  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
130	[BUG]  [BUGGY]  cas  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  cas  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	cas  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	23	None	replace
131	[BUG]  [BUGGY]  cases  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  cases  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	cases  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	23	None	replace
132	[BUG]  [BUGGY]  Case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	23	None	replace
133	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	23	None	replace
134	[BUG]  [BUGGY]  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	23	None	replace
135	[BUG]  [BUGGY]  AssertionFailedError.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.BLOCK:  return  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
136	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
137	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.BLOCK  +  1;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
138	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.BOOLEAN;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
139	[BUG]  [BUGGY]  final  Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  final  Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	final  Token.BLOCK:  return  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
140	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  -  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.BLOCK  -  1;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
141	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
142	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
143	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
144	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
145	[BUG]  [BUGGY]  case  '('  expected:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  '('  expected:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  '('  expected:  return  Token.BLOCK;	  case    ')'    expected:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	5	None	replace
146	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected:  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected:  return  Token.BOOLEAN;	  case    ')'    expected:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	5	None	replace
147	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.CATCH;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected:  return  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected:  return  Token.CATCH;	  case    ')'    expected:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	5	None	replace
148	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.OBJECTLIT;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected:  return  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected:  return  Token.OBJECTLIT;	  case    ')'    expected:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	5	None	replace
149	[BUG]  [BUGGY]  case  ')'  expected:  return  Token.ARRAY;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected:  return  Token.ARRAY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected:  return  Token.ARRAY;	  case    ')'    expected:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	5	None	replace
150	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  	108	None	replace
151	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  ')'  expected	108	None	replace
152	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  ')'  expected	108	None	replace
153	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  	108	None	replace
154	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  	108	None	replace
155	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BOOLEAN:  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BOOLEAN:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BOOLEAN:	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	98	None	replace
156	[BUG]  [BUGGY]  case  ')'  expected:  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected:	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	98	None	replace
157	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLACK:  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLACK:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLACK:	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	98	None	replace
158	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.LONG:  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.LONG:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.LONG:	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	98	None	replace
159	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.OBJECT:  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.OBJECT:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.OBJECT:	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	98	None	replace
160	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
161	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	32	None	replace
162	[BUG]  [BUGGY]  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
163	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BOOLEAN))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BOOLEAN))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BOOLEAN))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
164	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.CATCH))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
165	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
166	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.NONE)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
167	[BUG]  [BUGGY]  if(Token.NONE  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
168	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
169	[BUG]  [BUGGY]  if(Token.CATCH!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  ')'  expected	112	None	replace
170	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".);  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  	112	None	replace
171	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
172	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
173	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.NAME)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
174	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  null)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  null)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  null)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
175	[BUG]  [BUGGY]  ||  Token.CATCH!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.CATCH!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.CATCH!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
176	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
177	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
178	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.JSR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.JSR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.JSR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
179	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
180	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
181	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
182	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.EMPTY)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
183	[BUG]  [BUGGY]  ||  token!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
184	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  Token.GETPROP;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  Token.GETPROP;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.BLOCK  |  Token.GETPROP;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
185	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.GETPROP;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.GETPROP;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.GETPROP;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
186	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GETPROP  +  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GETPROP  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.GETPROP  +  1;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
187	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GETELEM;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GETELEM;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.GETELEM;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
188	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  &  Token.GETPROP;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  &  Token.GETPROP;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  &  Token.GETPROP;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
189	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  |  Token.GETPROP;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  |  Token.GETPROP;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  -  Token.BLOCK  |  Token.GETPROP;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
190	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	111	None	replace
191	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	111	None	replace
192	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	111	None	replace
193	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
194	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
195	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
196	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.CATCH;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	24	None	replace
197	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BOOLEAN;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	24	None	replace
198	[BUG]  [BUGGY]  case  ')'  expected;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
199	[BUG]  [BUGGY]  case  BLOCK:  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
200	[BUG]  [BUGGY]  case  Boolean.BLOCK:  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
201	[BUG]  [BUGGY]  case  Boolean.FALSE:  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.FALSE:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.FALSE:	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
202	[BUG]  [BUGGY]  case  ')'  expected  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
203	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
204	[BUG]  [BUGGY]  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
205	[BUG]  [BUGGY]  |  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
206	[BUG]  [BUGGY]  ||  token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
207	[BUG]  [BUGGY]  ||  Token.CATCH!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.CATCH!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.CATCH!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
208	[BUG]  [BUGGY]  ||  Token.BLOCK!=  JSR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  JSR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  JSR)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
209	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	19	None	replace
210	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.CATCH;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.CATCH;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	19	None	replace
211	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BOOLEAN;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	19	None	replace
212	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	19	None	replace
213	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.NAME;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.NAME;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.NAME;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	19	None	replace
214	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
215	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
216	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
217	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT);	  AssertionFailedError    e    =    new    AssertionFailedError(token);    	non-compiled	[CE]  ')'  expected	9	None	replace
218	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH,  token);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.CATCH,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(token);    	non-compiled	[CE]  ')'  expected	9	None	replace
219	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
220	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
221	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
222	[BUG]  [BUGGY]  &&  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
223	[BUG]  [BUGGY]  |  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
224	[BUG]  [BUGGY]  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
225	[BUG]  [BUGGY]  ||  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
226	[BUG]  [BUGGY]  ||  Token.JSR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.JSR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.JSR)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
227	[BUG]  [BUGGY]  ||  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
228	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  2;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  2;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  ')'  expected	18	None	replace
229	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  -  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK  -  1;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  ')'  expected	18	None	replace
230	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  /  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  /  1;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  ')'  expected	18	None	replace
231	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1L;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1L;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  1L;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  ')'  expected	18	None	replace
232	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
233	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	67	None	replace
234	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	67	None	replace
235	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.BLOCK  +  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	67	None	replace
236	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  +  2;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  +  2;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	67	None	replace
237	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
238	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	58	None	replace
239	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	41	None	replace
240	[BUG]  [BUGGY]  &&  Token.EXPR_RESULT!=  Token.BLOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.EXPR_RESULT!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.EXPR_RESULT!=  Token.BLOCK;	  ||    Token.EXPR_RESULT!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	83	None	replace
241	[BUG]  [BUGGY]  |  Token.EXPR_RESULT!=  Token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.EXPR_RESULT!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.EXPR_RESULT!=  Token.BLOCK;	  ||    Token.EXPR_RESULT!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	83	None	replace
242	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.CATCH;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT!=  Token.CATCH;	  ||    Token.EXPR_RESULT!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	83	None	replace
243	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  >=  Token.BLOCK;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  >=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  >=  Token.BLOCK;	  ||    Token.EXPR_RESULT!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	83	None	replace
244	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  >>  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  >>  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  >>  Token.BLOCK;	  ||    Token.EXPR_RESULT!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	83	None	replace
245	[BUG]  [BUGGY]  if(JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
246	[BUG]  [BUGGY]  if(tokenType  ==  Token.BLOCK)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.BLOCK)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.BLOCK)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
247	[BUG]  [BUGGY]  if(tokenType  ==  Token.CATCH)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.CATCH)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.CATCH)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
248	[BUG]  [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.BLOCK!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.BLOCK!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(jscomp.jscomp.mozilla.rhino.Token.BLOCK!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
249	[BUG]  [BUGGY]  if(tokenType  ==  JSError.EXPR_RESULT)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  JSError.EXPR_RESULT)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  JSError.EXPR_RESULT)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
250	[BUG]  [BUGGY]  case  Token.OBJECTLIT:  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.OBJECTLIT:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.OBJECTLIT:	  case    Token.BLOCK:    	non-compiled	[CE]  ')'  expected	4	None	replace
251	[BUG]  [BUGGY]  case  Token.CATCH:  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.CATCH:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.CATCH:	  case    Token.BLOCK:    	non-compiled	[CE]  ')'  expected	4	None	replace
252	[BUG]  [BUGGY]  case  Token.BOOLEAN:  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BOOLEAN:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BOOLEAN:	  case    Token.BLOCK:    	non-compiled	[CE]  ')'  expected	4	None	replace
253	[BUG]  [BUGGY]  case  Token.FLOAT:  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.FLOAT:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.FLOAT:	  case    Token.BLOCK:    	non-compiled	[CE]  ')'  expected	4	None	replace
254	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
255	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  ||  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  ||  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
256	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
257	[BUG]  [BUGGY]  ||(parent!=  null  &&  parent.getType()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(parent!=  null  &&  parent.getType()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(parent!=  null  &&  parent.getType()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
258	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
259	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	123	None	replace
260	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getParent()!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.getParent()!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.getParent()!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	123	None	replace
261	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getParent()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.getParent()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.getParent()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	123	None	replace
262	[BUG]  [BUGGY]  ||  parent  ==  parent.getParent())  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  parent  ==  parent.getParent())  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  parent  ==  parent.getParent())  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	123	None	replace
263	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	123	None	replace
264	[BUG]  [BUGGY]  ||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NUMBER!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
265	[BUG]  [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
266	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.STRING)  {  return  Token.STRING;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.STRING)  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER!=  Token.STRING)  {  return  Token.STRING;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
267	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER!=  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
268	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
269	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.NULL)  {  return  Token.NULL;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.NULL)  {  return  Token.NULL;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER!=  Token.NULL)  {  return  Token.NULL;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
270	[BUG]  [BUGGY]  case  'n':  return  Token.BLOCK;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  'n':  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  'n':  return  Token.BLOCK;	  case    blk:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	121	None	replace
271	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
272	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
273	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
274	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
275	[BUG]  [BUGGY]  if(token!=  Token.JSR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  Token.JSR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  Token.JSR)  {  return  Token.BLOCK;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
276	[BUG]  [BUGGY]  if(token!=  JSR)  {  return  Token.CATCH;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  JSR)  {  return  Token.CATCH;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  JSR)  {  return  Token.CATCH;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
277	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
278	[BUG]  [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
279	[BUG]  [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  Token.NAME  &&  token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
280	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
281	[BUG]  [BUGGY]  ||(Token.NAME!=  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.NAME!=  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.NAME!=  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
282	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
283	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
284	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
285	[BUG]  [BUGGY]  if(Token.BLOCK!=  TOKEN  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  TOKEN  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  TOKEN  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
286	[BUG]  [BUGGY]  ||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NUMBER!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
287	[BUG]  [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null)  {  parent  =  parent.getParent();  }	  parent!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	92	None	replace
288	[BUG]  [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalStateException( " ");  }	  parent!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	92	None	replace
289	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.getParent();  }  else  {  throw  new  IllegalStateException( " ");  }	  parent!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	92	None	replace
290	[BUG]  [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null)  {  parent  =  parent.getParent();  }  else  {  return  Token.BLOCK;  }	  parent!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	92	None	replace
291	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
292	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
293	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
294	[BUG]  [BUGGY]  ||  token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token.BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
295	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
296	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.NULL)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.NULL)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.NULL)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
297	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
298	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.EMPTY)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
299	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
300	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
301	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME)  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
302	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
303	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING)  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
304	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "_ ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "_ ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "_ ")))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(   "   ")))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	118	None	replace
305	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "* ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "* ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "* ")))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(   "   ")))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	118	None	replace
306	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals( "   ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals( "   ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  ||  Token.BLOCK.equals( "   ")))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(   "   ")))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	118	None	replace
307	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "- ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "- ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "- ")))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(   "   ")))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	118	None	replace
308	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "/ ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "/ ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals( "/ ")))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(   "   ")))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	118	None	replace
309	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	40	None	replace
310	[BUG]  [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.make(Token.BLOCK,  token)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	40	None	replace
311	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
312	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
313	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
314	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
315	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
316	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
317	[BUG]  [BUGGY]  ||  token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token.BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
318	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.FUNCTION)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
319	[BUG]  [BUGGY]  ||  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NONE)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
320	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  |  Token.BLOCK;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  |  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	17	None	replace
321	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  -  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  -  1;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	17	None	replace
322	[BUG]  [BUGGY]  case  Token.BOOLEAN:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BOOLEAN:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BOOLEAN:  return  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	17	None	replace
323	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  +  1;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	17	None	replace
324	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESERVED);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESERVED);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESERVED);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
325	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  true);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  true);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  true);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
326	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  null);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  null);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  null);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
327	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.BLOCK);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(token,  Token.BLOCK);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
328	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  false);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  false);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  token,  false);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
329	[BUG]  [BUGGY]  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	48	None	replace
330	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( ". "))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( ". "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( ". "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	48	None	replace
331	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( "_ "))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( "_ "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( "_ "))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(   "   "))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	48	None	replace
332	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.CATCH,  token);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.CATCH,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.CATCH,  token);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
333	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESERVED);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESERVED);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESERVED);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
334	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  true);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  true);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  true);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
335	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  null);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  null);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  null);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
336	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(token,  Token.BLOCK);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(token,  Token.BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(token,  Token.BLOCK);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
337	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  false);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  false);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  false);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
338	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  getType());  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  getType());  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  token,  getType());	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
339	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
340	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
341	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
342	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	62	None	replace
343	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
344	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
345	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
346	[BUG]  [BUGGY]  if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.FUNCTION!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
347	[BUG]  [BUGGY]  if(tokenType  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
348	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.FUNCTION  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
349	[BUG]  [BUGGY]  case  '(':  return  Token.BLOCK;case  ')':  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  '(':  return  Token.BLOCK;case  ')':  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  '(':  return  Token.BLOCK;case  ')':  return  Token.BLOCK;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
350	[BUG]  [BUGGY]  case  ')':  return  Token.CATCH;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')':  return  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')':  return  Token.CATCH;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
351	[BUG]  [BUGGY]  case  ')':  return  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')':  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')':  return  Token.BOOLEAN;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
352	[BUG]  [BUGGY]  case  '(':  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  '(':  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  '(':  return  Token.BLOCK;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
353	[BUG]  [BUGGY]  case  ')':  return  Token.EXPR_RESERVED;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')':  return  Token.EXPR_RESERVED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')':  return  Token.EXPR_RESERVED;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
354	[BUG]  [BUGGY]  if(JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
355	[BUG]  [BUGGY]  if(tokenType  ==  Token.BLOCK)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.BLOCK)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.BLOCK)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
356	[BUG]  [BUGGY]  if(tokenType  ==  Token.CATCH)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.CATCH)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.CATCH)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
357	[BUG]  [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.BLOCK!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(jscomp.jscomp.mozilla.rhino.Token.BLOCK!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(jscomp.jscomp.mozilla.rhino.Token.BLOCK!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
358	[BUG]  [BUGGY]  if(tokenType  ==  JSError.EXPR_RESULT)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  JSError.EXPR_RESULT)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  JSError.EXPR_RESULT)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
359	[BUG]  [BUGGY]  ||  Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
360	[BUG]  [BUGGY]  if(Token.JSR  ==  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR  ==  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR  ==  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	104	None	replace
361	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
362	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
363	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK!=  Token.END)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK!=  Token.END)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK!=  Token.END)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
364	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK!=  Token.TRY)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK!=  Token.TRY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK!=  Token.TRY)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
365	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	31	None	replace
366	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	31	None	replace
367	[BUG]  [BUGGY]  ||  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	31	None	replace
368	[BUG]  [BUGGY]  ||  token!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	31	None	replace
369	[BUG]  [BUGGY]  ||  Token.NONE!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NONE!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NONE!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NONE!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
370	[BUG]  [BUGGY]  if(Token.NONE!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.NONE!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
371	[BUG]  [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.NONE!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.NONE!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE!=  Token.BLOCK  ||  Token.NONE!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NONE!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
372	[BUG]  [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.NONE!=  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.NONE!=  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE!=  Token.BLOCK  ||  Token.NONE!=  Token.NONE)  {  return  Token.BLOCK;  }	  if(Token.NONE!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
373	[BUG]  [BUGGY]  if(Token.NONE!=  Token.STRING)  {  return  Token.STRING;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE!=  Token.STRING)  {  return  Token.STRING;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE!=  Token.STRING)  {  return  Token.STRING;  }	  if(Token.NONE!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
374	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
375	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
376	[BUG]  [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token.equals(Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
377	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
378	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.FOR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.FOR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.FOR)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
379	[BUG]  [BUGGY]  ||  Token.NAME  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME  ==  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
380	[BUG]  [BUGGY]  ||  Token.NAME  >>  Token.BLOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME  >>  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME  >>  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
381	[BUG]  [BUGGY]  ||  Token.NAME  >=  Token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME  >=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME  >=  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
382	[BUG]  [BUGGY]  ||  Token.NAME  [Delete]  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME  [Delete]  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME  [Delete]  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
383	[BUG]  [BUGGY]  ||  Token.NAME  =  Token.BLOCK;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME  =  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME  =  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
384	[BUG]  [BUGGY]  ||  Token.NAME  ==  Token.CATCH;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NAME  ==  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NAME  ==  Token.CATCH;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
385	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.BLOCK  |  1;	  return    Token.BLOCK    |    Token.BLOCK    |    1;    	non-compiled	[CE]  ')'  expected	101	None	replace
386	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  2;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  2;	  return    Token.BLOCK    |    Token.BLOCK    |    1;    	non-compiled	[CE]  ')'  expected	101	None	replace
387	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  0;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  0;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  0;	  return    Token.BLOCK    |    Token.BLOCK    |    1;    	non-compiled	[CE]  ')'  expected	101	None	replace
388	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  1L;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  1L;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  1L;	  return    Token.BLOCK    |    Token.BLOCK    |    1;    	non-compiled	[CE]  ')'  expected	101	None	replace
389	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  &  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  &  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  &  1;	  return    Token.BLOCK    |    Token.BLOCK    |    1;    	non-compiled	[CE]  ')'  expected	101	None	replace
390	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	2	None	replace
391	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  2;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  2;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	20	None	replace
392	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  3;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  3;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  3;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	20	None	replace
393	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  1;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	20	None	replace
394	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.JSR;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.JSR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.JSR;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
395	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  Token.CATCH;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.BLOCK  |  Token.CATCH;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
396	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.EXPR_RESERVED;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.EXPR_RESERVED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.EXPR_RESERVED;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
397	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.NAME;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.NAME;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.NAME;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
398	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.SEMI;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.SEMI;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.SEMI;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
399	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.END;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.END;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.END;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
400	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.CATCH;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	65	None	replace
401	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.NAME;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	65	None	replace
402	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
403	[BUG]  [BUGGY]  if(Token.JSR!=  null)  {  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null)  {  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null)  {  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
404	[BUG]  [BUGGY]  if(Token.JSR!=  null)  {  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null)  {  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null)  {  if(Token.BLOCK!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
405	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
406	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
407	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
408	[BUG]  [BUGGY]  case  BLOCK_ARRAY:  return  Token.BLOCK_ARRAY;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK_ARRAY:  return  Token.BLOCK_ARRAY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK_ARRAY:  return  Token.BLOCK_ARRAY;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK_ARRAY;    	non-compiled	[CE]  ')'  expected	81	None	replace
409	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK_ARRAY;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK_ARRAY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK_ARRAY;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK_ARRAY;    	non-compiled	[CE]  ')'  expected	81	None	replace
410	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_ARRAY;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK_ARRAY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK_ARRAY;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK_ARRAY;    	non-compiled	[CE]  ')'  expected	81	None	replace
411	[BUG]  [BUGGY]  case  Boogle.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_ARRAY;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boogle.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_ARRAY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boogle.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_ARRAY;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK_ARRAY;    	non-compiled	[CE]  ')'  expected	81	None	replace
412	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK_ARRAY;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK_ARRAY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK_ARRAY;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK_ARRAY;    	non-compiled	[CE]  ')'  expected	81	None	replace
413	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	71	None	replace
414	[BUG]  [BUGGY]  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	90	None	replace
415	[BUG]  [BUGGY]  if(Token.JSSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	90	None	replace
416	[BUG]  [BUGGY]  if(Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	90	None	replace
417	[BUG]  [BUGGY]  if(Token.JSR!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null)  {  return  Token.BLOCK;  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	90	None	replace
418	[BUG]  [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	100	None	replace
419	[BUG]  [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOOLEAN;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	100	None	replace
420	[BUG]  [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  errorReporter);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  errorReporter);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.BLOCK,  token,  errorReporter);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
421	[BUG]  [BUGGY]  AssertionFailedError.show(Token.BLOCK,  result);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.BLOCK,  result);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.BLOCK,  result);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
422	[BUG]  [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  0);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  0);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.BLOCK,  token,  0);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
423	[BUG]  [BUGGY]  AssertionFailedError.show(Token.CATCH,  token);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.CATCH,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.CATCH,  token);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
424	[BUG]  [BUGGY]  AssertionFailedError.show(Token.BLOCK,  return  Token.BLOCK);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.BLOCK,  return  Token.BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.BLOCK,  return  Token.BLOCK);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
425	[BUG]  [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  MISSING_DIRECTIVES);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  MISSING_DIRECTIVES);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.BLOCK,  token,  MISSING_DIRECTIVES);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
426	[BUG]  [BUGGY]  AssertionFailedError.show(token,  BLOCK);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(token,  BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(token,  BLOCK);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
427	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	3	None	replace
428	[BUG]  [BUGGY]  result  =  Token.BLOCK  &  Token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  &  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	result  =  Token.BLOCK  &  Token.BLOCK;	  return    Token.BLOCK    &    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	63	None	replace
429	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
430	[BUG]  [BUGGY]  if(Token.JSR!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
431	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
432	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	93	None	replace
433	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	93	None	replace
434	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	93	None	replace
435	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	93	None	replace
436	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
437	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
438	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.CATCH  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
439	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.BLOCK  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	126	None	replace
440	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
441	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.EMPTY)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
442	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
443	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.BLOCK  ||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.BLOCK  ||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.BLOCK  ||  Token.EXPR_RESERVED!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
444	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.FOR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.FOR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.FOR)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
445	[BUG]  [BUGGY]  ||(Token.EXPR_RESERVED!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.EXPR_RESERVED!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.EXPR_RESERVED!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
446	[BUG]  [BUGGY]  if(BLOCK!=  null  ||  BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(BLOCK!=  null  ||  BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(BLOCK!=  null  ||  BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  if(BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	84	None	replace
447	[BUG]  [BUGGY]  if(token!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  null)  {  return  Token.BLOCK;  }	  if(BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	84	None	replace
448	[BUG]  [BUGGY]  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
449	[BUG]  [BUGGY]  if(Token.JSSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	60	None	replace
450	[BUG]  [BUGGY]  if(Token.JSR!=  null  ||  Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null  ||  Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null  ||  Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	60	None	replace
451	[BUG]  [BUGGY]  if(Token.JSR!=  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	60	None	replace
452	[BUG]  [BUGGY]  &&  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
453	[BUG]  [BUGGY]  |  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
454	[BUG]  [BUGGY]  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK)  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
455	[BUG]  [BUGGY]  ||  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.CATCH)  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
456	[BUG]  [BUGGY]  ||  Token.EMPTY)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EMPTY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EMPTY)  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
457	[BUG]  [BUGGY]  ||  Token.JSR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.JSR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.JSR)  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
458	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	128	None	replace
459	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	128	None	replace
460	[BUG]  [BUGGY]  ||  Token.NONE!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NONE!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NONE!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	128	None	replace
461	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.CATCH;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.CATCH;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
462	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.CATCH;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  -  Token.CATCH;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
463	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.CATCH;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.CATCH;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
464	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.JSR;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.JSR;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.JSR;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
465	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.EXPR_RESERVED;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.EXPR_RESERVED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.EXPR_RESERVED;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
466	[BUG]  [BUGGY]  result  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  result  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	result  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  parent    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
467	[BUG]  [BUGGY]  ||  parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  parent    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
468	[BUG]  [BUGGY]  case  Token.EXPR_RESERVED:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.EXPR_RESERVED:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.EXPR_RESERVED:  return  Token.BLOCK;	  parent    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
469	[BUG]  [BUGGY]  result  {  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  result  {  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	result  {  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  parent    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
470	[BUG]  [BUGGY]  if(parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  parent    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
471	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
472	[BUG]  [BUGGY]  result  =  Token.BLOCK  /  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  result  =  Token.BLOCK  /  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	result  =  Token.BLOCK  /  Token.BLOCK;	  return    Token.BLOCK    /    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	66	None	replace
473	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.EXPR_RESERVED;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.EXPR_RESERVED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.EXPR_RESERVED;	  return    Token.BLOCK    /    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	66	None	replace
474	[BUG]  [BUGGY]  if(token!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
475	[BUG]  [BUGGY]  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
476	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
477	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	116	None	replace
478	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESULT  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	116	None	replace
479	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EMPTY  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EMPTY  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EMPTY  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	116	None	replace
480	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESULT  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESULT  &&  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	116	None	replace
481	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	94	None	replace
482	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.EXPR_RESERVED  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	94	None	replace
483	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	94	None	replace
484	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	94	None	replace
485	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  return  JSR;  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	85	None	replace
486	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(TOKEN))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(TOKEN))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(TOKEN))  {  return  JSR;  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	85	None	replace
487	[BUG]  [BUGGY]  if(Token.CATCH  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	72	None	replace
488	[BUG]  [BUGGY]  ||  Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	72	None	replace
489	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.BLOCK  ||  Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.BLOCK  ||  Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.BLOCK  ||  Token.CATCH!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	72	None	replace
490	[BUG]  [BUGGY]  if(tokenType  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	72	None	replace
491	[BUG]  [BUGGY]  if(Token.CATCH!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.CATCH!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.CATCH!=  Token.NAME)  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	72	None	replace
492	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
493	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
494	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	69	None	replace
495	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(token))  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
496	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
497	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
498	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  	108	None	replace
499	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ".   ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  ')'  expected	108	None	replace
500	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  errorReporter);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(token,  errorReporter);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(token,  errorReporter);	  AssertionFailedError    e    =    new    AssertionFailedError(token);    	non-compiled	[CE]  ')'  expected	9	None	replace
501	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK  &&  Token.BLOCK;	  case    Boolean.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	22	None	replace
502	[BUG]  [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  -  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean.BLOCK:  return  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean.BLOCK:  return  Token.BLOCK  -  1;	  case    Boolean.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	22	None	replace
503	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.OBJECTLIT;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.OBJECTLIT;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	19	None	replace
504	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.BOOLEAN;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	65	None	replace
505	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.ARRAY;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.ARRAY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.ARRAY;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	65	None	replace
506	[BUG]  [BUGGY]  return  Token.NUMBER;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.NUMBER;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.NUMBER;	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
507	[BUG]  [BUGGY]  Token.NUMBER:  return  Token.NUMBER;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.NUMBER:  return  Token.NUMBER;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.NUMBER:  return  Token.NUMBER;	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
508	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.NUMBER,  token)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.NUMBER,  token)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.NUMBER,  token)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
509	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.STRING)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
510	[BUG]  [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
511	[BUG]  [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE!=  Token.BLOCK  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
512	[BUG]  [BUGGY]  ||  Token.NONE!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NONE!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NONE!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
513	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  [Delete]  Token.BLOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  [Delete]  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  [Delete]  Token.BLOCK;	  ||    Token.EXPR_RESULT!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	83	None	replace
514	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  +  1;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	24	None	replace
515	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	24	None	replace
516	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  >>  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
517	[BUG]  [BUGGY]  ||  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
518	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
519	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
520	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  ')'  expected	112	None	replace
521	[BUG]  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  ')'  expected	112	None	replace
522	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	116	None	replace
523	[BUG]  [BUGGY]  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	71	None	replace
524	[BUG]  [BUGGY]  if(tokenType  ==  Token.STRING)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.STRING)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.STRING)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
525	[BUG]  [BUGGY]  return  Token.EXPR_RESERVED;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.EXPR_RESERVED;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.EXPR_RESERVED;	  parent    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
526	[BUG]  [BUGGY]  ||  parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  parent  ==  Token.EXPR_RESERVED)  {  return  Token.BLOCK;	  parent    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	88	None	replace
527	[BUG]  [BUGGY]  case  ':'  expected:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ':'  expected:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ':'  expected:  return  Token.BLOCK;	  case    ')'    expected:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	5	None	replace
528	[BUG]  [BUGGY]  ')'  expected:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ')'  expected:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	')'  expected:  return  Token.BLOCK;	  case    ')'    expected:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	5	None	replace
529	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
530	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
531	[BUG]  [BUGGY]  return  Token.NONE;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.NONE;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.NONE;	  if(Token.NONE!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
532	[BUG]  [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  java.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  1;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	100	None	replace
533	[BUG]  [BUGGY]  case  0:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  0:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  0:  return  Token.BLOCK;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	100	None	replace
534	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.FIELD,  Token.BLOCK);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.FIELD,  Token.BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.FIELD,  Token.BLOCK);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK);    	non-compiled	[CE]  ')'  expected	7	None	replace
535	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  >>  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	31	None	replace
536	[BUG]  [BUGGY]  ||  token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token.BLOCK!=  Token.NAME)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	31	None	replace
537	[BUG]  [BUGGY]  AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	72	None	replace
538	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	72	None	replace
539	[BUG]  [BUGGY]  AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK  ==  Token.BLOCK;	  if(Token.BLOCK    ==    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	82	None	replace
540	[BUG]  [BUGGY]  return  Token.BLOCK  +  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  +  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  +  Token.BLOCK  +  1;	  return    Token.BLOCK    +    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	114	None	replace
541	[BUG]  [BUGGY]  return  Token.BLOCK  +  Token.OBJECTLIT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  +  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  +  Token.OBJECTLIT;	  return    Token.BLOCK    +    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	114	None	replace
542	[BUG]  [BUGGY]  return  Token.BLOCK  +  Token.BLOCK  -  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  +  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  +  Token.BLOCK  -  1;	  return    Token.BLOCK    +    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	114	None	replace
543	[BUG]  [BUGGY]  ||(parent!=  null  &&  parent.getParent()!=  null))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(parent!=  null  &&  parent.getParent()!=  null))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(parent!=  null  &&  parent.getParent()!=  null))  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
544	[BUG]  [BUGGY]  ||(parent!=  null  &&  parent.getValue()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(parent!=  null  &&  parent.getValue()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(parent!=  null  &&  parent.getValue()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
545	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
546	[BUG]  [BUGGY]  parent  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
547	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  -  1  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  -  1  +  1;	  case    Token.BLOCK:    return    Token.BLOCK    -    1;    	non-compiled	[CE]  ')'  expected	18	None	replace
548	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	53	None	replace
549	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER!=  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
550	[BUG]  [BUGGY]  if(parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  parent!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	92	None	replace
551	[BUG]  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:	  parent!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	92	None	replace
552	[BUG]  [BUGGY]  ||(BLOCK!=  null  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(BLOCK!=  null  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(BLOCK!=  null  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }	  if(BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	84	None	replace
553	[BUG]  [BUGGY]  ||(BLOCK!=  null  &&  BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(BLOCK!=  null  &&  BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(BLOCK!=  null  &&  BLOCK.equals( " ")))  {  return  Token.BLOCK;  }	  if(BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	84	None	replace
554	[BUG]  [BUGGY]  ||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
555	[BUG]  [BUGGY]  ||(parent!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(parent!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(parent!=  Token.NAME  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
556	[BUG]  [BUGGY]  ||(Token.NAME  ==  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.NAME  ==  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.NAME  ==  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
557	[BUG]  [BUGGY]  ||(Token.NAME!=  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.NAME!=  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.NAME!=  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
558	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  name);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  name);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  name);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
559	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  return  Token.BLOCK);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  return  Token.BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  return  Token.BLOCK);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
560	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
561	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
562	[BUG]  [BUGGY]  ||  token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
563	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLO  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLO  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLO	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
564	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	93	None	replace
565	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
566	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  throw  new  IllegalArgumentException( " ".);  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	69	None	replace
567	[BUG]  [BUGGY]  ||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(   "   ")))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	118	None	replace
568	[BUG]  [BUGGY]  ||(Token.NAME!=  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.NAME!=  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.NAME!=  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(   "   ")))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	118	None	replace
569	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GETPROP  -  1;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GETPROP  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.GETPROP  -  1;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
570	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
571	[BUG]  [BUGGY]  AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  <  Token.CATCH  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
572	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.CATCH  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	125	None	replace
573	[BUG]  [BUGGY]  ||(token.BLOCK  ==  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK  ==  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK  ==  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
574	[BUG]  [BUGGY]  &&(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	89	None	replace
575	[BUG]  [BUGGY]  if(Token.JSR!=  JSR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  JSR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  JSR)  {  return  Token.BLOCK;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
576	[BUG]  [BUGGY]  if(token!=  TOKEN)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  TOKEN)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  TOKEN)  {  return  Token.BLOCK;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
577	[BUG]  [BUGGY]  ||(token!=  JSR))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token!=  JSR))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token!=  JSR))  {  return  Token.BLOCK;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
578	[BUG]  [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.JSR;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  Token.BLOCK)  {  return  Token.JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  Token.BLOCK)  {  return  Token.JSR;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	75	None	replace
579	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token  ==  Token.BLOCK  &&  token!=  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
580	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.EXPR_RESERVED))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.EXPR_RESERVED))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token  ==  Token.BLOCK  &&  token!=  Token.EXPR_RESERVED))  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
581	[BUG]  [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token!=  Token.BLOCK  &&  token!=  Token.BLOCK))  {  return  Token.BLOCK;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
582	[BUG]  [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token!=  Token.BLOCK  &&  token!=  Token.EXPR_RESULT))  {  return  Token.BLOCK;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
583	[BUG]  [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token!=  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token!=  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }	  if(token!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	110	None	replace
584	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.NAME,  token)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.NAME,  token)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.NAME,  token)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
585	[BUG]  [BUGGY]  Token.NAME:  return  Token.NAME;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.NAME:  return  Token.NAME;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.NAME:  return  Token.NAME;	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
586	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.BOOLEAN;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK)  {  return  Token.BOOLEAN;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME!=  Token.BLOCK)  {  return  Token.BOOLEAN;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
587	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  4;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  4;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  4;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	80	None	replace
588	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  3;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  3;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  3;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	80	None	replace
589	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  8;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  8;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK  +  8;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	80	None	replace
590	[BUG]  [BUGGY]  ||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
591	[BUG]  [BUGGY]  ||(Token.NAME  ==  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.NAME  ==  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.NAME  ==  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
592	[BUG]  [BUGGY]  ||(token.NAME  ==  Token.BLOCK.equals(Token.NAME)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.NAME  ==  Token.BLOCK.equals(Token.NAME)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.NAME  ==  Token.BLOCK.equals(Token.NAME)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	119	None	replace
593	[BUG]  [BUGGY]  ||(parent  ==  null  &&  parent.getType()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(parent  ==  null  &&  parent.getType()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(parent  ==  null  &&  parent.getType()  ==  Token.BLOCK))  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
594	[BUG]  [BUGGY]  |  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
595	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.SEMI)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.SEMI)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.SEMI)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
596	[BUG]  [BUGGY]  &&  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
597	[BUG]  [BUGGY]  case  '(')':  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  '(')':  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  '(')':  return  Token.BLOCK;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
598	[BUG]  [BUGGY]  case  ')':  return  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')':  return  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')':  return  Token.BLOCK  +  1;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
599	[BUG]  [BUGGY]  case  ')':  return  token.BLOCK;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')':  return  token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')':  return  token.BLOCK;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
600	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    &&    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
601	[BUG]  [BUGGY]  case  blk:  return  Token.BLOCK  |  Token.BLOCK;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  blk:  return  Token.BLOCK  |  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  blk:  return  Token.BLOCK  |  Token.BLOCK;	  case    blk:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	121	None	replace
602	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.EXPR_RESULT;	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
603	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
604	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.EXPR_RESULT,  token)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.EXPR_RESULT,  token)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
605	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  JSR;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
606	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  JSR;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  null)  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	96	None	replace
607	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.parent  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
608	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.parent;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
609	[BUG]  [BUGGY]  parent  ==  null  ||  parent.parent  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.parent  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.parent  ==  Token.BLOCK;	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
610	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.parent;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.parent;  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
611	[BUG]  [BUGGY]  if(Token.EXPR_RESERVED!=  Token.BLOCK  ||  Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESERVED!=  Token.BLOCK  ||  Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESERVED!=  Token.BLOCK  ||  Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
612	[BUG]  [BUGGY]  ||  token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
613	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED)  {  return  token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED)  {  return  token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
614	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  >>  Token.NONE)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
615	[BUG]  [BUGGY]  ||  BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  BLOCK!=  Token.NONE)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
616	[BUG]  [BUGGY]  ||  Token.BLOCK!=  0)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  0)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  0)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
617	[BUG]  [BUGGY]  ||  BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  BLOCK!=  null)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
618	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  +  1;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.BLOCK  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  ==  Token.BLOCK  +  1;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	117	None	replace
619	[BUG]  [BUGGY]  case  TOken.BLOCK:  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  TOken.BLOCK:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  TOken.BLOCK:	  case    Token.BLOCK:    	non-compiled	[CE]  ')'  expected	4	None	replace
620	[BUG]  [BUGGY]  case  Token.BLACK:  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLACK:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLACK:	  case    Token.BLOCK:    	non-compiled	[CE]  ')'  expected	4	None	replace
621	[BUG]  [BUGGY]  ||(BLOCK  ==  null  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(BLOCK  ==  null  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(BLOCK  ==  null  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }	  if(BLOCK    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	95	None	replace
622	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.BLOCK_AND;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.BLOCK_AND;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.BLOCK_AND;	  return    Token.BLOCK    &    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	63	None	replace
623	[BUG]  [BUGGY]  if(Token.JSR  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	104	None	replace
624	[BUG]  [BUGGY]  if(Token.JSR!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	104	None	replace
625	[BUG]  [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.NUMBER;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.NUMBER;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER  ==  Token.BLOCK)  {  return  Token.NUMBER;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
626	[BUG]  [BUGGY]  ||  Token.NUMBER  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.NUMBER  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.NUMBER  ==  Token.BLOCK;	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
627	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	111	None	replace
628	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NONE  ||  Token.BLOCK  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
629	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  Token.BLOCK;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	16	None	replace
630	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  -  1;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  |  Token.BLOCK  -  1;	  case    Token.BLOCK:    return    Token.BLOCK    |    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	16	None	replace
631	[BUG]  [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  parent  =  parent.getParent();  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  parent  =  parent.getParent();  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	123	None	replace
632	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getParent()  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.getParent()  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.getParent()  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	123	None	replace
633	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	123	None	replace
634	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getParent()  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.getParent()  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.getParent()  ==  Token.BLOCK;	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	123	None	replace
635	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  case  BLOCK:  return  Token.BLOCK;  break;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  case  BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  case  BLOCK:  return  Token.BLOCK;  break;  }	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
636	[BUG]  [BUGGY]  case  blk:  return  Token.BLOCK;  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  blk:  return  Token.BLOCK;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  blk:  return  Token.BLOCK;  break;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
637	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  case  Token.BLOCK:  return  Token.BLOCK;  break;  }	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
638	[BUG]  [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  ')');  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.BLOCK,  token,  ')');  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.BLOCK,  token,  ')');	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
639	[BUG]  [BUGGY]  AssertionFailedError.show(Token.BLOCK,  name);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.show(Token.BLOCK,  name);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.show(Token.BLOCK,  name);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
640	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOOLEAN  +  1;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOOLEAN  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BOOLEAN  +  1;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	25	None	replace
641	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BOCK:  return  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BOCK:  return  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BOCK:  return  Token.BOOLEAN;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	25	None	replace
642	[BUG]  [BUGGY]  case  ')'  expected  =  Token.BLOCK;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')'  expected  =  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')'  expected  =  Token.BLOCK;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
643	[BUG]  [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BOOLEAN:  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BOOLEAN:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  java.jscomp.mozilla.rhino.Token.BOOLEAN:	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
644	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
645	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  ')';  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  +  ')';  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.BLOCK  +  ')';	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
646	[BUG]  [BUGGY]  &&(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&(Token.BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
647	[BUG]  [BUGGY]  ||(token.BLOCK  ==  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK  ==  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK  ==  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
648	[BUG]  [BUGGY]  ||(Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
649	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null)  {  return  JSR;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null)  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null)  {  return  JSR;  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	85	None	replace
650	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK_NAME;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  return  Token.BLOCK_NAME;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  return  Token.BLOCK_NAME;  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	85	None	replace
651	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	85	None	replace
652	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length()  ==  0)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	122	None	replace
653	[BUG]  [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  ==  null)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  ==  null)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	122	None	replace
654	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_OBJECT;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_OBJECT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_OBJECT;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK_ARRAY;    	non-compiled	[CE]  ')'  expected	81	None	replace
655	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_ARRAY  +  1;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_ARRAY  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK_ARRAY  +  1;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK_ARRAY;    	non-compiled	[CE]  ')'  expected	81	None	replace
656	[BUG]  [BUGGY]  if(parent  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	91	None	replace
657	[BUG]  [BUGGY]  parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	91	None	replace
658	[BUG]  [BUGGY]  if(parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	91	None	replace
659	[BUG]  [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	91	None	replace
660	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.FUNCTION  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
661	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.FUNCTION  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.FUNCTION  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	14	None	replace
662	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.OBJECTLIT;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.OBJECTLIT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.OBJECTLIT;	  return    Token.BLOCK    /    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	66	None	replace
663	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.BLOCK  +  2;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.BLOCK  +  2;	  return    Token.BLOCK    /    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	66	None	replace
664	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.GETPROP;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.GETPROP;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.GETPROP;	  return    Token.BLOCK    /    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	66	None	replace
665	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.BOOLEAN;	  return    Token.BLOCK    /    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	66	None	replace
666	[BUG]  [BUGGY]  return  Token.BLOCK  -  token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  -  token.BLOCK;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
667	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.BOOLEAN;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  -  Token.BOOLEAN;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
668	[BUG]  [BUGGY]  return  BLOCK  -  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  BLOCK  -  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  BLOCK  -  Token.BLOCK;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
669	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  +  2;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.BLOCK  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  -  Token.BLOCK  +  2;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	64	None	replace
670	[BUG]  [BUGGY]  AssertionFailedError.expected(Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.expected(Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.expected(Token.CATCH)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	52	None	replace
671	[BUG]  [BUGGY]  (Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK!=  null))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  (Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK!=  null))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK!=  null))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	94	None	replace
672	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK  ||  Token.BLOCK;	  case    BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	21	None	replace
673	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  -  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  -  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	67	None	replace
674	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  /  1;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  /  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  /  1;	  return    Token.BLOCK    |    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	67	None	replace
675	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  4;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  4;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  4;	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	20	None	replace
676	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  ')';  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  +  ')';  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  +  ')';	  case    Token.BLOCK:    return    Token.BLOCK    +    1;    	non-compiled	[CE]  ')'  expected	20	None	replace
677	[BUG]  [BUGGY]  if(tokenType  ==  Token.STRING)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  Token.STRING)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  Token.STRING)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
678	[BUG]  [BUGGY]  if(tokenType  ==  TOKEN)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(tokenType  ==  TOKEN)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(tokenType  ==  TOKEN)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
679	[BUG]  [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.JSR;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  Token.BLOCK)  {  return  Token.JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  Token.BLOCK)  {  return  Token.JSR;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
680	[BUG]  [BUGGY]  if(token  ==  TOKEN)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  TOKEN)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  TOKEN)  {  return  Token.BLOCK;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
681	[BUG]  [BUGGY]  &&  Token.NAME!=  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  &&  Token.NAME!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	&&  Token.NAME!=  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
682	[BUG]  [BUGGY]  |  Token.NAME  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.NAME  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.NAME  ==  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
683	[BUG]  [BUGGY]  |  Token.NAME!=  Token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |  Token.NAME!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|  Token.NAME!=  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	79	None	replace
684	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.EMPTY)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
685	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EMPTY!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EMPTY!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	56	None	replace
686	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  name);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  name);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  name);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
687	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  return  Token.BLOCK);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  return  Token.BLOCK);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  return  Token.BLOCK);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
688	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.NAME;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.NAME;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.NAME;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
689	[BUG]  [BUGGY]  if(Token.JSR!=  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	90	None	replace
690	[BUG]  [BUGGY]  ||  Token.BLOCK  >>  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK  >>  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK  >>  Token.EXPR_RESULT)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
691	[BUG]  [BUGGY]  ||(token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
692	[BUG]  [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(parent)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(parent)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	120	None	replace
693	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
694	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	105	None	replace
695	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	105	None	replace
696	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  getType());  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  getType());  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  getType());	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
697	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESULT);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESULT);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
698	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  statement);  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  statement);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(Token.BLOCK,  statement);	  AssertionFailedError    t    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	86	None	replace
699	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  if(tokenType  ==  JSR)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  if(tokenType  ==  JSR)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  if(tokenType  ==  JSR)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
700	[BUG]  [BUGGY]  if(Token.JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	68	None	replace
701	[BUG]  [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   ".   ");    }    	non-compiled	[CE]  ')'  expected	113	None	replace
702	[BUG]  [BUGGY]  result  |=  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  result  |=  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	result  |=  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
703	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
704	[BUG]  [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	87	None	replace
705	[BUG]  [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NAME!=  Token.BLOCK  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NAME!=  Token.BLOCK  ||  Token.NAME!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
706	[BUG]  [BUGGY]  ||(Token.NAME!=  Token.BLOCK  &&  Token.CATCH.equals(token)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.NAME!=  Token.BLOCK  &&  Token.CATCH.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.NAME!=  Token.BLOCK  &&  Token.CATCH.equals(token)))  {  return  Token.BLOCK;  }	  if(Token.NAME!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
707	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  JSR;  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	85	None	replace
708	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  JSR;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  JSR;  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    	non-compiled	[CE]  ')'  expected	85	None	replace
709	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.SEMI;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BLOCK  ||  Token.SEMI;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BLOCK  ||  Token.SEMI;	  case    Token.BLOCK:    return    Token.BLOCK    ||    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	19	None	replace
710	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.EXPR_RESULT;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
711	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.CATCH  |  TOKEN;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.CATCH  |  TOKEN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.CATCH  |  TOKEN;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	102	None	replace
712	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.NUMBER  ||  Token.BLOCK  ==  Token.NUMBER)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
713	[BUG]  [BUGGY]  parent  ==  null  ||  parent.getParent()!=  Token.BLOCK;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.getParent()!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.getParent()!=  Token.BLOCK;	  parent    ==    null    ||    parent    ==    parent.getParent())    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	123	None	replace
714	[BUG]  [BUGGY]  case  ')':  return  Token.BLOCK  |  Token.CATCH;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  ')':  return  Token.BLOCK  |  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  ')':  return  Token.BLOCK  |  Token.CATCH;	  case    ')':    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	8	None	replace
715	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
716	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  &&  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  &&  parent.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
717	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
718	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.hasChildren())  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  &&  parent.hasChildren())  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  &&  parent.hasChildren())  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
719	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  return  Token.BLOCK;  }	  if(parent!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	76	None	replace
720	[BUG]  [BUGGY]  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.BLOCK    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
721	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EMPTY)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
722	[BUG]  [BUGGY]  case  Boolean:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Boolean:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Boolean:  return  Token.BLOCK;	  case    blk:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	121	None	replace
723	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
724	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	49	None	replace
725	[BUG]  [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	49	None	replace
726	[BUG]  [BUGGY]  case  AssertionFailedError:  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  AssertionFailedError:  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  AssertionFailedError:	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
727	[BUG]  [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  break  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  break  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  java.jscomp.mozilla.rhino.Token.BLOCK:  break  Token.BLOCK;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
728	[BUG]  [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  java.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  java.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;	  case    java.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	99	None	replace
729	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.GETPROP;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.GETPROP;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.GETPROP;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
730	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GET_PROP;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.BLOCK  |  Token.GET_PROP;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.BLOCK  |  Token.GET_PROP;	  return    Token.BLOCK    |    Token.BLOCK    |    Token.GETPROP;    	non-compiled	[CE]  ')'  expected	103	None	replace
731	[BUG]  [BUGGY]  AssertionFailedError:  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError:  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError:  if(Token.BLOCK  ==  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	26	None	replace
732	[BUG]  [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( ". ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   ".   ");    }    	non-compiled	[CE]  ')'  expected	108	None	replace
733	[BUG]  [BUGGY]  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	{  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  	107	None	replace
734	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ".);    }    	non-compiled	[CE]  ')'  expected	107	None	replace
735	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
736	[BUG]  [BUGGY]  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	{  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ".);    }    	non-compiled	[CE]  	112	None	replace
737	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  &&  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    &&    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	109	None	replace
738	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  token.BOOLEAN;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  token.BOOLEAN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  token.BOOLEAN;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	25	None	replace
739	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.LONG;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.BLOCK  :  Token.LONG;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK?  Token.BLOCK  :  Token.LONG;	  return    Token.BLOCK?    Token.BLOCK    :    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	65	None	replace
740	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  1)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  1)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  1)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
741	[BUG]  [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  2)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  2)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NUMBER!=  Token.BLOCK  ||  Token.NUMBER!=  2)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
742	[BUG]  [BUGGY]  Token.NUMBER  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.NUMBER  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.NUMBER  ||  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NUMBER!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
743	[BUG]  [BUGGY]  AssertionFailedError:  if(Token.BLOCK  ==  Token.NONE)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError:  if(Token.BLOCK  ==  Token.NONE)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError:  if(Token.BLOCK  ==  Token.NONE)  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.NONE)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
744	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK!=  null)return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	97	None	replace
745	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.EXPR_RESULT  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.EXPR_RESULT  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.EXPR_RESULT  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESULT)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	38	None	replace
746	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.RESERVED  ||  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.EXPR_RESERVED    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	93	None	replace
747	[BUG]  [BUGGY]  parent  ==  null  ||  parent  ==  parent.getParent())  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent  ==  parent.getParent())  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent  ==  parent.getParent())  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	59	None	replace
748	[BUG]  [BUGGY]  parent  ==  null  ||  parent  ==  parent.parent)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent  ==  parent.parent)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent  ==  parent.parent)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(JSR    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	59	None	replace
749	[BUG]  [BUGGY]  if(Token.BLOCK!=  null)  {  if(tokenType  ==  JSR)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null)  {  if(tokenType  ==  JSR)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null)  {  if(tokenType  ==  JSR)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
750	[BUG]  [BUGGY]  if(Token.JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR!=  null)  {  if(JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(tokenType    ==    JSR)    {    if(JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	61	None	replace
751	[BUG]  [BUGGY]  if(token  ==  JSErrorReporter)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  JSErrorReporter)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  JSErrorReporter)  {  return  Token.BLOCK;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
752	[BUG]  [BUGGY]  if(token  ==  JSError)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token  ==  JSError)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token  ==  JSError)  {  return  Token.BLOCK;  }	  if(token    ==    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
753	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  <  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  <  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(Token.BLOCK))  <  return  Token.BLOCK;  }	  if(Token.BLOCK!=    null    ||    Token.BLOCK.equals(Token.BLOCK))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	51	None	replace
754	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK))  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
755	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
756	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	  if(Token.BLOCK!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	69	None	replace
757	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESERVED!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	44	None	replace
758	[BUG]  [BUGGY]  if(Token.BLOCK!=  JSR)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  JSR)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  JSR)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	122	None	replace
759	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	122	None	replace
760	[BUG]  [BUGGY]  ||(Token.BLOCK!=  Token.FUNCTION  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.BLOCK!=  Token.FUNCTION  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.BLOCK!=  Token.FUNCTION  &&  Token.BLOCK.equals( " ")))  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.FUNCTION)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	14	None	replace
761	[BUG]  [BUGGY]  Token.BLOCK:  return  Token.BLOCK  &&  Token.CATCH;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK:  return  Token.BLOCK  &&  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK:  return  Token.BLOCK  &&  Token.CATCH;	  Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	78	None	replace
762	[BUG]  [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EMPTY;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESULT  ==  Token.EMPTY;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESULT  ==  Token.EMPTY;	  ||    Token.EXPR_RESULT    ==    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	117	None	replace
763	[BUG]  [BUGGY]  ||  BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  BLOCK!=  Token.NUMBER)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NUMBER)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
764	[BUG]  [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.NONE  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.NONE!=  Token.BLOCK  ||  Token.NONE  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.NONE!=  Token.BLOCK  ||  Token.NONE  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.NONE!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	10	None	replace
765	[BUG]  [BUGGY]  return  Token.BLOCK  -  Token.SEMI;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  -  Token.SEMI;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  -  Token.SEMI;	  return    Token.BLOCK    -    Token.BLOCK;    	non-compiled	[CE]  	64	None	replace
766	[BUG]  [BUGGY]  ||  token.NAME  ==  Token.BLOCK;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  token.NAME  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  token.NAME  ==  Token.BLOCK;	  ||    Token.NAME!=    Token.BLOCK;    	non-compiled	[CE]  	79	None	replace
767	[BUG]  [BUGGY]  if(Token.BLOCK!=  JSR)  {  return  Token.BLOCK;  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  JSR)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  JSR)  {  return  Token.BLOCK;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	75	None	replace
768	[BUG]  [BUGGY]  if(Token.BLOCK!=  token)  {  return  Token.BLOCK;  }  [CE]  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  token)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  token)  {  return  Token.BLOCK;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	75	None	replace
769	[BUG]  [BUGGY]  if(token!=  JSErrorReporter)  {  return  Token.BLOCK;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(token!=  JSErrorReporter)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(token!=  JSErrorReporter)  {  return  Token.BLOCK;  }	  if(token!=    JSR)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	75	None	replace
770	[BUG]  [BUGGY]  if(Token.BLOCK  ==  Token.RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  Token.RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  Token.RESERVED)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	54	None	replace
771	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.EXPR_RESULT,  token);	  AssertionFailedError    e    =    new    AssertionFailedError(token);    	non-compiled	[CE]  	9	None	replace
772	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  JSR)  {  return  JSR;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  JSR)  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  JSR)  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  	96	None	replace
773	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }	  if(Token.BLOCK    ==    null)    {    return    JSR;    }    	non-compiled	[CE]  	96	None	replace
774	[BUG]  [BUGGY]  ||(token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK  ==  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	119	None	replace
775	[BUG]  [BUGGY]  ||(token.NAME  ==  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.NAME  ==  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.NAME  ==  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	119	None	replace
776	[BUG]  [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token.BLOCK!=  Token.NAME  &&  Token.BLOCK.equals(token)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.NAME    &&    Token.BLOCK.equals(token)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	119	None	replace
777	[BUG]  [BUGGY]  ||(bLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(bLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(bLOCK!=  null  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    null    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	89	None	replace
778	[BUG]  [BUGGY]  ||  Token.CATCH!=  Token.BLOCK;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.CATCH!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.CATCH!=  Token.BLOCK;	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	72	None	replace
779	[BUG]  [BUGGY]  ||(Token.CATCH!=  Token.BLOCK  &&  Token.CATCH.equals(token)))  {  return  Token.BLOCK;  }  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(Token.CATCH!=  Token.BLOCK  &&  Token.CATCH.equals(token)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(Token.CATCH!=  Token.BLOCK  &&  Token.CATCH.equals(token)))  {  return  Token.BLOCK;  }	  if(Token.CATCH!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	72	None	replace
780	[BUG]  [BUGGY]  return  Token.BLOCK  /  Token.EXPR_RESULT;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  /  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  /  Token.EXPR_RESULT;	  return    Token.BLOCK    /    Token.BLOCK;    	non-compiled	[CE]  	66	None	replace
781	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK;  [CE]  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.BLOCK;	  if(Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  	70	None	replace
782	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.LATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.LATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.LATCH)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
783	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.TRY)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.TRY)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.TRY)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	73	None	replace
784	[BUG]  [BUGGY]  |(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  |(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	|(Token.BLOCK!=  Token.EXPR_RESERVED  ||  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
785	[BUG]  [BUGGY]  ||(BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(BLOCK!=  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK)))  {  return  Token.BLOCK;  }	  ||(Token.BLOCK!=    Token.EXPR_RESERVED    &&    Token.BLOCK.equals(Token.BLOCK)))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
786	[BUG]  [BUGGY]  cask.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  cask.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	cask.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	23	None	replace
787	[BUG]  [BUGGY]  caz  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  caz  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	caz  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	23	None	replace
788	[BUG]  [BUGGY]  ||(parent  ==  null  &&  parent.equals(parent)))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(parent  ==  null  &&  parent.equals(parent)))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(parent  ==  null  &&  parent.equals(parent)))  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
789	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.equals(token))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.equals(token))  {  return  Token.BLOCK;  }	  if(parent    ==    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
790	[BUG]  [BUGGY]  Token.BLOCK  =  null  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  Token.BLOCK  =  null  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	Token.BLOCK  =  null  ||  Token.BLOCK.equals(token))  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	50	None	replace
791	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals(name))  {  return  Token.BLOCK;  }	  if(Token.BLOCK    ==    null    ||    Token.BLOCK.equals(token))    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	50	None	replace
792	[BUG]  [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
793	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  &&  Token.BLOCK.equals( " "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
794	[BUG]  [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||(token  ==  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||(token  ==  Token.BLOCK  &&  token!=  Token.CATCH))  {  return  Token.BLOCK;  }	  if(token    ==    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
795	[BUG]  [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ".);  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	90	None	replace
796	[BUG]  [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError:  if(Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	1	None	replace
797	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	1	None	replace
798	[BUG]  [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( ". "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( ". "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK  ==  null  ||  Token.BLOCK.equals( ". "))  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	1	None	replace
799	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  &&  Token.BLOCK!=  null)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	128	None	replace
800	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length  <  2)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length  <  2)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length  <  2)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	2	None	replace
801	[BUG]  [BUGGY]  parent  ==  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  Token.JSR!=  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
802	[BUG]  [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalStateException( " ".);  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
803	[BUG]  [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.JSR  ==  null)  {  return  Token.BLOCK;  }	  if(Token.JSR!=    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	60	None	replace
804	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED  ==  Token.BLOCK;  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED  ==  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED  ==  Token.BLOCK;	  if(Token.BLOCK    ==    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	43	None	replace
805	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED  ||  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
806	[BUG]  [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.EXPR_RESERVED  &&  Token.BLOCK.equals(Token.BLOCK))  {  return  Token.BLOCK;  }  else  {  return  Token.BLOCK;  }	  ||    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    else    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
807	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NUMBER  ||  Token.BLOCK  >>  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NUMBER    ||    Token.BLOCK!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	35	None	replace
808	[BUG]  [BUGGY]  AssertionFailedError.showToken(Token.BLOCK,  token);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError.showToken(Token.BLOCK,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError.showToken(Token.BLOCK,  token);	  AssertionFailedError.show(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	77	None	replace
809	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	106	None	replace
810	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length  <  2)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.length  <  2)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.length  <  2)  {  return  JSR;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	106	None	replace
811	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.parent!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent  ==  null  ||  parent.parent!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent  ==  null  ||  parent.parent!=  Token.BLOCK)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
812	[BUG]  [BUGGY]  parent  ==  null  ||  parent.parent!=  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.parent!=  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.parent!=  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
813	[BUG]  [BUGGY]  parent  ==  null  ||  parent.parent!=  Token.BLOCK;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  null  ||  parent.parent!=  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  null  ||  parent.parent!=  Token.BLOCK;	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	124	None	replace
814	[BUG]  [BUGGY]  parent  ==  0  ||  parent  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  parent  ==  0  ||  parent  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	parent  ==  0  ||  parent  ==  0)  {  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null    ||    parent    ==    parent.parent)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	124	None	replace
815	[BUG]  [BUGGY]  case  BLOCK:  return  Token.BLOCK  &&  Token.CATCH;  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  BLOCK:  return  Token.BLOCK  &&  Token.CATCH;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  BLOCK:  return  Token.BLOCK  &&  Token.CATCH;	  case    BLOCK:    return    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	21	None	replace
816	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  break  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  break  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  break  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
817	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  break;  }  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  break;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  return  Token.BLOCK;  break;  }	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    return    Token.BLOCK;    break;    	non-compiled	[CE]  ')'  expected	127	None	replace
818	[BUG]  [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(parent!=  null)  {  parent  =  parent.getParent();  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(parent!=  null)  {  parent  =  parent.getParent();  return  Token.BLOCK;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    return    Token.BLOCK;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ')'  expected	91	None	replace
819	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK  ||  Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK  ||  Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.BLOCK  ||  Token.EXPR_RESULT!=  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
820	[BUG]  [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.EXPR_RESULT!=  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.EXPR_RESULT!=  Token.BLOCK  ||  Token.EXPR_RESULT  ==  Token.BLOCK)  {  return  Token.BLOCK;  }	  if(Token.EXPR_RESULT!=    Token.BLOCK)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	39	None	replace
821	[BUG]  [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  javascript.jscomp.mozilla.rhino.Token.BLOCK:  {  return  Token.BLOCK;	  case    javascript.jscomp.mozilla.rhino.Token.BLOCK:    	non-compiled	[CE]  ')'  expected	98	None	replace
822	[BUG]  [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	ceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapaceapa	  if(Token.BLOCK!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	62	None	replace
823	[BUG]  [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  null  ||  Token.BLOCK.equals(JSR))  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	111	None	replace
824	[BUG]  [BUGGY]  if(Token.BLOCK!=  JSR)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  JSR)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  JSR)  {  return  JSR;  }  else  {  throw  new  IllegalStateException( " ");  }	  if(Token.BLOCK!=    null)    {    return    JSR;    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  ')'  expected	111	None	replace
825	[BUG]  [BUGGY]  return  Token.BLOCK  &  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  &  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  &  Token.EXPR_RESULT;	  return    Token.BLOCK    &    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	63	None	replace
826	[BUG]  [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  &&  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  case  Token.BLOCK:  return  Token.BOOLEAN  &&  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	case  Token.BLOCK:  return  Token.BOOLEAN  &&  Token.EXPR_RESULT;	  case    Token.BLOCK:    return    Token.BOOLEAN;    	non-compiled	[CE]  ')'  expected	17	None	replace
827	[BUG]  [BUGGY]  return  Token.BLOCK  +  Token.EXPR_RESULT;  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  +  Token.EXPR_RESULT;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  +  Token.EXPR_RESULT;	  return    Token.BLOCK    +    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	114	None	replace
828	[BUG]  [BUGGY]  return  Token.BLOCK  +  Token.SEMI;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  +  Token.SEMI;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  +  Token.SEMI;	  return    Token.BLOCK    +    Token.BLOCK;    	non-compiled	[CE]  ')'  expected	114	None	replace
829	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESULT);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESULT);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  Token.EXPR_RESULT);	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
830	[BUG]  [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  getType());  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  getType());  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	AssertionFailedError  e  =  new  AssertionFailedError(Token.BLOCK,  getType());	  AssertionFailedError    e    =    new    AssertionFailedError(Token.BLOCK,    token);    	non-compiled	[CE]  ')'  expected	6	None	replace
831	[BUG]  [BUGGY]  if(Token.BLOCK!=  Token.NONE  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  if(Token.BLOCK!=  Token.NONE  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	if(Token.BLOCK!=  Token.NONE  &&  Token.BLOCK!=  Token.CATCH)  {  return  Token.BLOCK;  }	  if(Token.BLOCK!=    Token.NONE    ||    Token.BLOCK!=    Token.CATCH)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	15	None	replace
832	[BUG]  [BUGGY]  ||  Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  Token.BLOCK!=  Token.LONG)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.NAME)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	31	None	replace
833	[BUG]  [BUGGY]  return  Token.BLOCK?  Token.CATCH  :  Token.BLOCK;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK?  Token.CATCH  :  Token.BLOCK;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK?  Token.CATCH  :  Token.BLOCK;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
834	[BUG]  [BUGGY]  return  Token.BLOCK  |  Token.CATCH  |  TOKEN;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  return  Token.BLOCK  |  Token.CATCH  |  TOKEN;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	return  Token.BLOCK  |  Token.CATCH  |  TOKEN;	  return    Token.BLOCK    |    Token.CATCH;    	non-compiled	[CE]  ')'  expected	115	None	replace
835	[BUG]  [BUGGY]  ||  BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      return  Token.CATCH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY:  return  Token.FINALLY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.VOID:  return  Token.VOID;  case  com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED:  return  Token.RESERVED;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY:  return  Token.EMPTY;  case  com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK:      [BUGGY]  ||  BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.LABEL:  return  Token.LABEL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.TARGET:  return  Token.TARGET;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LOOP:  return  Token.LOOP;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID:  case  com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT:  return  Token.EXPR_RESULT;  case  com.google.javascript.jscomp.mozilla.rhino.Token.JSR:  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	||  BLOCK!=  Token.EXPR_RESERVED)  {  return  Token.BLOCK;  }	  ||    Token.BLOCK!=    Token.EXPR_RESERVED)    {    return    Token.BLOCK;    }    	non-compiled	[CE]  ')'  expected	42	None	replace
