bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
2	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
3	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
4	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
5	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	76	None	replace
6	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    null;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
7	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    null;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
8	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    null;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
9	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    null;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
10	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
13	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  irFactory.getParent();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  irFactory.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  irFactory.getParent();	  return    irFactory.getParent();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
14	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getType()  ==  Token.NAME?  irFactory.getParent()  :  null;	  return    irFactory.getParent();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
15	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.FUNCTION?  irFactory.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.FUNCTION?  irFactory.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getType()  ==  Token.FUNCTION?  irFactory.getParent()  :  null;	  return    irFactory.getParent();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
16	[BUG]  [BUGGY]  return  irFactory.getNext();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getNext();	  return    irFactory.getParent();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
17	[BUG]  [BUGGY]  return  irFactory.getNameNode();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNameNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getNameNode();	  return    irFactory.getParent();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
18	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.CALL?  irFactory.getParent()  :  irFactory.getParent();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.CALL?  irFactory.getParent()  :  irFactory.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getType()  ==  Token.CALL?  irFactory.getParent()  :  irFactory.getParent();	  return    irFactory.getParent();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
19	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.getFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
22	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileLevelJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
23	[BUG]  [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
24	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDocBuilder(irNode);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
25	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
26	[BUG]  [BUGGY]  return  irNode.getFile().getNext();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().getNext();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
27	[BUG]  [BUGGY]  return  irNode.getFile().getLastChild();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().getLastChild();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
28	[BUG]  [BUGGY]  return  irNode.getFile().getName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().getName();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
29	[BUG]  [BUGGY]  return  irFactory.getFile().getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFile().getParent();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
30	[BUG]  [BUGGY]  return  irNode.getFile().getAbsolutePath();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getAbsolutePath();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().getAbsolutePath();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
31	[BUG]  [BUGGY]  return  node.getFile().getParent();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getFile().getParent();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
32	[BUG]  [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleFossibleFileOverviewJsDoc(node);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleFossibleFileOverviewJsDoc(node);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	if(!irFactory.isParsed())  {  return  irFactory.handleFossibleFileOverviewJsDoc(node);  }	  return    irFactory.handleFossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
33	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
34	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getSourceName()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getSourceName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getSourceName()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
35	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFileName()  :  null;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFileName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFileName()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
36	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getProp(Node.SOURCENAME_PROP):  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getProp(Node.SOURCENAME_PROP):  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getProp(Node.SOURCENAME_PROP):  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
37	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getRawClass()  :  null;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getRawClass()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getRawClass()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
38	[BUG]  [BUGGY]  return  irFactory.getTree();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getTree();	  return    irNode.getTree();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
39	[BUG]  [BUGGY]  return  node.getTree();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getTree();	  return    irNode.getTree();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
40	[BUG]  [BUGGY]  return  irNode.getTree().cloneTree();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getTree().cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getTree().cloneTree();	  return    irNode.getTree();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
41	[BUG]  [BUGGY]  return  irNode.getCurrentNode();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getCurrentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getCurrentNode();	  return    irNode.getTree();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
42	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(irNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(irNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
43	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
44	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
45	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
46	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
47	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
48	[BUG]  [BUGGY]  return  irFactory.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getLastChild();	  return    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
49	[BUG]  [BUGGY]  return  irNode.getLastChild()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastChild()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLastChild()  +  1;	  return    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
50	[BUG]  [BUGGY]  return  node.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getLastChild();	  return    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
51	[BUG]  [BUGGY]  return  irNode.getLastChild().getNext();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLastChild().getNext();	  return    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
52	[BUG]  [BUGGY]  return  irNode.getLastChild().getString();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastChild().getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLastChild().getString();	  return    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
53	[BUG]  [BUGGY]  irFactory.setFileOverviewJSDoc(irNode);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJSDoc(irNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
54	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(irNode);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setPossibleFileOverviewJSDoc(irNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
55	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJSDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
56	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(node);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJSDoc(node);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
57	[BUG]  [BUGGY]  irFactory.handleErrorJSDoc(irNode);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleErrorJSDoc(irNode);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
58	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(comment);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJSDoc(comment);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
59	[BUG]  [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getPossibleFileOverviewJsDoc();	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
60	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDocBuilder();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getPossibleFileOverviewJsDocBuilder();	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
61	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
62	[BUG]  [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getPossibleFileOverviewJsDoc(irNode);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
63	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
64	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION  &&  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION  &&  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.FUNCTION  &&  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
65	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
66	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.FUNCTION?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
67	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  node.getLastChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  node.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  node.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
68	[BUG]  [BUGGY]  return  irFactory.newInstance(config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(config);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(config);	  return    irFactory.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
69	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJsDoc(irNode);	  return    irFactory.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
70	[BUG]  [BUGGY]  return  irFactory.newInstance(config,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(config,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(config,  errorReporter);	  return    irFactory.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
71	[BUG]  [BUGGY]  return  irFactory.newInstance(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(node);	  return    irFactory.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
72	[BUG]  [BUGGY]  return  irFactory.newInstance(node.getSourceName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(node.getSourceName());	  return    irFactory.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
73	[BUG]  [BUGGY]  return  irFactory.newInstance(this);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(this);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(this);	  return    irFactory.newInstance();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
74	[BUG]  [BUGGY]  return  irFactory.getFile(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFile(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFile(node);	  return    node.getFile();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
75	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewDoc(irNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewDoc(irNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
76	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
77	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocBuilder();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDocBuilder();	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
78	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocBuilder(irNode);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
79	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDocBuilder();	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
80	[BUG]  [BUGGY]  return  node.getAstRoot();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getAstRoot();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getAstRoot();	  return    irNode.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
81	[BUG]  [BUGGY]  return  irFactory.getAstRoot();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getAstRoot();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getAstRoot();	  return    irNode.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
82	[BUG]  [BUGGY]  return  irNode.getAstRoot()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getAstRoot()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getAstRoot()  +  1;	  return    irNode.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	90	None	replace
83	[BUG]  [BUGGY]  return  irFactory.getFile().toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFile().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFile().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
84	[BUG]  [BUGGY]  return  irNode.getFile().toURI();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().toURI();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().toURI();	  return    irNode.getFile().toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
85	[BUG]  [BUGGY]  return  irNode.getFileName().toString();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileName().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
86	[BUG]  [BUGGY]  return  irNode.getFile().toString()  + "n ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().toString()  + "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().toString()  + "n ";	  return    irNode.getFile().toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
87	[BUG]  [BUGGY]  return  irNode.getName().toString();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getName().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getName().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
88	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
89	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
90	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
91	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDocHolder(irNode);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
92	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDocHolder(rootNodeJsDocBuilder);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
93	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDocHolder(irNode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleLocalFileOverviewJsDocHolder(irNode);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
94	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDocHolder(irNode);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeOverviewJsDocHolder(irNode);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
95	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(node);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDocHolder(node);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
96	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocHolder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDocHolder(fileOverviewInfo);	  return    irFactory.handleFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
97	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDocHolder();	  return    irFactory.getFileOverviewJsDocHolder();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
98	[BUG]  [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleFileOverviewJsDoc(node);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleFileOverviewJsDoc(node);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	if(!irFactory.isParsed())  {  return  irFactory.handleFileOverviewJsDoc(node);  }	  return    irFactory.handleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
99	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
100	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
101	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDoc();	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
102	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  sourceString);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
103	[BUG]  [BUGGY]  return  this.fileLevelJsDocBuilder.getFileOverviewJsDocHolder();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  this.fileLevelJsDocBuilder.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  this.fileLevelJsDocBuilder.getFileOverviewJsDocHolder();	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
104	[BUG]  [BUGGY]  return  irDocBuilder.getFileOverviewJsDocHolder();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irDocBuilder.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irDocBuilder.getFileOverviewJsDocHolder();	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
105	[BUG]  [BUGGY]  return  errorReporter.getFileOverviewJsDocHolder();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  errorReporter.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  errorReporter.getFileOverviewJsDocHolder();	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
106	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
107	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(irNode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileLevelJsDocBuilder(irNode);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
108	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.getFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
109	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(comment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(comment);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
110	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(node);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
111	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(rootNode);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDocBuilder(rootNode);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
112	[BUG]  [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFailedFileOverviewJsDoc(irNode);	  return    irFactory.handleFailedFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
113	[BUG]  [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleFailedFileOverviewJsDoc(node);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleFailedFileOverviewJsDoc(node);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	if(!irFactory.isParsed())  {  return  irFactory.handleFailedFileOverviewJsDoc(node);  }	  return    irFactory.handleFailedFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
114	[BUG]  [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFailedFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFailedFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
115	[BUG]  [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFailedFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleFailedFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
116	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
117	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
118	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
119	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJsDoc(true,  false);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
120	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJsDoc(false,  false);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
121	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  irNode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJsDoc(true,  irNode);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
122	[BUG]  [BUGGY]  return  irFactory.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getErrorReporter();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getErrorReporter();	  return    irFactory.getFile();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
123	[BUG]  [BUGGY]  return  irFactory.getConfig();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getConfig();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getConfig();	  return    irFactory.getFile();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
124	[BUG]  [BUGGY]  return  irFactory.getFileOverview();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverview();	  return    irFactory.getFile();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
125	[BUG]  [BUGGY]  return  irFactory.handleErrorPossibleFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorPossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorPossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
126	[BUG]  [BUGGY]  return  irFactory.handleErrorJsDoc(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorJsDoc(node);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
127	[BUG]  [BUGGY]  return  irFactory.handleErrorJsDoc(errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorJsDoc(errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorJsDoc(errorReporter);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
128	[BUG]  [BUGGY]  return  irFactory.handleErrorReporter(irNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorReporter(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorReporter(irNode);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
129	[BUG]  [BUGGY]  return  irFactory.handleErrorJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
130	[BUG]  [BUGGY]  return  irFactory.handleErrorJsDoc(comment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorJsDoc(comment);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
131	[BUG]  [BUGGY]  return  irFactory.cloneFile();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.cloneFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.cloneFile();	  return    irNode.cloneFile();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
132	[BUG]  [BUGGY]  return  irFactory.cloneFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.cloneFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.cloneFileOverviewJsDoc(irNode);	  return    irNode.cloneFile();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
133	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(irNode);	  return    irNode.cloneFile();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
134	[BUG]  [BUGGY]  return  irNode.getFileOverview();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverview();	  return    irNode.getPrevious();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
135	[BUG]  [BUGGY]  return  irNode.getFullName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFullName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFullName();	  return    irNode.getPrevious();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
136	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
137	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
138	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
139	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
140	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
141	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
142	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
143	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
144	[BUG]  [BUGGY]  return  irFactory.getPossibleFile();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPossibleFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getPossibleFile();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
145	[BUG]  [BUGGY]  return  node.getPossibleFile();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getPossibleFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getPossibleFile();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
146	[BUG]  [BUGGY]  return  irNode.getPossibleFile().getParent();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getPossibleFile().getParent();	  return    irNode.getPossibleFile();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
147	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverview();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.clonePossibleFileOverview();	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
148	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDoc();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.cloneFileOverviewJsDoc();	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
149	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverview();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getPossibleFileOverview();	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
150	[BUG]  [BUGGY]  return  irFactory.getFirstChild();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFirstChild();	  return    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
151	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();	  return    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
152	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getFirstChild();	  return    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
153	[BUG]  [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(irNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setFileLevelJsDocBuilder(irNode);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
154	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
155	[BUG]  [BUGGY]  return  irFactory.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getSourceName();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
156	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  sourceString;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getSourceName()  +  sourceString;	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
157	[BUG]  [BUGGY]  return  irNode.getSourceName()  + "n ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSourceName()  + "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getSourceName()  + "n ";	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
158	[BUG]  [BUGGY]  return  irFactory.getFileName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileName();	  return    irNode.getFileName();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
159	[BUG]  [BUGGY]  return  irNode.getFileType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileType();	  return    irNode.getFileName();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
160	[BUG]  [BUGGY]  return  irNode.getFileName()  +  sourceString;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileName()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileName()  +  sourceString;	  return    irNode.getFileName();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
161	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getFirstChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNodeJsDocBuilder.getFirstChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
162	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNodeJsDocBuilder.getLastChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
163	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getLastChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocBuilder.getLastChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
164	[BUG]  [BUGGY]  return  irNodeJSDocBuilder.getFirstChild();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJSDocBuilder.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNodeJSDocBuilder.getFirstChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
165	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setPossibleFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
166	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
167	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleMissingFileOverviewJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
168	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(node);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleErrorJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
169	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setPossibleFileOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
170	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(fileOverviewInfo!=  null)  {  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	if(fileOverviewInfo!=  null)  {  return  irFactory.handleFileOverviewJsDoc(fileOverviewInfo);  }	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
171	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
172	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
173	[BUG]  [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
174	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
175	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
176	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSourceName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
177	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getLocalName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
178	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFileName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
179	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
180	[BUG]  [BUGGY]  return  irFactory.createTreeLocation(node);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTreeLocation(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createTreeLocation(node);	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
181	[BUG]  [BUGGY]  return  irFactory.createTree(node.cloneTree());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTree(node.cloneTree());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createTree(node.cloneTree());	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
182	[BUG]  [BUGGY]  return  irFactory.createTree(node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTree(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createTree(node);	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
183	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
184	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
185	[BUG]  [BUGGY]  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleFossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleFossibleFileOverviewJsDoc(irNode);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
186	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	70	None	replace
187	[BUG]  [BUGGY]  return  rootNode.removeChild(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.removeChild(irNode);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
188	[BUG]  [BUGGY]  return  irNode.getChildCount();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getChildCount();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getChildCount();	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
189	[BUG]  [BUGGY]  return  irNode.removeChild(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.removeChild(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.removeChild(fileLevelJsDocBuilder);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
190	[BUG]  [BUGGY]  return  irFactory.removeChild(rootNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeChild(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.removeChild(rootNode);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
191	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDoc(irNode,  fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
192	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
193	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
194	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.EXPR_RESULT?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.EXPR_RESULT?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.EXPR_RESULT?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
195	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  node.getFirstChild()  :  irNode.getLastChild();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  node.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  node.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
196	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleNossibleFileOverviewJsDoc(node);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
197	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(comment);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleNossibleFileOverviewJsDoc(comment);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
198	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleLocalFileOverviewJsDoc(irNode);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
199	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
200	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleErrorJsDoc(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
201	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
202	[BUG]  [BUGGY]  irFactory.handleErrorReporter(irNode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorReporter(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleErrorReporter(irNode);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
203	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
204	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder  ||  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder  ||  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder  ||  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
205	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder  ||  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder  ||  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder  ||  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
206	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  errorReporter);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder,  errorReporter);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  ';'  expected	35	None	replace
207	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
208	[BUG]  [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(fileOverviewInfo);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnknownFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
209	[BUG]  [BUGGY]  return  irFactory.cloneFileOverview();  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.cloneFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.cloneFileOverview();	  return    irNode.cloneFileOverview();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
210	[BUG]  [BUGGY]  return  irFactory.cloneFileOverviewJsDoc();  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.cloneFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.cloneFileOverviewJsDoc();	  return    irNode.cloneFileOverview();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
211	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDocBuilder();  [CE]  cannot  find  symbol  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.cloneFileOverviewJsDocBuilder();	  return    irNode.cloneFileOverview();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
212	[BUG]  [BUGGY]  return  irNode.getLineno()  +  1;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLineno()  +  1;	  return    irNode.getLineno();    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
213	[BUG]  [BUGGY]  return  irNode.getLineno()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLineno()  -  1;	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
214	[BUG]  [BUGGY]  return  irFactory.getLineno();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getLineno();	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
215	[BUG]  [BUGGY]  return  irNode.getLineno()  /  2;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno()  /  2;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLineno()  /  2;	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
216	[BUG]  [BUGGY]  return  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getCharno();	  return    irNode.getLineno();    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
217	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeOverviewJsDoc(node);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
218	[BUG]  [BUGGY]  return  irFactory.handleEmptyFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleEmptyFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleEmptyFileOverviewJsDoc(irNode);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
219	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
220	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
221	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
222	[BUG]  [BUGGY]  irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
223	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleErrorJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
224	[BUG]  [BUGGY]  return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
225	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getSimpleName()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
226	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
227	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
228	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
229	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
230	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
231	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocHolder(node);	  return    irFactory.getFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
232	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocHolder(rootNodeJsDocBuilder);	  return    irFactory.getFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
233	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocHolder(fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
234	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(comment);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocHolder(comment);	  return    irFactory.getFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
235	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  irNode.clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  irNode.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  irNode.clone();	  return    irNode.clone();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
236	[BUG]  [BUGGY]  return  irFactory.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.clone();	  return    irNode.clone();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
237	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  node.clone();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  node.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  node.clone();	  return    irNode.clone();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
238	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  null;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  null;	  return    irNode.clone();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
239	[BUG]  [BUGGY]  return  irNode.getParent()  +  comment;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  comment;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent()  +  comment;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
240	[BUG]  [BUGGY]  return  irNode.getNext()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getNext()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getNext()  +  fileLevelJsDocBuilder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
241	[BUG]  [BUGGY]  return  irNode.getParent()  +  rootNodeJsDocHolder;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  rootNodeJsDocHolder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent()  +  rootNodeJsDocHolder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
242	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  sourceString;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder,  sourceString;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
243	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder,  errorReporter);	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
244	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getParent()  +  irNode;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getParent()  +  irNode;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getParent()  +  irNode;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
245	[BUG]  [BUGGY]  return  irNode.removeLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.removeLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.removeLastChild();	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
246	[BUG]  [BUGGY]  return  irFactory.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.removeFirstChild();	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
247	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
248	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
249	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
250	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getNext();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  irNode.getNext();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
251	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
252	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getLocalName()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    irNode.getParent();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
253	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
254	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDocBuilder;	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
255	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createFileOverviewJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
256	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createFileOverviewJsDocBuilder();	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
257	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.GETPROP?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
258	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.GETPROP?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.GETPROP?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.GETPROP?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.GETPROP?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
259	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getLastChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getLastChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getLastChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.GETPROP?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
260	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP  &&  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP  &&  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.GETPROP?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
261	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  node.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  node.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  node.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.GETPROP?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
262	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNodeJsDocBuilder.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
263	[BUG]  [BUGGY]  return  templateNode.getFileOverviewJsDocHolder();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  templateNode.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  templateNode.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
264	[BUG]  [BUGGY]  return  irFactory.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getName();	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
265	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
266	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handleNossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getName()  + ": "  +  irFactory.handleNossibleFileOverviewJsDoc(irNode);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
267	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getName()  + ": "  +  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
268	[BUG]  [BUGGY]  return  node.getName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getName()  + ": "  +  irFactory.handleFileOverviewJsDoc(irNode);	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
269	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(node);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
270	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
271	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(comment);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(comment);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
272	[BUG]  [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
273	[BUG]  [BUGGY]  return  node.getFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getFileOverviewJsDocBuilder();	  return    node.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
274	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
275	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
276	[BUG]  [BUGGY]  return  irFactory.removeChild(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeChild(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.removeChild(rootNodeJsDocBuilder);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
277	[BUG]  [BUGGY]  return  irFactory.removeChild(irNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeChild(irNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.removeChild(irNodeJsDocBuilder);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
278	[BUG]  [BUGGY]  return  irFactory.removeChild(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.removeChild(irNode);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
279	[BUG]  [BUGGY]  return  irFactory.getLocalName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLocalName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getLocalName();	  return    irNode.getLocalName();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
280	[BUG]  [BUGGY]  return  irNode.getLocalName()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLocalName()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLocalName()  +  sourceString;	  return    irNode.getLocalName();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
281	[BUG]  [BUGGY]  return  irFactory.getLocation();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getLocation();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
282	[BUG]  [BUGGY]  return  node.getLocation();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getLocation();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
283	[BUG]  [BUGGY]  return  errorReporter;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  errorReporter;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  errorReporter;	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
284	[BUG]  [BUGGY]  return  this.fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  this.fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  this.fileLevelJsDocBuilder;	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
285	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
286	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDocBuilder(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDocBuilder(sourceString);	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
287	[BUG]  [BUGGY]  return  node.getNext();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getNext();	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
288	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  node.getParent()  :  null;	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
289	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.clonePossibleFileOverviewJsDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
290	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.clonePossibleFileOverviewJsDoc();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
291	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
292	[BUG]  [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnexpectedFileOverviewJsDoc(node);	  return    irFactory.handleUnexpectedFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
293	[BUG]  [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleUnexpectedFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
294	[BUG]  [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnexpectedFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleUnexpectedFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
295	[BUG]  [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnexpectedFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnexpectedFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleUnexpectedFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
296	[BUG]  [BUGGY]  return  irFactory.handleErrorReporter(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorReporter(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorReporter(rootNodeJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
297	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleMissingFileOverviewJsDoc(false);	  irFactory.handlePossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
298	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJSDoc(true);	  irFactory.handlePossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
299	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(true);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleMissingFileOverviewJsDoc(true);	  irFactory.handlePossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
300	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(false);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleLocalFileOverviewJsDoc(false);	  irFactory.handlePossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
301	[BUG]  [BUGGY]  return  irNodeJsDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJsDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNodeJsDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
302	[BUG]  [BUGGY]  return  irNodeJSDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNodeJSDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNodeJSDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
303	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
304	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocBuilder.getParent();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
305	[BUG]  [BUGGY]  return  irDocBuilder.getName();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irDocBuilder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irDocBuilder.getName();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
306	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getRootNode()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getRootNode()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getRootNode()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
307	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNameNode()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNameNode()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNameNode()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
308	[BUG]  [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnknownFileOverviewJsDoc(node);	  return    irFactory.handleUnknownFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
309	[BUG]  [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnknownFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleUnknownFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
310	[BUG]  [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleUnknownFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleUnknownFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleUnknownFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
311	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  irNode.getNext();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  irNode.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getProp(Node.SOURCENAME_PROP):  irNode.getNext();	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
312	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
313	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getNext()  :  irFactory.handlePossibleFileOverviewJsDoc(irNode);	  return    irNode.getNext();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
314	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
315	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.cloneFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
316	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder().cloneTree();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder().cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileLevelJsDocBuilder().cloneTree();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
317	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileLevelJsDocBuilder(rootNode);	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
318	[BUG]  [BUGGY]  return  node.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileLevelJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getFileLevelJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
319	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileLevelJsDocBuilder()  +  1;	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
320	[BUG]  [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleLocalFileOverviewJsDoc(node);  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  if(!irFactory.isParsed())  {  return  irFactory.handleLocalFileOverviewJsDoc(node);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	if(!irFactory.isParsed())  {  return  irFactory.handleLocalFileOverviewJsDoc(node);  }	  return    irFactory.handleLocalFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
321	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(node);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
322	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(rootNodeJsDocHolder);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
323	[BUG]  [BUGGY]  irNode.addChildToBack(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irNode.addChildToBack(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irNode.addChildToBack(fileLevelJsDocBuilder);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
324	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToFront(irNode);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToFront(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToFront(irNode);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
325	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(irNode,  rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(irNode,  rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(irNode,  rootNodeJsDocHolder);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
326	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(comment);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(comment);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
327	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJSDocBuilder();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJSDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJSDocBuilder();	  return    irNode.getFileOverviewJSDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
328	[BUG]  [BUGGY]  return  irNode.getFileOverviewJSDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJSDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJSDocBuilder(fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJSDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
329	[BUG]  [BUGGY]  return  irNode.getFileOverviewJSDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJSDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJSDocBuilder(rootNodeJsDocHolder);	  return    irNode.getFileOverviewJSDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
330	[BUG]  [BUGGY]  return  node.getFileOverviewJSDocBuilder();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileOverviewJSDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getFileOverviewJSDocBuilder();	  return    irNode.getFileOverviewJSDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
331	[BUG]  [BUGGY]  return  irFactory.handleErrorJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorJsDoc(rootNodeJsDocHolder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
332	[BUG]  [BUGGY]  return  irFactory.removeChild(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeChild(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.removeChild(rootNodeJsDocHolder);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
333	[BUG]  [BUGGY]  return  irFactory.removeChild(irNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.removeChild(irNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.removeChild(irNodeJsDocHolder);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
334	[BUG]  [BUGGY]  return  irNode.removeChild(comment);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.removeChild(comment);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.removeChild(comment);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
335	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
336	[BUG]  [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  irFactory.handleNossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
337	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getAstRoot();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getAstRoot();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocBuilder.getAstRoot();	  return    irNode.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
338	[BUG]  [BUGGY]  return  irNode.getAstRoot(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getAstRoot(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getAstRoot(node);	  return    irNode.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
339	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeOverviewJsDoc(rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
340	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDoc(rootNode);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
341	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(rootNode,  fileLevelJsDocBuilder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNode);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
342	[BUG]  [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileLevelJsDocBuilder(irNode);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
343	[BUG]  [BUGGY]  return  irFactory.nodeJsDocBuilder;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.nodeJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.nodeJsDocBuilder;	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
344	[BUG]  [BUGGY]  return  irFactory.handleNodeJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeJsDocBuilder;	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
345	[BUG]  [BUGGY]  return  irFactory.handleNodeJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeJsDocHolder(irNode);	  return    irFactory.rootNodeJsDocHolder;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
346	[BUG]  [BUGGY]  return  irFactory.clonePossibleFileOverview(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.clonePossibleFileOverview(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.clonePossibleFileOverview(irNode);	  return    irNode.clonePossibleFileOverview();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
347	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.GETPROP?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.GETPROP?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.GETPROP?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
348	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(fileLevelJsDocBuilder);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
349	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(rootNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(rootNode);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
350	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(rootNodeJsDoc);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(rootNodeJsDoc);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(rootNodeJsDoc);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
351	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  node.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  node.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  node.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
352	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
353	[BUG]  [BUGGY]  return  irFactory.getParentNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getParentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getParentNode();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
354	[BUG]  [BUGGY]  return  irFactory.getPrevious();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getPrevious();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getPrevious();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
355	[BUG]  [BUGGY]  return  irFactory.newInstance(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(fileLevelJsDocBuilder);	  return    irFactory.newInstance();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
356	[BUG]  [BUGGY]  return  irFactory.newInstance(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(rootNodeJsDocBuilder);	  return    irFactory.newInstance();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
357	[BUG]  [BUGGY]  return  irFactory.newInstance(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(fileOverviewInfo);	  return    irFactory.newInstance();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
358	[BUG]  [BUGGY]  return  irFactory.newInstance(sourceString);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(sourceString);	  return    irFactory.newInstance();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
359	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocHolder.getName();	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
360	[BUG]  [BUGGY]  return  rootNode.getName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.getName();	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
361	[BUG]  [BUGGY]  return  node.getSourceName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getSourceName();	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
362	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
363	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder,  irFactory);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
364	[BUG]  [BUGGY]  return  node.getFile().toString();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFile().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getFile().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
365	[BUG]  [BUGGY]  return  rootNode.getFile().toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFile().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.getFile().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
366	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(true);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(true);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleLocalFileOverviewJsDoc(true);	  irFactory.handlePossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
367	[BUG]  [BUGGY]  return  rootNode.getFile().getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFile().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.getFile().getParent();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
368	[BUG]  [BUGGY]  return  irNode.getFile().getNameNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getNameNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().getNameNode();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
369	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocBuilder(node);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
370	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileLevelJsDocBuilder(node);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
371	[BUG]  [BUGGY]  return  rootNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.getFirstChild();	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
372	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
373	[BUG]  [BUGGY]  return  rootNode.getFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.getFileOverviewJsDoc(irNode);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
374	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(sourceString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(sourceString);	  return    irNode.getFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
375	[BUG]  [BUGGY]  return  irFactory.setTreeOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setTreeOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setTreeOverviewJsDoc(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
376	[BUG]  [BUGGY]  return  irFactory.transformTree(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.transformTree(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.transformTree(irNode);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
377	[BUG]  [BUGGY]  return  irFactory.createTreeLocation(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTreeLocation(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createTreeLocation(rootNodeJsDocBuilder);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
378	[BUG]  [BUGGY]  return  irFactory.createTreeBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTreeBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createTreeBuilder();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
379	[BUG]  [BUGGY]  return  irFactory.setTreeOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setTreeOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setTreeOverviewJsDoc(node);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
380	[BUG]  [BUGGY]  return  irNode.getTreeLocation();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getTreeLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getTreeLocation();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
381	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
382	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getFileLevelJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocHolder.getFileLevelJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
383	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileLevelJsDocBuilder(rootNodeJsDocHolder);	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
384	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileLevelJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileLevelJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getFileLevelJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
385	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder  +  sourceString;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDocBuilder  +  sourceString;	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
386	[BUG]  [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
387	[BUG]  [BUGGY]  irFactory.handleErrorReporter(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorReporter(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleErrorReporter(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
388	[BUG]  [BUGGY]  return  irFactory.handleGlobalFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleGlobalFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleGlobalFileOverviewJsDoc(irNode);	  return    irFactory.handleLocalFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
389	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
390	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
391	[BUG]  [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
392	[BUG]  [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
393	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
394	[BUG]  [BUGGY]  irFactory.setFileOverviewJSDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJSDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJSDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
395	[BUG]  [BUGGY]  irFactory.setFileOverviewJSDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJSDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJSDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
396	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
397	[BUG]  [BUGGY]  irFactory.setFileOverviewJSDoc(node);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJSDoc(node);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
398	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
399	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(irNode);	  return    irFactory.handleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
400	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
401	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.setFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
402	[BUG]  [BUGGY]  return  irNode.getRelatedLocation();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getRelatedLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getRelatedLocation();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
403	[BUG]  [BUGGY]  return  irFactory.handleNodeJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
404	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);	  return    irNode.clonePossibleFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
405	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJSDoc(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJSDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJSDoc(irNode);	  return    irFactory.getFile();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
406	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.clone();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocBuilder.clone();	  return    irNode.clone();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
407	[BUG]  [BUGGY]  return  node.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.clone();	  return    irNode.clone();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
408	[BUG]  [BUGGY]  return  irNode.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.toString();	  return    irNode.clone();    	non-compiled	[CE]  <identifier>  expected	59	None	replace
409	[BUG]  [BUGGY]  return  irFactory.handleErrorJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleErrorJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleErrorJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
410	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getParent()  :  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getParent()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
411	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  node.getName()  :  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  node.getName()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  node.getName()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
412	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocBuilder.getFileOverviewJsDoc(irNode);	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
413	[BUG]  [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);	  return    irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
414	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocHolder.getFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
415	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDoc(irNode);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
416	[BUG]  [BUGGY]  return  node.getFileName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getFileName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getFileName();	  return    irNode.getFileName();    	non-compiled	[CE]  <identifier>  expected	91	None	replace
417	[BUG]  [BUGGY]  return  irFactory.errorReporter;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.errorReporter;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.errorReporter;	  return    irFactory.rootNodeJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
418	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
419	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocBuilder(rootNodeJsDocHolder);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
420	[BUG]  [BUGGY]  return  rootNode.replaceChild(irNode,  irFactory);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.replaceChild(irNode,  irFactory);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.replaceChild(irNode,  irFactory);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
421	[BUG]  [BUGGY]  return  rootNode.replaceChild(irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.replaceChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.replaceChild(irNode);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
422	[BUG]  [BUGGY]  return  irNode.replaceChild(rootNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.replaceChild(rootNode,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.replaceChild(rootNode,  fileLevelJsDocBuilder);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
423	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
424	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLastChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
425	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
426	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
427	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.removeChild(irNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocBuilder.removeChild(irNode);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
428	[BUG]  [BUGGY]  return  irNode.replaceChild(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.replaceChild(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.replaceChild(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
429	[BUG]  [BUGGY]  return  irNode.getChildren().removeChild(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getChildren().removeChild(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getChildren().removeChild(rootNodeJsDocBuilder);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
430	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJSDocBuilder();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJSDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJSDocBuilder();	  return    irNode.getFileOverviewJSDocBuilder();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
431	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJSDocBuilder();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJSDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocHolder.getFileOverviewJSDocBuilder();	  return    irNode.getFileOverviewJSDocBuilder();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
432	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJsDocBuilder();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocHolder.getFileOverviewJsDocBuilder();	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
433	[BUG]  [BUGGY]  return  node.cloneFile();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.cloneFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.cloneFile();	  return    irNode.cloneFile();    	non-compiled	[CE]  <identifier>  expected	60	None	replace
434	[BUG]  [BUGGY]  return  ir.getFileOverviewJsDocHolder();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  ir.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  ir.getFileOverviewJsDocHolder();	  return    node.getFileOverviewJsDocHolder();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
435	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDoc);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDoc);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNodeJsDoc);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
436	[BUG]  [BUGGY]  return  node.getPossibleFileOverviewJsDoc();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getPossibleFileOverviewJsDoc();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getPossibleFileOverviewJsDoc();	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
437	[BUG]  [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getPossibleFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getPossibleFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irNode.getPossibleFileOverviewJsDoc();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
438	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  sourceString;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder  +  sourceString;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
439	[BUG]  [BUGGY]  return  rootNodeJsDocHolder.getParent()  +  fileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocHolder.getParent()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocHolder.getParent()  +  fileLevelJsDocBuilder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
440	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  rootNodeJsDocHolder;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  rootNodeJsDocHolder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder  +  rootNodeJsDocHolder;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
441	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  null;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getLastChild()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    null;    	non-compiled	[CE]  <identifier>  expected	94	None	replace
442	[BUG]  [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFailedFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFailedFileOverviewJsDoc(rootNodeJsDocHolder);	  return    irFactory.handleFailedFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
443	[BUG]  [BUGGY]  return  node.getLocalName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLocalName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getLocalName();	  return    irNode.getLocalName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
444	[BUG]  [BUGGY]  return  irNode.getNamespaceURI();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getNamespaceURI();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getNamespaceURI();	  return    irNode.getLocalName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
445	[BUG]  [BUGGY]  return  irNode.getChildren().removeChild(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getChildren().removeChild(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getChildren().removeChild(rootNodeJsDocHolder);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
446	[BUG]  [BUGGY]  return  irNode.replaceChild(rootNodeJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.replaceChild(rootNodeJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.replaceChild(rootNodeJsDocBuilder,  errorReporter);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
447	[BUG]  [BUGGY]  return  irNode.removeChild(sourceString);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.removeChild(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.removeChild(sourceString);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
448	[BUG]  [BUGGY]  return  irFactory.replaceChild(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.replaceChild(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.replaceChild(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
449	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  null;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getImmediateParentNode()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
450	[BUG]  [BUGGY]  return  node.cloneTree(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.cloneTree(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.cloneTree(irNode);	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
451	[BUG]  [BUGGY]  return  rootNode.cloneTree();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.cloneTree();	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
452	[BUG]  [BUGGY]  return  node.getPrevious();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getPrevious();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getPrevious();	  return    irNode.getPrevious();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
453	[BUG]  [BUGGY]  return  irNode.getLastPossibleFile();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLastPossibleFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLastPossibleFile();	  return    irNode.getPrevious();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
454	[BUG]  [BUGGY]  return  irNode.getImmediateParentNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getImmediateParentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getImmediateParentNode();	  return    irNode.getPrevious();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
455	[BUG]  [BUGGY]  return  node.removeFirstChild();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.removeFirstChild();	  return    irNode.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	93	None	replace
456	[BUG]  [BUGGY]  return  rootNodeJsDocBuilder.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNodeJsDocBuilder.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNodeJsDocBuilder.getSourceName();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
457	[BUG]  [BUGGY]  return  irNode.getSource();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getSource();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getSource();	  return    irNode.getSourceName();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
458	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder  +  sourceString;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder  +  sourceString;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
459	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder  +  1;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
460	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder,  fileOverviewInfo;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
461	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder  {  null;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder  {  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder  {  null;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
462	[BUG]  [BUGGY]  return  node.getLineno();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getLineno();	  return    irNode.getLineno();    	non-compiled	[CE]  <identifier>  expected	96	None	replace
463	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  irNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
464	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(jsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
465	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
466	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.handleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
467	[BUG]  [BUGGY]  return  irFactory.handleDefaultFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleDefaultFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleDefaultFileOverviewJsDoc(node);	  return    irFactory.handleFossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
468	[BUG]  [BUGGY]  return  irNode.getParent().removeChild(rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent().removeChild(rootNodeJsDocHolder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent().removeChild(rootNodeJsDocHolder);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
469	[BUG]  [BUGGY]  return  irNode.removeChild(templateNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.removeChild(templateNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.removeChild(templateNode);	  return    irNode.removeChild(rootNodeJsDocHolder);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
470	[BUG]  [BUGGY]  return  irFactory.handleInternalFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleInternalFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleInternalFileOverviewJsDoc(irNode);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
471	[BUG]  [BUGGY]  return  irFactory.handleError(irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleError(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleError(irNode);	  return    irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
472	[BUG]  [BUGGY]  return  irNode.getAstRoot(node.getParent());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getAstRoot(node.getParent());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getAstRoot(node.getParent());	  return    irNode.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
473	[BUG]  [BUGGY]  return  irFactory.getAstRoot(node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getAstRoot(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getAstRoot(node);	  return    irNode.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
474	[BUG]  [BUGGY]  return  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);	  return    irFactory.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
475	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDocBuilder();	  return    irNode.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
476	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.removeLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.removeLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.removeLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
477	[BUG]  [BUGGY]  return  irNode.getFile().getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFile().getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFile().getAbsolutePosition();	  return    irNode.getFile().getParent();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
478	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.clonePossibleFileOverviewJsDocBuilder();	  return    irNode.cloneFile();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
479	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDOC()  :  null;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getJSDOC()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getJSDOC()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getLocalName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
480	[BUG]  [BUGGY]  return  irFactory.newInstance(config,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(config,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(config,  fileLevelJsDocBuilder);	  return    irFactory.newInstance();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
481	[BUG]  [BUGGY]  return  irFactory.newInstance(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.newInstance(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.newInstance(node,  fileLevelJsDocBuilder);	  return    irFactory.newInstance();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
482	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder,  errorReporter);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
483	[BUG]  [BUGGY]  return  irNode.getFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.getFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
484	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getParent());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getParent());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(node.getParent());	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
485	[BUG]  [BUGGY]  return  irFactory.setParent(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setParent(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setParent(node);	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
486	[BUG]  [BUGGY]  return  irFactory.setParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.setParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.setParent();	  return    irFactory.getParent();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
487	[BUG]  [BUGGY]  return  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getAstRootNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getAstRootNode();	  return    irNode.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
488	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFirstChild()  :  irNode.removeLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFirstChild()  :  irNode.removeLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getFirstChild()  :  irNode.removeLastChild();	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getFirstChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
489	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJSDocHolder();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJSDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJSDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
490	[BUG]  [BUGGY]  return  rootNode.getFileOverviewJsDocHolder();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  rootNode.getFileOverviewJsDocHolder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  rootNode.getFileOverviewJsDocHolder();	  return    rootNodeJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
491	[BUG]  [BUGGY]  fileLevelJsDocBuilder.removeChild(irNode);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.removeChild(irNode);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
492	[BUG]  [BUGGY]  fileLevelJsDocBuilder.addChildToBack(jsDoc);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  fileLevelJsDocBuilder.addChildToBack(jsDoc);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	fileLevelJsDocBuilder.addChildToBack(jsDoc);	  fileLevelJsDocBuilder.addChildToBack(irNode);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
493	[BUG]  [BUGGY]  return  irFactory.createFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createFileOverviewJsDoc(node);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
494	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  return    irFactory.getFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
495	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder(rootNode);	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
496	[BUG]  [BUGGY]  return  irFactory.fileLevelJsDocBuilder  >  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileLevelJsDocBuilder  >  0;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileLevelJsDocBuilder  >  0;	  return    irFactory.fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
497	[BUG]  [BUGGY]  return  irFactory.handleInvalidFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleInvalidFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleInvalidFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
498	[BUG]  [BUGGY]  return  irFactory.handleParsingFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleParsingFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleParsingFileOverviewJsDoc(irNode);	  return    irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
499	[BUG]  [BUGGY]  return  irFactory.createAstRoot(node);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createAstRoot(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createAstRoot(node);	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
500	[BUG]  [BUGGY]  return  irFactory.transformTree(node.cloneTree());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.transformTree(node.cloneTree());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.transformTree(node.cloneTree());	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
501	[BUG]  [BUGGY]  return  irFactory.transformTree(node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.transformTree(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.transformTree(node);	  return    node.cloneTree();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
502	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
503	[BUG]  [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleNossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleNossibleFileOverviewJsDoc(rootNode);	  return    irFactory.handleNossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
504	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getName());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(node.getName());	  return    node.getName();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
505	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node.getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDoc(node.getName());	  return    node.getName();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
506	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDoc(node.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDoc(node.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDoc(node.getName());	  return    node.getName();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
507	[BUG]  [BUGGY]  return  irNode.getOwnerFile();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getOwnerFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getOwnerFile();	  return    irNode.getPrevious();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
508	[BUG]  [BUGGY]  return  irNode.getParent().removeChild(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent().removeChild(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent().removeChild(rootNodeJsDocBuilder);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
509	[BUG]  [BUGGY]  return  irNode.getChildCount()  >  1?  irNode.removeChild(rootNodeJsDocBuilder):  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getChildCount()  >  1?  irNode.removeChild(rootNodeJsDocBuilder):  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getChildCount()  >  1?  irNode.removeChild(rootNodeJsDocBuilder):  null;	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
510	[BUG]  [BUGGY]  return  irNode.addChildToFront(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.addChildToFront(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.addChildToFront(fileLevelJsDocBuilder);	  return    irNode.removeChild(rootNodeJsDocBuilder);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
511	[BUG]  [BUGGY]  return  irFactory.getNameJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNameJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getNameJsDocBuilder();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
512	[BUG]  [BUGGY]  return  irFactory.getNamespaceJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getNamespaceJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getNamespaceJsDocBuilder();	  return    rootNodeJsDocBuilder.getName();    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
513	[BUG]  [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileLevelJsDocBuilder(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileLevelJsDocBuilder(rootNode);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
514	[BUG]  [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irFactory.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
515	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  <=  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  <=  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  <=  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
516	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
517	[BUG]  [BUGGY]  return  irNode.getfirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getfirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getfirstChild();	  return    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
518	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFirstChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getFirstChild();	  return    rootNodeJsDocBuilder.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
519	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
520	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder.cloneFileOverview();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder.cloneFileOverview();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDocBuilder.cloneFileOverview();	  return    irNode.cloneFileOverview();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
521	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(node);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setPossibleFileOverviewJSDoc(node);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
522	[BUG]  [BUGGY]  irFactory.setCurrentNode(node);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setCurrentNode(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setCurrentNode(node);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
523	[BUG]  [BUGGY]  irFactory.setCurrentNode(rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setCurrentNode(rootNodeJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setCurrentNode(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJSDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
524	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getParent()  :  null;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getParent()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getParent()  :  null;	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    null;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
525	[BUG]  [BUGGY]  return  irNode.getLineno().toString();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getLineno().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getLineno().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
526	[BUG]  [BUGGY]  return  irNode.getParent().toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent().toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent().toString();	  return    irNode.getFile().toString();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
527	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocalPart()  :  null;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocalPart()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocalPart()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
528	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocation()  :  null;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocation()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT?  irNode.getLocation()  :  null;	  return    irNode.getType()    ==    Token.EXPR_RESULT?    irNode.getName()    :    null;    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
529	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.setFileLevelJsDocBuilder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.setFileLevelJsDocBuilder(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
530	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
531	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.FUNCTION?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.FUNCTION?    irNode.getLastChild()    :    irNode.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
532	[BUG]  [BUGGY]  return  irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);	  return    irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
533	[BUG]  [BUGGY]  return  irFactory.handleDefaultFileOverviewJsDoc(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleDefaultFileOverviewJsDoc(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleDefaultFileOverviewJsDoc(irNode);	  return    irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
534	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDocBuilder,  fileLevelJsDocBuilder);	  return    irFactory.fileOverviewJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
535	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
536	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
537	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
538	[BUG]  [BUGGY]  return  irNode.getFileLocation();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLocation();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileLocation();	  return    irNode.getLocation();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
539	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocBuilder(fileOverviewInfo);	  return    irFactory.getFileOverviewJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
540	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(false);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleErrorJsDoc(false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleErrorJsDoc(false);	  irFactory.handlePossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
541	[BUG]  [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(false);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handleUnexpectedFileOverviewJsDoc(false);	  irFactory.handlePossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
542	[BUG]  [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent()  +  fileLevelJsDocBuilder  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent()  +  fileLevelJsDocBuilder  +  1;	  return    irNode.getParent()    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
543	[BUG]  [BUGGY]  return  irNode.getParent().removeChild(rootNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getParent().removeChild(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getParent().removeChild(rootNode);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
544	[BUG]  [BUGGY]  return  irNode.removeChild(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.removeChild(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.removeChild(node);	  return    irNode.removeChild(rootNode);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
545	[BUG]  [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getFirstChild());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handlePossibleFileOverviewJsDoc(node.getFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handlePossibleFileOverviewJsDoc(node.getFirstChild());	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
546	[BUG]  [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node.getFirstChild());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.handleFileOverviewJsDoc(node.getFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.handleFileOverviewJsDoc(node.getFirstChild());	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
547	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(true,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	irFactory.handlePossibleFileOverviewJsDoc(true,  null);	  irFactory.handlePossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
548	[BUG]  [BUGGY]  return  irNode.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileLevelJsDocBuilder(fileLevelJsDocBuilder);	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
549	[BUG]  [BUGGY]  return  irNode.getFileTypeJsDocBuilder();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getFileTypeJsDocBuilder();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getFileTypeJsDocBuilder();	  return    irNode.getFileLevelJsDocBuilder();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
550	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(node);	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
551	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(irNode);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder.getFileOverviewJsDocHolder(irNode);	  return    fileLevelJsDocBuilder.getFileOverviewJsDocHolder();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
552	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
553	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(node);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
554	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(rootNode);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
555	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileoverviewInfo);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
556	[BUG]  [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  fileLevelJsDocBuilder,  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    fileLevelJsDocBuilder;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
557	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDoc(node.getFile());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDoc(node.getFile());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDoc(node.getFile());	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
558	[BUG]  [BUGGY]  return  irFactory.fileOverviewJsDocBuilder.getFile();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.fileOverviewJsDocBuilder.getFile();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.fileOverviewJsDocBuilder.getFile();	  return    node.getFile();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
559	[BUG]  [BUGGY]  return  irFactory.getTreeLocation(node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getTreeLocation(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getTreeLocation(node);	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
560	[BUG]  [BUGGY]  return  irFactory.createTree();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.createTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.createTree();	  return    irFactory.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
561	[BUG]  [BUGGY]  return  irNode.getTarget();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getTarget();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getTarget();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
562	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newNumber(0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newNumber(0);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  Node.newNumber(0);	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    null;    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
563	[BUG]  [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irFactory.getFileOverviewJsDocHolder(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irFactory.getFileOverviewJsDocHolder(fileOverviewInfo);	  return    irFactory.getFileOverviewJsDocHolder(irNode);    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
564	[BUG]  [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.clonePossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.clonePossibleFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.clonePossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
565	[BUG]  [BUGGY]  return  irNode.cloneFileOverviewJsDoc(fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }  irFactory.setFileOverviewJsDoc(irNode);      [BUGGY]  return  irNode.cloneFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	return  irNode.cloneFileOverviewJsDoc(fileOverviewInfo);	  return    irNode.clonePossibleFileOverviewJsDoc();    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
