bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  1));	  irNode.setCharno(charno,    position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
2	[BUG]  [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  position2charno(lineno,  node.getAbsolutePosition()  +  1));	  irNode.setCharno(charno,    position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
3	[BUG]  [BUGGY]  irNode.setCharno(charno,  position2charno(lineno.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  position2charno(lineno.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  position2charno(lineno.getAbsolutePosition()  +  1));	  irNode.setCharno(charno,    position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
4	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()),  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()),  lineno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()),  lineno);	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    2));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
5	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  2));	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    2));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
6	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  lineno));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  lineno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()  +  lineno));	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    charno));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
7	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  charno),  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  charno),  lineno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()  +  charno),  lineno);	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    charno));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
8	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  charno));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  charno));	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    charno));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
9	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getLineno()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getLineno()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2charno(node.getLineno()));	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()),  charno);	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  -  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  -  1));	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getPosition()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getPosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2charno(node.getPosition()));	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lines,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lines,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lines,  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    else    {    irNode.setLineno(lineno);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
16	[BUG]  [BUGGY]  node.setLineno(lineno);  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  node.setLineno(lineno);  irNode.setCharno(charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	node.setLineno(lineno);  irNode.setCharno(charno);	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    else    {    irNode.setLineno(lineno);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
17	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLine  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLine  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLine	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    else    {    irNode.setLineno(lineno);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
18	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno,  node.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno,  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
21	[BUG]  [BUGGY]  irNode.setLineno(lineno  +  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  +  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  +  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno,  position2.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno,  position2.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno,  position2.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
23	[BUG]  [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()  +  1));	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
24	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(lineno,  node.getAbsolutePosition()  +  1));	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
25	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(lineno.getAbsolutePosition()  +  1));	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
26	[BUG]  [BUGGY]  irNode.setCharno(offset  *  position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(offset  *  position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(offset  *  position2charno(node.getAbsolutePosition()  +  1));	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
27	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  charno));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  charno));	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
28	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  charno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  charno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  charno,  node.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  1)));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  1)));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  1)));	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  int  charno  =  position2charno(lineno.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(lineno.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(lineno.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  int  charno  =  position2charno(lineno,  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(lineno,  node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(lineno,  node.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(irNode.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  charno  =  position2charno(lineno.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  charno  =  position2charno(lineno.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	charno  =  position2charno(lineno.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  charno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	charno  =  position2charno(irNode.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
36	[BUG]  [BUGGY]  if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }	  irNode.setCharno(lineno);    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
37	[BUG]  [BUGGY]  if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  irNode.setCharno(lineno);    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
38	[BUG]  [BUGGY]  if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  else  {  irNode.setLineno(lineno);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  else  {  irNode.setLineno(lineno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <  0)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  else  {  irNode.setLineno(lineno);  }	  irNode.setCharno(lineno);    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
39	[BUG]  [BUGGY]  node.setCharno(lineno);  irNode.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  node.setCharno(lineno);  irNode.setLineno(charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	node.setCharno(lineno);  irNode.setLineno(charno);	  irNode.setCharno(lineno);    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
40	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(lineno.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()),  charno);	  irNode.setCharno(position2charno(lineno.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno.getAbsolutePosition()),  charno);	  irNode.setCharno(position2charno(lineno.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
43	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  -  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno.getAbsolutePosition()  -  1));	  irNode.setCharno(position2charno(lineno.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
44	[BUG]  [BUGGY]  irNode.setCharno(lineno  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  +  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  +  2);	  irNode.setCharno(charno    +    2);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
45	[BUG]  [BUGGY]  irNode.setCharno(charno  +  3);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  +  3);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  +  3);	  irNode.setCharno(charno    +    2);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
46	[BUG]  [BUGGY]  irNode.setLineno(lineno  +  2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  +  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  +  2);	  irNode.setCharno(charno    +    2);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
47	[BUG]  [BUGGY]  irNode.setCharno(offset  *  position2charno(lineno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(offset  *  position2charno(lineno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(offset  *  position2charno(lineno,  node.getAbsolutePosition()));	  irNode.setCharno(offset    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  charno,  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  charno,  node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  charno,  node.getAbsolutePosition());	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
49	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  charno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  charno);	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
50	[BUG]  [BUGGY]  irNode.setCharno(lineno  *  position2charno(charno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  *  position2charno(charno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  *  position2charno(charno,  node.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
51	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(lineno,  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(node,  lineno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(node,  lineno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(node,  lineno,  node.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno,  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno,  node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno,  node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
54	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno,  position2.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno,  position2.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno,  position2.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
55	[BUG]  [BUGGY]  irNode.setLineno(lineno  +  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  +  position2charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  +  position2charno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
56	[BUG]  [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()),  charno);	  irNode.setCharno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  irNode.setLineno(charno  *  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(charno  *  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(charno  *  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
58	[BUG]  [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  +  1));	  irNode.setLineno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
59	[BUG]  [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()),  charno);	  irNode.setLineno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
60	[BUG]  [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition(),  charno));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition(),  charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition(),  charno));	  irNode.setLineno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
61	[BUG]  [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  -  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  -  1));	  irNode.setLineno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
62	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno));	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
63	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno),  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno),  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno),  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
64	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno));	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
65	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno),  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno),  position2charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno),  position2charno(node.getAbsolutePosition());	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
66	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno.getAbsolutePosition()  +  1);	  irNode.setCharno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position.getAbsolutePosition());	  irNode.setCharno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno.getAbsolutePosition()  -  1);	  irNode.setCharno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
69	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  node.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
70	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()  -  1);	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
71	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(0,  charno  +  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(0,  charno  +  position2charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(0,  charno  +  position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition(),  charno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition(),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition(),  charno);	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
74	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition(),  0);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition(),  0);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition(),  0);	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
75	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()  -  1);	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
76	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition(),  charno);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition(),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition(),  charno);	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
77	[BUG]  [BUGGY]  irNode.setCharno(position1charno(lineno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1charno(lineno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1charno(lineno,  node.getAbsolutePosition()));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
78	[BUG]  [BUGGY]  irNode.setCharno(position1charno(lineno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1charno(lineno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1charno(lineno,  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
79	[BUG]  [BUGGY]  irNode.setLineno(position1charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position1charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position1charno(node.getAbsolutePosition()));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
80	[BUG]  [BUGGY]  irNode.setCharno(position1charno(lineno,  position2.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1charno(lineno,  position2.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1charno(lineno,  position2.getAbsolutePosition()));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
81	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getLineno()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getLineno()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getLineno()));	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
82	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()),  charno);	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
83	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  -  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  -  1));	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
84	[BUG]  [BUGGY]  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  position2charno(node.getAbsolutePosition());	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
85	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getLineno());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getLineno());	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
86	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  -  1);	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
87	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  1);	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
88	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  1));	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
89	[BUG]  [BUGGY]  irNode.setLineno(charno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(charno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(charno,  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
90	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  -  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  -  1));	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()),  charno);	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
92	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  2));	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
93	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getLineno()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getLineno()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getLineno()));	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
94	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
95	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
96	[BUG]  [BUGGY]  if(charno  <  0)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <  0)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <  0)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }	  irNode.setLineno(lineno);    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
97	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getLineno()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getLineno()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getLineno()));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
98	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
99	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position1.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position1.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position1.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
100	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()),  charno);	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
101	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getCharno()));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getCharno()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getCharno()));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
102	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  -  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  -  1));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
103	[BUG]  [BUGGY]  irNode.setLineno(lineno,  charno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  charno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  charno  =  position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno,    charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
104	[BUG]  [BUGGY]  irNode.setLineno(lineno,  charno  =  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  charno  =  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  charno  =  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno,    charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
105	[BUG]  [BUGGY]  irNode.setLineno(lineno,  charno  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  charno  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  charno  +  1);	  irNode.setLineno(lineno,    charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
106	[BUG]  [BUGGY]  irNode.setCharno(charno,  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  lineno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  lineno);	  irNode.setLineno(lineno,    charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
107	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(charno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(charno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(charno,  node.getAbsolutePosition()));	  irNode.setCharno(charno,    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
108	[BUG]  [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  position2charno(lineno,  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(charno,    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
109	[BUG]  [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  node.getLineno()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  node.getLineno()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  position2charno(lineno,  node.getLineno()));	  irNode.setCharno(charno,    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
110	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(charno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(charno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(charno,  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(charno,    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
111	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition())+  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition())+  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition())+  1);	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
112	[BUG]  [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
113	[BUG]  [BUGGY]  irNode.setLineno(lineno,  charno);  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  charno);  irNode.setCharno(charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  charno);  irNode.setCharno(charno);	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
114	[BUG]  [BUGGY]  irNode.setLineno(lineso  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineso  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineso  +  1);	  irNode.setLineno(charno    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
115	[BUG]  [BUGGY]  irNode.setCharno(lineno,  charno  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  charno  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  charno  +  1);	  irNode.setCharno(lineno,    charno);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
116	[BUG]  [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()),  position2charno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()),  position2charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()),  position2charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
117	[BUG]  [BUGGY]  irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()),  lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()),  lineno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()),  lineno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
118	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  node.getAbsolutePosition()),  position2charno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  node.getAbsolutePosition()),  position2charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(lineno,  node.getAbsolutePosition()),  position2charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
119	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  position2charno(node.getAbsolutePosition()),  position2charno);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno,  position2charno(node.getAbsolutePosition()),  position2charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(lineno,  position2charno(node.getAbsolutePosition()),  position2charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
120	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno.getAbsolutePosition()),  position2charno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(lineno.getAbsolutePosition()),  position2charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(lineno.getAbsolutePosition()),  position2charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
121	[BUG]  [BUGGY]  irNode.setCharno(position2charno  *  chartno(node.getAbsolutePosition()),  position2charno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno  *  chartno(node.getAbsolutePosition()),  position2charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno  *  chartno(node.getAbsolutePosition()),  position2charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
122	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  -  1);	  irNode.setLineno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
123	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno.getAbsolutePosition()  +  1);	  irNode.setLineno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
124	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1);	  irNode.setLineno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
125	[BUG]  [BUGGY]  irNode.setCharno(lineno  +  3);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  +  3);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  +  3);	  irNode.setCharno(lineno    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
126	[BUG]  [BUGGY]  irNode.setLineno(charno,  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(charno,  position2charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(charno,  position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
127	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  -  1);	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
128	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  1);	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
129	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getLineno());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getLineno());	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
130	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position1charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position1charno(node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position1charno(node.getAbsolutePosition());	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
131	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  charno.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  charno.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  charno.getAbsolutePosition());	  irNode.setCharno(position2charno(charno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
132	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getLineno());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getLineno());	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
133	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position1.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position1.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position1.getAbsolutePosition());	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
134	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getCharno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getCharno());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getCharno());	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
135	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  1);	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
136	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  -  1);	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
137	[BUG]  [BUGGY]  irNode.setCharno(charno  *  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  2);	  irNode.setCharno(charno    *    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
138	[BUG]  [BUGGY]  irNode.setCharno(lineno  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  *  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  *  1);	  irNode.setCharno(charno    *    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
139	[BUG]  [BUGGY]  irNode.setLineno(lineno  *  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  *  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  *  1);	  irNode.setCharno(charno    *    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
140	[BUG]  [BUGGY]  irNode.setCharno(charno  *  4);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  4);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  4);	  irNode.setCharno(charno    *    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
141	[BUG]  [BUGGY]  irNode.setLineno(lineno  +  charno);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  +  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  +  charno);	  irNode.setLineno(lineno    +    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
142	[BUG]  [BUGGY]  irNode.setLineno(lineno  +  3);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  +  3);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  +  3);	  irNode.setLineno(lineno    +    1);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
143	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  1);	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
144	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
145	[BUG]  [BUGGY]  if(charno  ==  0)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  0)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  0)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
146	[BUG]  [BUGGY]  if(charno  ==  null)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  null)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  null)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
147	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(irNode.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(position2charno(irNode.getAbsolutePosition());	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
148	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
149	[BUG]  [BUGGY]  if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
150	[BUG]  [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
151	[BUG]  [BUGGY]  if(charno!=  null)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  null)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  null)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
152	[BUG]  [BUGGY]  if(charno  ==  null)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  null)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  null)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
153	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()  +  1);	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
154	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    1));    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
155	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
156	[BUG]  [BUGGY]  if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
157	[BUG]  [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
158	[BUG]  [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
159	[BUG]  [BUGGY]  if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  node.getAbsolutePosition())  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
160	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  2);	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
161	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  4);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  4);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()  +  4);	  irNode.setLineno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
162	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()).toCharno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()).toCharno());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()).toCharno());	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    2));    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
163	[BUG]  [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(lineno  *  position2charno(node.getAbsolutePosition()  +  2));	  irNode.setLineno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
164	[BUG]  [BUGGY]  irNode.setString(sourceString);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setString(sourceString);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setString(sourceString);	  irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
165	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
166	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  charno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  charno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  charno.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
167	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2.getAbsolutePosition()  +  2));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
168	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  -  1);	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
169	[BUG]  [BUGGY]  int  charno  =  position2charno(position2charno(lineno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(position2charno(lineno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(position2charno(lineno.getAbsolutePosition()));	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
170	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  +  1);	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
171	[BUG]  [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  *  position2charno(node.getAbsolutePosition()  +  2));	  irNode.setCharno(lineno    *    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
172	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  position2charno(node.getAbsolutePosition()  +  2));	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
173	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno  +  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno  +  node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno  +  node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
174	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno).getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno).getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno).getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
175	[BUG]  [BUGGY]  irNode.setLineno(position2charno(lineno  +  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(lineno  +  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(lineno  +  node.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
176	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  -1)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  -1)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }	  irNode.setCharno(lineno);    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
177	[BUG]  [BUGGY]  if(charno!=  lineno)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  lineno)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  lineno)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }	  irNode.setCharno(lineno);    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
178	[BUG]  [BUGGY]  if(charno!=  -1)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  -1)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  -1)  {  irNode.setCharno(lineno);  irNode.setLineno(charno);  }	  irNode.setCharno(lineno);    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
179	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  charno);	  irNode.setLineno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
180	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2);	  irNode.setLineno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
181	[BUG]  [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno,  position2charno(node.getAbsolutePosition()  +  2));	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
182	[BUG]  [BUGGY]  irNode.setCharno(position3charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position3charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position3charno(node.getAbsolutePosition()));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
183	[BUG]  [BUGGY]  irNode.setCharno(position1charno(lineno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1charno(lineno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1charno(lineno.getAbsolutePosition()));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
184	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node,  lineno.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node,  lineno.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node,  lineno.getAbsolutePosition());	  irNode.setCharno(position2charno(charno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
185	[BUG]  [BUGGY]  if(charno  >=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  >=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  >=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    else    {    irNode.setLineno(lineno);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
186	[BUG]  [BUGGY]  if(charno  <  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    else    {    irNode.setLineno(lineno);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
187	[BUG]  [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(charno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    else    {    irNode.setLineno(lineno);    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
188	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node,  lineno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node,  lineno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node,  lineno.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
189	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(node,  lineno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(node,  lineno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(node,  lineno.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
190	[BUG]  [BUGGY]  irNode.setCharno(position2charno(lineno,  node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(lineno,  node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(lineno,  node.getAbsolutePosition()  +  1);	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
191	[BUG]  [BUGGY]  irNode.setLineno(charno  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(charno  +  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(charno  +  2);	  irNode.setLineno(charno    +    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
192	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno),  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno),  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno),  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
193	[BUG]  [BUGGY]  irNode.setLineno(position2charno(charno));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(charno));	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
194	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
195	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno  +  1));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno  +  1));	  irNode.setCharno(position2charno(lineno));    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
196	[BUG]  [BUGGY]  if(charno  >=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  >=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  >=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
197	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno,  charno);  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno,  charno);  irNode.setCharno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  -1)  {  irNode.setLineno(lineno,  charno);  irNode.setCharno(charno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
198	[BUG]  [BUGGY]  if(charno!=  lineno)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  lineno)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  lineno)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }	  irNode.setLineno(lineno);    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
199	[BUG]  [BUGGY]  irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()),  charno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()),  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()),  charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
200	[BUG]  [BUGGY]  irNode.setCharno(position1  *  position2charno(node.getAbsolutePosition()),  position2charno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1  *  position2charno(node.getAbsolutePosition()),  position2charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1  *  position2charno(node.getAbsolutePosition()),  position2charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
201	[BUG]  [BUGGY]  irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno  *  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
202	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()  -  1);	  irNode.setCharno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
203	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()  +  2);	  irNode.setCharno(position2charno(lineno.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
204	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  +  1);	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
205	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(lineno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
206	[BUG]  [BUGGY]  irNode.setLineno(charno,  lineno);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(charno,  lineno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(charno,  lineno);	  irNode.setLineno(lineno,    charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
207	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  lineno,  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  lineno,  node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  lineno,  node.getAbsolutePosition());	  irNode.setCharno(position2charno(charno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
208	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  -  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  node.getAbsolutePosition()  -  1);	  irNode.setCharno(position2charno(charno,    node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
209	[BUG]  [BUGGY]  irNode.setCharno(charno  *  position2charno(node.getAbsolutePosition()  +  1),  position2charno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  position2charno(node.getAbsolutePosition()  +  1),  position2charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  position2charno(node.getAbsolutePosition()  +  1),  position2charno);	  irNode.setCharno(charno    *    position2charno(node.getAbsolutePosition()),    position2charno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
210	[BUG]  [BUGGY]  irNode.setLineno(charno  *  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(charno  *  2);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(charno  *  2);	  irNode.setCharno(charno    *    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
211	[BUG]  [BUGGY]  irNode.setCharno(charno  *  3);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  *  3);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  *  3);	  irNode.setCharno(charno    *    1);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
212	[BUG]  [BUGGY]  if(charno  <  0)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <  0)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <  0)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  else  {  irNode.setLineno(lineno);  }	  irNode.setLineno(lineno);    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
213	[BUG]  [BUGGY]  if(lineno  <  charno)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(lineno  <  charno)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(lineno  <  charno)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }	  irNode.setLineno(lineno);    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
214	[BUG]  [BUGGY]  int  charno  =  position2charno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  int  charno  =  position2charno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	int  charno  =  position2charno(position2charno(node.getAbsolutePosition()));	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
215	[BUG]  [BUGGY]  irNode.setCharno(position1charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1charno(node.getAbsolutePosition()  +  1));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
216	[BUG]  [BUGGY]  irNode.setCharno(position1charno(node.getAbsolutePosition()  +  charno));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1charno(node.getAbsolutePosition()  +  charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1charno(node.getAbsolutePosition()  +  charno));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
217	[BUG]  [BUGGY]  irNode.setCharno(position1charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position1charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position1charno(node.getAbsolutePosition()  +  2));	  irNode.setCharno(position1charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
218	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  charno),  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  charno),  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()  +  charno),  position2charno(node.getAbsolutePosition()));	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    charno));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
219	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  lineno,  charno));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()  +  lineno,  charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()  +  lineno,  charno));	  irNode.setCharno(position2charno(node.getAbsolutePosition()    +    charno));    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
220	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  charno));  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  charno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  charno));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
221	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
222	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()  +  1);	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
223	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition());	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
224	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  position2.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(lineno,    position2.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
225	[BUG]  [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  node.getAbsolutePosition()  -  1));  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  position2charno(lineno,  node.getAbsolutePosition()  -  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  position2charno(lineno,  node.getAbsolutePosition()  -  1));	  irNode.setCharno(charno,    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
226	[BUG]  [BUGGY]  if(charno  <=  position2charno(node.getAbsolutePosition()))  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <=  position2charno(node.getAbsolutePosition()))  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <=  position2charno(node.getAbsolutePosition()))  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
227	[BUG]  [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
228	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  ir  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  ir  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  ir	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
229	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  ==  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  irNode.setLineno(lineno);    irNode.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
230	[BUG]  [BUGGY]  irNode.setCharno(lineno  +  charno);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(lineno  +  charno);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(lineno  +  charno);	  irNode.setCharno(lineno    +    1);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
231	[BUG]  [BUGGY]  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno,  position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno,  position2charno(node.getAbsolutePosition()  +  1);	  irNode.setCharno(lineno,    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
232	[BUG]  [BUGGY]  if(charno  <=  position2charno(node.getAbsolutePosition()))  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <=  position2charno(node.getAbsolutePosition()))  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <=  position2charno(node.getAbsolutePosition()))  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
233	[BUG]  [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno!=  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
234	[BUG]  [BUGGY]  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(charno  +  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    irNode.setCharno(charno    +    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
235	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  position2charno(node.getAbsolutePosition()  +  1));	  irNode.setCharno(position2charno(lineno,    position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
236	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(lineno.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
237	[BUG]  [BUGGY]  irNode.setCharno(position2charno(charno,  lineno,  node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setCharno(position2charno(charno,  lineno,  node.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setCharno(position2charno(charno,  lineno,  node.getAbsolutePosition()));	  irNode.setCharno(charno    *    position2charno(lineno,    node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
238	[BUG]  [BUGGY]  if(charno  <  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  if(charno  <  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	if(charno  <  -1)  {  irNode.setLineno(lineno);  irNode.setCharno(charno);  }	  if(charno    ==    -1)    {    irNode.setLineno(lineno);    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
239	[BUG]  [BUGGY]  irNode.setLineno(position2charno(charno,  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(charno,  node.getAbsolutePosition());  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(charno,  node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
240	[BUG]  [BUGGY]  irNode.setLineno(position2charno(charno.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(charno.getAbsolutePosition()));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(charno.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
241	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  lineno));  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      irNode.setLineno(irNode.getFirstChild().getLineno());  irNode.setCharno(irNode.getFirstChild().getCharno());  }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  lineno));  [BUGGY]      }  }  return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  lineno));	  irNode.setLineno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
