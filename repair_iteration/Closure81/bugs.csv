bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] irNode.setLineno(irNode.getFirstChild().getLineno()); [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { [BUGGY] irNode.setLineno(irNode.getFirstChild().getLineno()); [BUGGY] irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	215	215	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { [BUGGY] [BUGGY] irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	215	215	1	add	
3	[BUG] [BUGGY] irNode.setCharno(irNode.getFirstChild().getCharno()); [FE] AssertionFailedError [CONTEXT] JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); [BUGGY] irNode.setCharno(irNode.getFirstChild().getCharno()); [BUGGY] } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); [BUGGY] [BUGGY] irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	add	
5	[BUG] [BUGGY] return Token.BLOCK; [FE] AssertionFailedError [CONTEXT] return Token.CATCH; case com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY: return Token.FINALLY; case com.google.javascript.jscomp.mozilla.rhino.Token.VOID: return Token.VOID; case com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED: return Token.RESERVED; case com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY: return Token.EMPTY; case com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK: [BUGGY] return Token.BLOCK; [BUGGY] case com.google.javascript.jscomp.mozilla.rhino.Token.LABEL: return Token.LABEL; case com.google.javascript.jscomp.mozilla.rhino.Token.TARGET: return Token.TARGET; case com.google.javascript.jscomp.mozilla.rhino.Token.LOOP: return Token.LOOP; case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID: case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT: return Token.EXPR_RESULT; case com.google.javascript.jscomp.mozilla.rhino.Token.JSR: [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return Token.CATCH; case com.google.javascript.jscomp.mozilla.rhino.Token.FINALLY: return Token.FINALLY; case com.google.javascript.jscomp.mozilla.rhino.Token.VOID: return Token.VOID; case com.google.javascript.jscomp.mozilla.rhino.Token.RESERVED: return Token.RESERVED; case com.google.javascript.jscomp.mozilla.rhino.Token.EMPTY: return Token.EMPTY; case com.google.javascript.jscomp.mozilla.rhino.Token.BLOCK: [BUGGY] [BUGGY] return Token.BLOCK; case com.google.javascript.jscomp.mozilla.rhino.Token.LABEL: return Token.LABEL; case com.google.javascript.jscomp.mozilla.rhino.Token.TARGET: return Token.TARGET; case com.google.javascript.jscomp.mozilla.rhino.Token.LOOP: return Token.LOOP; case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_VOID: case com.google.javascript.jscomp.mozilla.rhino.Token.EXPR_RESULT: return Token.EXPR_RESULT; case com.google.javascript.jscomp.mozilla.rhino.Token.JSR: [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.24253562503633297	1196	1196	1	add	
7	[BUG] [BUGGY] switch (token) { [FE] AssertionFailedError [CONTEXT] private static int transformTokenType(int token) { [BUGGY] switch (token) { [BUGGY] case com.google.javascript.jscomp.mozilla.rhino.Token.ERROR: return Token.ERROR; case com.google.javascript.jscomp.mozilla.rhino.Token.EOF: return Token.EOF; case com.google.javascript.jscomp.mozilla.rhino.Token.EOL: return Token.EOL; case com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH: return Token.ENTERWITH; case com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH: return Token.LEAVEWITH; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private static int transformTokenType(int token) { [BUGGY] [BUGGY] switch (token) { case com.google.javascript.jscomp.mozilla.rhino.Token.ERROR: return Token.ERROR; case com.google.javascript.jscomp.mozilla.rhino.Token.EOF: return Token.EOF; case com.google.javascript.jscomp.mozilla.rhino.Token.EOL: return Token.EOL; case com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH: return Token.ENTERWITH; case com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH: return Token.LEAVEWITH; [CLASS] IRFactory TransformDispatcher [METHOD] transformTokenType [RETURN_TYPE] int  int token [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	add	
9	[BUG] [BUGGY] return position; [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { int lineIndex = sourceString.lastIndexOf('\n', position); if (lineIndex == -1) { [BUGGY] return position; [BUGGY] } else {  return position - lineIndex - 1; } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int lineIndex position  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12309149097933272	266	266	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { int lineIndex = sourceString.lastIndexOf('\n', position); if (lineIndex == -1) { [BUGGY] [BUGGY] return position; } else {  return position - lineIndex - 1; } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int lineIndex position  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.12309149097933272	266	266	1	add	
11	[BUG] [BUGGY] return Node.newString(type, value).clonePropsFrom(templateNode); [FE] AssertionFailedError [CONTEXT] private Node newStringNode(int type, String value) { [BUGGY] return Node.newString(type, value).clonePropsFrom(templateNode); [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] newStringNode [RETURN_TYPE] Node  int type String value [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child child1 child2 child3 cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString value TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1276	1276	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node newStringNode(int type, String value) { [BUGGY] [BUGGY] return Node.newString(type, value).clonePropsFrom(templateNode); } [CLASS] IRFactory TransformDispatcher [METHOD] newStringNode [RETURN_TYPE] Node  int type String value [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child child1 child2 child3 cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString value TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11547005383792514	1276	1276	1	add	
13	[BUG] [BUGGY] ErrorReporter errorReporter) { [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, [BUGGY] ErrorReporter errorReporter) { [BUGGY] this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, [BUGGY] [BUGGY] ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	add	
15	[BUG] [BUGGY] private final Set<String> ALLOWED_DIRECTIVES = Sets.newHashSet("use strict"); [FE] AssertionFailedError [CONTEXT] [BUGGY] private final Set<String> ALLOWED_DIRECTIVES = Sets.newHashSet("use strict"); [BUGGY]  [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	86	86	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] private final Set<String> ALLOWED_DIRECTIVES = Sets.newHashSet("use strict"); [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	86	86	1	add	
17	[BUG] [BUGGY] Node rootNodeJsDocHolder = new Node(Token.SCRIPT); [FE] AssertionFailedError [CONTEXT] [BUGGY] Node rootNodeJsDocHolder = new Node(Token.SCRIPT); [BUGGY]  [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	90	90	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] Node rootNodeJsDocHolder = new Node(Token.SCRIPT); [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	90	90	1	add	
19	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node rootNodeJsDocHolder = new Node(Token.SCRIPT); [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	91	91	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node rootNodeJsDocHolder = new Node(Token.SCRIPT); [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	91	91	1	add	
21	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node.FileLevelJsDocBuilder fileLevelJsDocBuilder = rootNodeJsDocHolder.getJsDocBuilderForNode(); [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	93	93	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node.FileLevelJsDocBuilder fileLevelJsDocBuilder = rootNodeJsDocHolder.getJsDocBuilderForNode(); [CLASS] IRFactory TransformDispatcher  [VARIABLES] 	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	93	93	1	add	
23	[BUG] [BUGGY] this.sourceString = sourceString; [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { [BUGGY] this.sourceString = sourceString; [BUGGY] this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { [BUGGY] [BUGGY] this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	add	
25	[BUG] [BUGGY] this.sourceName = sourceName; [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; [BUGGY] this.sourceName = sourceName; [BUGGY] this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; [BUGGY] [BUGGY] this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	106	106	1	add	
27	[BUG] [BUGGY] this.config = config; [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; [BUGGY] this.config = config; [BUGGY] this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	107	107	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; [BUGGY] [BUGGY] this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	107	107	1	add	
29	[BUG] [BUGGY] this.errorReporter = errorReporter; [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; [BUGGY] this.errorReporter = errorReporter; [BUGGY] this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; [BUGGY] [BUGGY] this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	108	108	1	add	
31	[BUG] [BUGGY] this.transformDispatcher = new TransformDispatcher(); [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; [BUGGY] this.transformDispatcher = new TransformDispatcher(); [BUGGY]  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	109	109	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; [BUGGY] [BUGGY] this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	109	109	1	add	
33	[BUG] [BUGGY] this.templateNode = createTemplateNode(); [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  [BUGGY] this.templateNode = createTemplateNode(); [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	111	111	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private IRFactory(String sourceString, String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  [BUGGY] [BUGGY] this.templateNode = createTemplateNode(); } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	111	111	1	add	
35	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); [BUGGY] } [BUGGY]  [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	112	112	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] String sourceName, Config config, ErrorReporter errorReporter) { this.sourceString = sourceString; this.sourceName = sourceName; this.config = config; this.errorReporter = errorReporter; this.transformDispatcher = new TransformDispatcher();  this.templateNode = createTemplateNode(); [BUGGY] [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] <init> [RETURN_TYPE] ErrorReporter)  String sourceString String sourceName Config config ErrorReporter errorReporter [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	112	112	1	add	
37	[BUG] [BUGGY] Node templateNode = new Node(Token.SCRIPT); [FE] AssertionFailedError [CONTEXT] private Node createTemplateNode() {  [BUGGY] Node templateNode = new Node(Token.SCRIPT); [BUGGY] templateNode.putProp(Node.SOURCENAME_PROP, sourceName); return templateNode; } [CLASS] IRFactory TransformDispatcher [METHOD] createTemplateNode [RETURN_TYPE] Node  [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	119	119	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node createTemplateNode() {  [BUGGY] [BUGGY] Node templateNode = new Node(Token.SCRIPT); templateNode.putProp(Node.SOURCENAME_PROP, sourceName); return templateNode; } [CLASS] IRFactory TransformDispatcher [METHOD] createTemplateNode [RETURN_TYPE] Node  [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	119	119	1	add	
39	[BUG] [BUGGY] templateNode.putProp(Node.SOURCENAME_PROP, sourceName); [FE] AssertionFailedError [CONTEXT] private Node createTemplateNode() {  Node templateNode = new Node(Token.SCRIPT); [BUGGY] templateNode.putProp(Node.SOURCENAME_PROP, sourceName); [BUGGY] return templateNode; } [CLASS] IRFactory TransformDispatcher [METHOD] createTemplateNode [RETURN_TYPE] Node  [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	120	120	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node createTemplateNode() {  Node templateNode = new Node(Token.SCRIPT); [BUGGY] [BUGGY] templateNode.putProp(Node.SOURCENAME_PROP, sourceName); return templateNode; } [CLASS] IRFactory TransformDispatcher [METHOD] createTemplateNode [RETURN_TYPE] Node  [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	120	120	1	add	
41	[BUG] [BUGGY] return templateNode; [FE] AssertionFailedError [CONTEXT] private Node createTemplateNode() {  Node templateNode = new Node(Token.SCRIPT); templateNode.putProp(Node.SOURCENAME_PROP, sourceName); [BUGGY] return templateNode; [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] createTemplateNode [RETURN_TYPE] Node  [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	121	121	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node createTemplateNode() {  Node templateNode = new Node(Token.SCRIPT); templateNode.putProp(Node.SOURCENAME_PROP, sourceName); [BUGGY] [BUGGY] return templateNode; } [CLASS] IRFactory TransformDispatcher [METHOD] createTemplateNode [RETURN_TYPE] Node  [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	121	121	1	add	
43	[BUG] [BUGGY] IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter); [FE] AssertionFailedError [CONTEXT] public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) { [BUGGY] IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(),  config, errorReporter); [BUGGY] config, errorReporter); Node irNode = irFactory.transform(node); if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	128	129	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) { [BUGGY] [BUGGY] IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(),  config, errorReporter); config, errorReporter); Node irNode = irFactory.transform(node); if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	128	129	1	add	
45	[BUG] [BUGGY] Node irNode = irFactory.transform(node); [FE] AssertionFailedError [CONTEXT] public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) { IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter); [BUGGY] Node irNode = irFactory.transform(node); [BUGGY]  if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } irFactory.setFileOverviewJsDoc(irNode); [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) { IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter); [BUGGY] [BUGGY] Node irNode = irFactory.transform(node); if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } irFactory.setFileOverviewJsDoc(irNode); [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	130	130	1	add	
47	[BUG] [BUGGY] if (node.getComments() != null) { [FE] AssertionFailedError [CONTEXT] public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) { IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter); Node irNode = irFactory.transform(node); [BUGGY] if (node.getComments() != null) { [BUGGY] for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } irFactory.setFileOverviewJsDoc(irNode); return irNode; [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	132	132	1	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) { IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter); Node irNode = irFactory.transform(node); [BUGGY] [BUGGY] if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } irFactory.setFileOverviewJsDoc(irNode); return irNode; [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	132	132	1	add	
49	[BUG] [BUGGY] irFactory.setFileOverviewJsDoc(irNode); [FE] AssertionFailedError [CONTEXT] Node irNode = irFactory.transform(node); if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } [BUGGY] irFactory.setFileOverviewJsDoc(irNode); [BUGGY]  return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] Node irNode = irFactory.transform(node); if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } [BUGGY] [BUGGY] irFactory.setFileOverviewJsDoc(irNode); return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	add	
51	[BUG] [BUGGY] return irNode; [FE] AssertionFailedError [CONTEXT] if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } irFactory.setFileOverviewJsDoc(irNode); [BUGGY] return irNode; [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (node.getComments() != null) { for (Comment comment : node.getComments()) { if (comment.getCommentType() == JSDOC && !comment.isParsed()) { irFactory.handlePossibleFileOverviewJsDoc(comment); } } } irFactory.setFileOverviewJsDoc(irNode); [BUGGY] [BUGGY] return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transformTree [RETURN_TYPE] Node  AstRoot node String sourceString Config config ErrorReporter errorReporter [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config IRFactory irFactory Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstRoot node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	142	142	1	add	
53	[BUG] [BUGGY] irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo()); [FE] AssertionFailedError [CONTEXT] private void setFileOverviewJsDoc(Node irNode) {    [BUGGY] irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo()); [BUGGY] if (fileOverviewInfo != null) { if ((irNode.getJSDocInfo() != null) && (irNode.getJSDocInfo().getLicense() != null)) { fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense()); } irNode.setJSDocInfo(fileOverviewInfo); } } [CLASS] IRFactory TransformDispatcher [METHOD] setFileOverviewJsDoc [RETURN_TYPE] void  Node irNode [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	149	149	1	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setFileOverviewJsDoc(Node irNode) {    [BUGGY] [BUGGY] irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo()); if (fileOverviewInfo != null) { if ((irNode.getJSDocInfo() != null) && (irNode.getJSDocInfo().getLicense() != null)) { fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense()); } irNode.setJSDocInfo(fileOverviewInfo); } } [CLASS] IRFactory TransformDispatcher [METHOD] setFileOverviewJsDoc [RETURN_TYPE] void  Node irNode [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	149	149	1	add	
55	[BUG] [BUGGY] if (fileOverviewInfo != null) { [FE] AssertionFailedError [CONTEXT] private void setFileOverviewJsDoc(Node irNode) {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo()); [BUGGY] if (fileOverviewInfo != null) { [BUGGY] if ((irNode.getJSDocInfo() != null) && (irNode.getJSDocInfo().getLicense() != null)) { fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense()); } irNode.setJSDocInfo(fileOverviewInfo); } } [CLASS] IRFactory TransformDispatcher [METHOD] setFileOverviewJsDoc [RETURN_TYPE] void  Node irNode [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	
56	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void setFileOverviewJsDoc(Node irNode) {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo()); [BUGGY] [BUGGY] if (fileOverviewInfo != null) { if ((irNode.getJSDocInfo() != null) && (irNode.getJSDocInfo().getLicense() != null)) { fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense()); } irNode.setJSDocInfo(fileOverviewInfo); } } [CLASS] IRFactory TransformDispatcher [METHOD] setFileOverviewJsDoc [RETURN_TYPE] void  Node irNode [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	add	
57	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT]   irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo()); if (fileOverviewInfo != null) { if ((irNode.getJSDocInfo() != null) && (irNode.getJSDocInfo().getLicense() != null)) { fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense()); } irNode.setJSDocInfo(fileOverviewInfo); } [BUGGY] } [BUGGY]  [CLASS] IRFactory TransformDispatcher [METHOD] setFileOverviewJsDoc [RETURN_TYPE] void  Node irNode [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	157	157	1	replace	
58	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo()); if (fileOverviewInfo != null) { if ((irNode.getJSDocInfo() != null) && (irNode.getJSDocInfo().getLicense() != null)) { fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense()); } irNode.setJSDocInfo(fileOverviewInfo); } [BUGGY] [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] setFileOverviewJsDoc [RETURN_TYPE] void  Node irNode [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	157	157	1	add	
59	[BUG] [BUGGY] Comment comment = node.getJsDocNode(); [FE] AssertionFailedError [CONTEXT] private JSDocInfo handleJsDoc(AstNode node) { [BUGGY] Comment comment = node.getJsDocNode(); [BUGGY] if (comment != null) { JsDocInfoParser jsDocParser = createJsDocInfoParser(comment); comment.setParsed(true); if (!handlePossibleFileOverviewJsDoc(jsDocParser)) { return jsDocParser.retrieveAndResetParsedJSDocInfo(); } } return null; } [CLASS] IRFactory TransformDispatcher [METHOD] handleJsDoc [RETURN_TYPE] JSDocInfo  AstNode node [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean JsDocInfoParser jsDocParser Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	
60	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private JSDocInfo handleJsDoc(AstNode node) { [BUGGY] [BUGGY] Comment comment = node.getJsDocNode(); if (comment != null) { JsDocInfoParser jsDocParser = createJsDocInfoParser(comment); comment.setParsed(true); if (!handlePossibleFileOverviewJsDoc(jsDocParser)) { return jsDocParser.retrieveAndResetParsedJSDocInfo(); } } return null; } [CLASS] IRFactory TransformDispatcher [METHOD] handleJsDoc [RETURN_TYPE] JSDocInfo  AstNode node [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean JsDocInfoParser jsDocParser Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	add	
61	[BUG] [BUGGY] if (comment != null) { [FE] AssertionFailedError [CONTEXT] private JSDocInfo handleJsDoc(AstNode node) { Comment comment = node.getJsDocNode(); [BUGGY] if (comment != null) { [BUGGY] JsDocInfoParser jsDocParser = createJsDocInfoParser(comment); comment.setParsed(true); if (!handlePossibleFileOverviewJsDoc(jsDocParser)) { return jsDocParser.retrieveAndResetParsedJSDocInfo(); } } return null; } [CLASS] IRFactory TransformDispatcher [METHOD] handleJsDoc [RETURN_TYPE] JSDocInfo  AstNode node [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean JsDocInfoParser jsDocParser Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	
62	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private JSDocInfo handleJsDoc(AstNode node) { Comment comment = node.getJsDocNode(); [BUGGY] [BUGGY] if (comment != null) { JsDocInfoParser jsDocParser = createJsDocInfoParser(comment); comment.setParsed(true); if (!handlePossibleFileOverviewJsDoc(jsDocParser)) { return jsDocParser.retrieveAndResetParsedJSDocInfo(); } } return null; } [CLASS] IRFactory TransformDispatcher [METHOD] handleJsDoc [RETURN_TYPE] JSDocInfo  AstNode node [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean JsDocInfoParser jsDocParser Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	add	
63	[BUG] [BUGGY] return null; [FE] AssertionFailedError [CONTEXT] private JSDocInfo handleJsDoc(AstNode node) { Comment comment = node.getJsDocNode(); if (comment != null) { JsDocInfoParser jsDocParser = createJsDocInfoParser(comment); comment.setParsed(true); if (!handlePossibleFileOverviewJsDoc(jsDocParser)) { return jsDocParser.retrieveAndResetParsedJSDocInfo(); } } [BUGGY] return null; [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] handleJsDoc [RETURN_TYPE] JSDocInfo  AstNode node [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean JsDocInfoParser jsDocParser Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	202	202	1	replace	
64	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private JSDocInfo handleJsDoc(AstNode node) { Comment comment = node.getJsDocNode(); if (comment != null) { JsDocInfoParser jsDocParser = createJsDocInfoParser(comment); comment.setParsed(true); if (!handlePossibleFileOverviewJsDoc(jsDocParser)) { return jsDocParser.retrieveAndResetParsedJSDocInfo(); } } [BUGGY] [BUGGY] return null; } [CLASS] IRFactory TransformDispatcher [METHOD] handleJsDoc [RETURN_TYPE] JSDocInfo  AstNode node [VARIABLES] Comment comment ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean JsDocInfoParser jsDocParser Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	202	202	1	add	
65	[BUG] [BUGGY] JSDocInfo jsDocInfo = handleJsDoc(node); [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { [BUGGY] JSDocInfo jsDocInfo = handleJsDoc(node); [BUGGY] Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	206	206	1	replace	
66	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { [BUGGY] [BUGGY] JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	206	206	1	add	
67	[BUG] [BUGGY] Node irNode = justTransform(node); [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); [BUGGY] Node irNode = justTransform(node); [BUGGY] if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	207	207	1	replace	
68	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); [BUGGY] [BUGGY] Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	207	207	1	add	
69	[BUG] [BUGGY] if (jsDocInfo != null) { [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); [BUGGY] if (jsDocInfo != null) { [BUGGY] irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) { [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	208	208	1	replace	
70	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); [BUGGY] [BUGGY] if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) { [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	208	208	1	add	
71	[BUG] [BUGGY] if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  [BUGGY] if (irNode.getType() == Token.FUNCTION &&  irNode.getFirstChild().getLineno() != -1) { [BUGGY] irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	213	214	1	replace	
72	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node transform(AstNode node) { JSDocInfo jsDocInfo = handleJsDoc(node); Node irNode = justTransform(node); if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  [BUGGY] [BUGGY] if (irNode.getType() == Token.FUNCTION &&  irNode.getFirstChild().getLineno() != -1) { irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	213	214	1	add	
73	[BUG] [BUGGY] if (irNode.getLineno() == -1) { [FE] AssertionFailedError [CONTEXT] if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { [BUGGY] if (irNode.getLineno() == -1) { [BUGGY]    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } return irNode; [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	218	218	1	replace	
74	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (jsDocInfo != null) { irNode.setJSDocInfo(jsDocInfo); }  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { [BUGGY] [BUGGY] if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } return irNode; [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	218	218	1	add	
75	[BUG] [BUGGY] int lineno = node.getLineno(); [FE] AssertionFailedError [CONTEXT]  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    [BUGGY] int lineno = node.getLineno(); [BUGGY] irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	222	222	1	replace	
76	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    [BUGGY] [BUGGY] int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	222	222	1	add	
77	[BUG] [BUGGY] irNode.setLineno(lineno); [FE] AssertionFailedError [CONTEXT] if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); [BUGGY] irNode.setLineno(lineno); [BUGGY] int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	223	223	1	replace	
78	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (irNode.getType() == Token.FUNCTION && irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); [BUGGY] [BUGGY] irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	223	223	1	add	
79	[BUG] [BUGGY] int charno = position2charno(node.getAbsolutePosition()); [FE] AssertionFailedError [CONTEXT] irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); [BUGGY] int charno = position2charno(node.getAbsolutePosition()); [BUGGY] irNode.setCharno(charno); } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	224	224	1	replace	
80	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] irNode.getFirstChild().getLineno() != -1) { irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); [BUGGY] [BUGGY] int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	224	224	1	add	
81	[BUG] [BUGGY] irNode.setCharno(charno); [FE] AssertionFailedError [CONTEXT] irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); [BUGGY] irNode.setCharno(charno); [BUGGY] } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	replace	
82	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] irNode.setLineno(irNode.getFirstChild().getLineno()); irNode.setCharno(irNode.getFirstChild().getCharno()); } else { if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); [BUGGY] [BUGGY] irNode.setCharno(charno); } } return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	225	225	1	add	
83	[BUG] [BUGGY] return irNode; [FE] AssertionFailedError [CONTEXT] if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } [BUGGY] return irNode; [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	
84	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (irNode.getLineno() == -1) {    int lineno = node.getLineno(); irNode.setLineno(lineno); int charno = position2charno(node.getAbsolutePosition()); irNode.setCharno(charno); } } [BUGGY] [BUGGY] return irNode; } [CLASS] IRFactory TransformDispatcher [METHOD] transform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node int charno lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	add	
85	[BUG] [BUGGY] int lineIndex = sourceString.lastIndexOf('\n', position); [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { [BUGGY] int lineIndex = sourceString.lastIndexOf('\n', position); [BUGGY] if (lineIndex == -1) { return position; } else {  return position - lineIndex - 1; } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int lineIndex position  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	264	264	1	replace	
86	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { [BUGGY] [BUGGY] int lineIndex = sourceString.lastIndexOf('\n', position); if (lineIndex == -1) { return position; } else {  return position - lineIndex - 1; } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int lineIndex position  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	264	264	1	add	
87	[BUG] [BUGGY] if (lineIndex == -1) { [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { int lineIndex = sourceString.lastIndexOf('\n', position); [BUGGY] if (lineIndex == -1) { [BUGGY] return position; } else {  return position - lineIndex - 1; } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int lineIndex position  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	265	265	1	replace	
88	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int position2charno(int position) { int lineIndex = sourceString.lastIndexOf('\n', position); [BUGGY] [BUGGY] if (lineIndex == -1) { return position; } else {  return position - lineIndex - 1; } } [CLASS] IRFactory TransformDispatcher [METHOD] position2charno [RETURN_TYPE] int  int position [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int lineIndex position  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	265	265	1	add	
89	[BUG] [BUGGY] return transformDispatcher.process(node); [FE] AssertionFailedError [CONTEXT] private Node justTransform(AstNode node) { [BUGGY] return transformDispatcher.process(node); [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] justTransform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	274	274	1	replace	
90	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node justTransform(AstNode node) { [BUGGY] [BUGGY] return transformDispatcher.process(node); } [CLASS] IRFactory TransformDispatcher [METHOD] justTransform [RETURN_TYPE] Node  AstNode node [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES boolean Config config Node irNode newBlock rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String comment sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo AstNode node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	274	274	1	add	
91	[BUG] [BUGGY] return new Node(type).clonePropsFrom(templateNode); [FE] AssertionFailedError [CONTEXT] private Node newNode(int type) { [BUGGY] return new Node(type).clonePropsFrom(templateNode); [BUGGY] } [CLASS] IRFactory TransformDispatcher [METHOD] newNode [RETURN_TYPE] Node  int type [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	replace	
92	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private Node newNode(int type) { [BUGGY] [BUGGY] return new Node(type).clonePropsFrom(templateNode); } [CLASS] IRFactory TransformDispatcher [METHOD] newNode [RETURN_TYPE] Node  int type [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES directives boolean Config config Node assign block bodyNode c child cur flagsNode fnNode irNode key labelName literalStringNode lp n newBlock newName node operand prev ret rootNodeJsDocHolder target templateNode value FileLevelJsDocBuilder fileLevelJsDocBuilder String comment directive flags msg sourceName sourceString TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo int type  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	1256	1256	1	add	
