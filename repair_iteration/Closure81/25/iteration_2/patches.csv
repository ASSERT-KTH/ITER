bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  irNode.addChildToBack(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToBack(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToBack(fileLevelJsDocBuilder);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  irNode.addChildToBack(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToBack(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToBack(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  irNode.addChildToBack(node);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToBack(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToBack(node);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  irNode.addChildToBack(relativeFileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToBack(relativeFileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToBack(relativeFileOverviewJsDocBuilder);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(errorReporter);	  irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
6	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(node);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(node);	  irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
7	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(jsDoc);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(jsDoc);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(jsDoc);	  irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
8	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(irNode,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(irNode,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(irNode,  errorReporter);	  irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
9	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(node);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDoc(node);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
10	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDoc(fileLevelJsDocBuilder);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
11	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(comment);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDoc(comment);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
12	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(true);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDoc(true);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
13	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(sourceString);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDoc(sourceString);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
14	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(false);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDoc(false);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
15	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(this.fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(this.fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(this.fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
16	[BUG]  [BUGGY]  irFactory.handleJSDOC(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(fileLevelJsDocBuilder);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
17	[BUG]  [BUGGY]  irFactory.handleJSDOC(errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(errorReporter);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
18	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
19	[BUG]  [BUGGY]  irFactory.handleJSDOC(fileOverviewJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(fileOverviewJsDocBuilder,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(fileOverviewJsDocBuilder,  errorReporter);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
20	[BUG]  [BUGGY]  irFactory.handleJSDOC(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(rootNodeJsDocBuilder);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
21	[BUG]  [BUGGY]  irFactory.handleJSDOC(fileOverviewJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(fileOverviewJsDocBuilder,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(fileOverviewJsDocBuilder,  sourceString);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
22	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  node);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  node);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    node);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
23	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    node);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
24	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(sourceString,  node);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    node);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
25	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  rootNodeJsDocBuilder);	  irNode    =    irFactory.transform(node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
26	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  comment);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  comment);	  irNode    =    irFactory.transform(node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
27	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  errorReporter);	  irNode    =    irFactory.transform(node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
28	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  fileLevelJsDocBuilder);	  irNode    =    irFactory.transform(node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
29	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  message);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  message);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  message);	  irNode    =    irFactory.transform(node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
30	[BUG]  [BUGGY]  irFactory.setFileLevelJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDoc(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDoc(fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
31	[BUG]  [BUGGY]  irFactory.setFileLevelJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDoc(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDoc(rootNodeJsDocBuilder);	  irFactory.setFileLevelJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
32	[BUG]  [BUGGY]  irFactory.setFileLevelJsDoc(node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDoc(node,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
33	[BUG]  [BUGGY]  Node  irNode  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.getLastChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.getLastChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  Node  irNode  =  node.getNext();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.getNext();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.getNext();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.getFirstChild();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.getFirstChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  rootNodeJsDocBuilder.getFirstChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  Node  irNode  =  node.getAncestor(1);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.getAncestor(1);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.getAncestor(1);	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
38	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  templateNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  templateNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
39	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  templateNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  templateNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
40	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocBuilder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
41	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNode,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNode,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
42	[BUG]  [BUGGY]  irNode.addChildToFront(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToFront(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToFront(rootNodeJsDocHolder);	  irNode.addChildToFront(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
43	[BUG]  [BUGGY]  irNode.addChildToFront(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToFront(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToFront(rootNodeJsDocBuilder);	  irNode.addChildToFront(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToFront(fileLevelJsDocBuilder,  sourceString);	  irNode.addChildToFront(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToFront(fileLevelJsDocBuilder,  rootNodeJsDocHolder);	  irNode.addChildToFront(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToFront(fileLevelJsDocBuilder,  errorReporter);	  irNode.addChildToFront(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(true,  false);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(true,  false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(true,  false);	  irFactory.setPossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
48	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(false,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(false,  false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(false,  false);	  irFactory.setPossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
49	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(true,  true);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(true,  true);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(true,  true);	  irFactory.setPossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
50	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(false,  true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(false,  true);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(false,  true);	  irFactory.setPossibleFileOverviewJsDoc(true);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
51	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(fileOverviewInfo);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
52	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(rootNodeJsDocHolder);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
53	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDocBuilder(irNode);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
54	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
55	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(comment);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(comment);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
56	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(sourceString);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(sourceString);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
57	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(node));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(node));  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(node));	  irFactory.setFileLevelJsDocBuilder(new    FileLevelJsDocBuilder());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
58	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(new  FileLevelJsDocBuilder());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(new  FileLevelJsDocBuilder());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(new  FileLevelJsDocBuilder());	  irFactory.setFileLevelJsDocBuilder(new    FileLevelJsDocBuilder());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
59	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(rootNode));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(rootNode));  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(rootNode));	  irFactory.setFileLevelJsDocBuilder(new    FileLevelJsDocBuilder());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
60	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(rootNodeJsDocHolder));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(rootNodeJsDocHolder));  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(rootNodeJsDocHolder));	  irFactory.setFileLevelJsDocBuilder(new    FileLevelJsDocBuilder());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
61	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(node,  fileLevelJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
62	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(errorReporter);	  irFactory.setFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
63	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(rootNodeJsDocHolder);	  irFactory.setFileOverviewJsDoc(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
64	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(rootNodeJsDocHolder);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(sourceString);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(node);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(errorReporter);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder());	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  irFactory.handleNodeOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleNodeOverviewJsDoc(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleNodeOverviewJsDoc(node);	  irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
71	[BUG]  [BUGGY]  irFactory.handleCurrentNodeOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleCurrentNodeOverviewJsDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleCurrentNodeOverviewJsDoc(irNode);	  irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
72	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
73	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDoc(errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDoc(errorReporter,  fileLevelJsDocBuilder);	  irFactory.setFileOverviewJsDoc(errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
74	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(rootNodeJsDocBuilder);	  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
75	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(sourceString);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(sourceString);	  irFactory.setFileOverviewJsDocBuilder(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
76	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(errorReporter);	  irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
77	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(jsDocBuilder);	  irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
78	[BUG]  [BUGGY]  irNode.setParentNode(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(rootNodeJsDocHolder);	  irNode.setParentNode(node);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
79	[BUG]  [BUGGY]  irNode.setParentNode(null);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(null);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(null);	  irNode.setParentNode(node);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
80	[BUG]  [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder,  node);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder,  node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(rootNodeJsDocBuilder,  node);	  irNode.setParentNode(node);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  irNode.setParentNode(comment);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(comment);	  irNode.setParentNode(node);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
82	[BUG]  [BUGGY]  irNode.setParentNode(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(fileLevelJsDocBuilder);	  irNode.setParentNode(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
83	[BUG]  [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  irNode.setParentNode(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
84	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(rootNodeJsDocBuilder);	  irNode.setParentNode(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
85	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleMissingFileOverviewJsDoc(node);	  irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
86	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleMissingFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
87	[BUG]  [BUGGY]  irFactory.handleParsingFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleParsingFileOverviewJsDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleParsingFileOverviewJsDoc(irNode);	  irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
88	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(comment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleMissingFileOverviewJsDoc(comment);	  irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
89	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(jsDoc);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(jsDoc);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleMissingFileOverviewJsDoc(jsDoc);	  irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
90	[BUG]  [BUGGY]  Node  irNodeJsDocHolder  =  node.getRootNode();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNodeJsDocHolder  =  node.getRootNode();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNodeJsDocHolder  =  node.getRootNode();	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
91	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  irNode.getRootNode();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  irNode.getRootNode();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  irNode.getRootNode();	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
92	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getParentNode();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  node.getParentNode();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  node.getParentNode();	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
93	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  node.getLastChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  node.getLastChild();	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
94	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getRootNode(),  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  node.getRootNode(),  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  node.getRootNode(),  fileLevelJsDocBuilder);	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
95	[BUG]  [BUGGY]  Node  nodeJsDocHolder  =  node.getRootNode();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  nodeJsDocHolder  =  node.getRootNode();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  nodeJsDocHolder  =  node.getRootNode();	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
96	[BUG]  [BUGGY]  irNode.setJSDocInfo(errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJSDocInfo(errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJSDocInfo(errorReporter,  fileLevelJsDocBuilder);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
97	[BUG]  [BUGGY]  irNode.setJSDocInfo(sourceString);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJSDocInfo(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJSDocInfo(sourceString);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
98	[BUG]  [BUGGY]  irNode.setJSDocInfo(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJSDocInfo(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJSDocInfo(fileOverviewInfo);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
99	[BUG]  [BUGGY]  irNode.setJSDocInfo(comment);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJSDocInfo(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJSDocInfo(comment);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
100	[BUG]  [BUGGY]  irNode.setJSDocInfo(this.errorReporter);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJSDocInfo(this.errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJSDocInfo(this.errorReporter);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
101	[BUG]  [BUGGY]  irNode.setJSDocInfo(errorReporter,  sourceString);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJSDocInfo(errorReporter,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJSDocInfo(errorReporter,  sourceString);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
102	[BUG]  [BUGGY]  irNode  =  node.getNext();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.getNext();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.getNext();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
103	[BUG]  [BUGGY]  irNode  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.getLastChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.getLastChild();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
104	[BUG]  [BUGGY]  irNode  =  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.getFirstChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.getFirstChild();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
105	[BUG]  [BUGGY]  irNode  =  node.getRootNode();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.getRootNode();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.getRootNode();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
106	[BUG]  [BUGGY]  irNode  =  node.getParent()  +  1;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.getParent()  +  1;  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.getParent()  +  1;	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
107	[BUG]  [BUGGY]  irNode  =  node.getParent()  + "n ";  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.getParent()  + "n ";  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.getParent()  + "n ";	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
108	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileLevelJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
109	[BUG]  [BUGGY]  irFactory.handleErrorReporter(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
110	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(errorReporter);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
111	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(jsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
112	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(node,  rootNodeJsDocHolder);	  irFactory.setFileLevelJsDocBuilder(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
113	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
114	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  sourceString);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(node,  sourceString);	  irFactory.setFileLevelJsDocBuilder(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
115	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder,  templateNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(node,  fileLevelJsDocBuilder,  templateNode);	  irFactory.setFileLevelJsDocBuilder(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
116	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(node,  comment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(node,  comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(node,  comment);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
117	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocHolder(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocHolder(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocHolder(fileOverviewInfo);	  irFactory.setFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
118	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocHolder(node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocHolder(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocHolder(node);	  irFactory.setFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
119	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocHolder(errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocHolder(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocHolder(errorReporter);	  irFactory.setFileOverviewJsDocHolder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
120	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getNext();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  node.getNext();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  node.getNext();	  Node    rootNodeJsDocHolder    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
121	[BUG]  [BUGGY]  Node  irNodeJsDocHolder  =  node.getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNodeJsDocHolder  =  node.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNodeJsDocHolder  =  node.getParent();	  Node    rootNodeJsDocHolder    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
122	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  irNode.getParent();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  irNode.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  irNode.getParent();	  Node    rootNodeJsDocHolder    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
123	[BUG]  [BUGGY]  Node  irNodeJsDocHolder  =  node.getNext();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNodeJsDocHolder  =  node.getNext();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNodeJsDocHolder  =  node.getNext();	  Node    rootNodeJsDocHolder    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
124	[BUG]  [BUGGY]  irNode  =  irFactory.transform(sourceString,  node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(sourceString,  node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(sourceString,  node);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
125	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceName);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  sourceName);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  sourceName);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
126	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  sourceString,  errorReporter);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
127	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  sourceString,  fileLevelJsDocBuilder);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
128	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  message);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  message);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  sourceString,  message);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
129	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDocBuilder(node);	  irFactory.setPossibleFileOverviewJsDocBuilder(node);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
130	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(node,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(node,  fileLevelJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDocBuilder(node);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
131	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverview);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverview);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileOverview);	  irFactory.setPossibleFileOverviewJsDoc(fileOverview);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
132	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileOverview);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(fileOverview);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(fileOverview);	  irFactory.setPossibleFileOverviewJsDoc(fileOverview);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
133	[BUG]  [BUGGY]  irFactory.handleJSDOC(node);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(node);	  irFactory.handleJSDOC(irNode);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
134	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJSDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJSDoc(irNode);	  irFactory.handleJSDOC(irNode);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
135	[BUG]  [BUGGY]  irFactory.handleJSDoc(irNode);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDoc(irNode);	  irFactory.handleJSDOC(irNode);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
136	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(false);	  irFactory.setPossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
137	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewDoc(true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewDoc(true);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewDoc(true);	  irFactory.setPossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
138	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleLocalFileOverviewJsDoc(node);	  irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
139	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleLocalFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
140	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
141	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleLocalFileOverviewJsDoc(rootNodeJsDocHolder);	  irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
142	[BUG]  [BUGGY]  irFactory.handleParseFileOverviewJsDoc(comment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleParseFileOverviewJsDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleParseFileOverviewJsDoc(comment);	  irFactory.handlePossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
143	[BUG]  [BUGGY]  irFactory.handleParsableFileOverviewJsDoc(comment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleParsableFileOverviewJsDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleParsableFileOverviewJsDoc(comment);	  irFactory.handlePossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
144	[BUG]  [BUGGY]  irFactory.handleParsingJsDoc(comment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleParsingJsDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleParsingJsDoc(comment);	  irFactory.handlePossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
145	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceName);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(sourceName);	  irFactory.setFileLevelJsDocBuilder(sourceString);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
146	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(sourceString,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(sourceString);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
147	[BUG]  [BUGGY]  irFactory.handleErrorReporter(errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(errorReporter);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
148	[BUG]  [BUGGY]  irFactory.handleErrorReporter(node);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(node);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
149	[BUG]  [BUGGY]  irFactory.handleErrorReporter(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(jsDocBuilder);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
150	[BUG]  [BUGGY]  irFactory.handleErrorReporter(node,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(node,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(node,  errorReporter);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
151	[BUG]  [BUGGY]  irFactory.handleError(errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleError(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleError(errorReporter);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
152	[BUG]  [BUGGY]  irFactory.handleErrorReporter(errorReporter,  node);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(errorReporter,  node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(errorReporter,  node);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
153	[BUG]  [BUGGY]  irFactory.handleErrorReporter(e,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(e,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(e,  errorReporter);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
154	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(comment);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(comment);	  irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
155	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(this.fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(this.fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(this.fileLevelJsDocBuilder);	  irFactory.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
156	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDoc(jsDoc);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDoc(jsDoc);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDoc(jsDoc);	  irFactory.setFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
157	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(false);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(false);	  irNode.setFileLevelJsDocBuilder(null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
158	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(this);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(this);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(this);	  irNode.setFileLevelJsDocBuilder(null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
159	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  irNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  irNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    irNode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
160	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(irNode,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(irNode,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(irNode,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    irNode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
161	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(sourceString,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
162	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  sourceString);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
163	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceName);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceName);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
164	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  sourceString,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
165	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(errorReporter,  sourceString);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(errorReporter,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(errorReporter,  sourceString);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
166	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  comment);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  comment);	  irFactory.setFileLevelJsDocBuilder(comment);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
167	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);	  irFactory.setFileOverviewJsDocHolder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
168	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(rootNodeJsDocHolder,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
169	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(errorReporter,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(errorReporter,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
170	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(node,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(node,  errorReporter);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
171	[BUG]  [BUGGY]  irNode.setSourceName(node.getSourceName());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(node.getSourceName());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(node.getSourceName());	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
172	[BUG]  [BUGGY]  irNode.setSourceName(fileLevelJsDocBuilder.getSourceName());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(fileLevelJsDocBuilder.getSourceName());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(fileLevelJsDocBuilder.getSourceName());	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
173	[BUG]  [BUGGY]  irNode.setSourceName(sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(sourceString,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(sourceString,  errorReporter);	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
174	[BUG]  [BUGGY]  irNode.setSourceString(sourceString);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceString(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceString(sourceString);	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
175	[BUG]  [BUGGY]  irNode.setSourceName(url);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(url);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(url);	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
176	[BUG]  [BUGGY]  irNode.setSourceName(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(fileLevelJsDocBuilder);	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
177	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(sourceName);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(sourceName);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(sourceName);	  irFactory.setPossibleFileOverviewJsDoc(sourceString);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
178	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(sourceString,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(sourceString,  errorReporter);	  irFactory.setPossibleFileOverviewJsDoc(sourceString);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
179	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(sourceString);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(sourceString);	  irFactory.setPossibleFileOverviewJsDoc(sourceString);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
180	[BUG]  [BUGGY]  irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleParseFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
181	[BUG]  [BUGGY]  irFactory.handleErrorReporter(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
182	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDoc);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(jsDoc);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(jsDoc);	  irFactory.setPossibleFileOverviewJsDoc(jsDoc);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
183	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(jsDoc,  comment);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(jsDoc,  comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(jsDoc,  comment);	  irFactory.setPossibleFileOverviewJsDoc(jsDoc);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
184	[BUG]  [BUGGY]  Node  irNode  =  node.getImmediateParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.getImmediateParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.getImmediateParent();	  Node    irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
185	[BUG]  [BUGGY]  Node  irNode  =  node.getContent();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.getContent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.getContent();	  Node    irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
186	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleMissingFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
187	[BUG]  [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleUnexpectedFileOverviewJsDoc(irNode);	  irFactory.handleMissingFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
188	[BUG]  [BUGGY]  irFactory.setCommentOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setCommentOverviewJsDoc(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setCommentOverviewJsDoc(node);	  irFactory.setPossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
189	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  sourceString,  rootNodeJsDocBuilder);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
190	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  rootNodeJsDocHolder);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
191	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(),  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(),  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(),  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(new    FileLevelJsDocBuilder());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
192	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileTypeJsDocBuilder());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileTypeJsDocBuilder());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(new  FileTypeJsDocBuilder());	  irFactory.setFileLevelJsDocBuilder(new    FileLevelJsDocBuilder());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
193	[BUG]  [BUGGY]  Node  irNode  =  rootNodeJsDocHolder.getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  rootNodeJsDocHolder.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  rootNodeJsDocHolder.getParent();	  Node    irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
194	[BUG]  [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.getParent();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  rootNodeJsDocBuilder.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  rootNodeJsDocBuilder.getParent();	  Node    irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
195	[BUG]  [BUGGY]  Node  irNode  =  node.getPrevious();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.getPrevious();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.getPrevious();	  Node    irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
196	[BUG]  [BUGGY]  irNode.setJsDocBuilder(errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJsDocBuilder(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJsDocBuilder(errorReporter);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
197	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDoc(null);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDoc(null);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
198	[BUG]  [BUGGY]  irNode.setParentNode(parentNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(parentNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(parentNode);	  irNode.setParentNode(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
199	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(false);	  irFactory.setFileLevelJsDocBuilder(errorReporter);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
200	[BUG]  [BUGGY]  irFactory.handleFileOverviewJsDoc(comment);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleFileOverviewJsDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleFileOverviewJsDoc(comment);	  irFactory.setFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
201	[BUG]  [BUGGY]  irFactory.setJsDoc(jsDoc);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setJsDoc(jsDoc);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setJsDoc(jsDoc);	  irFactory.setPossibleFileOverviewJsDoc(jsDoc);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
202	[BUG]  [BUGGY]  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleNodeOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
203	[BUG]  [BUGGY]  irFactory.handleJSDOCOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOCOverviewJsDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOCOverviewJsDoc(irNode);	  irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
204	[BUG]  [BUGGY]  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleNodeOverviewJsDoc(rootNodeJsDocHolder);	  irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
205	[BUG]  [BUGGY]  irFactory.setJsDocBuilder(node);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setJsDocBuilder(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setJsDocBuilder(node);	  irFactory.setPossibleFileOverviewJsDocBuilder(node);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
206	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(sourceString,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(sourceString,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(sourceString,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    sourceString);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
207	[BUG]  [BUGGY]  irFactory.handleJSDOC(comment);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(comment);	  irFactory.handlePossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
208	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(comment);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(comment);	  irFactory.handlePossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
209	[BUG]  [BUGGY]  irFactory.setJsDocHolder(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setJsDocHolder(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setJsDocHolder(rootNodeJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
210	[BUG]  [BUGGY]  Node  irNode  =  rootNodeJsDocHolder.getFirstChild();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  rootNodeJsDocHolder.getFirstChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  rootNodeJsDocHolder.getFirstChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
211	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  false);	  irNode    =    irFactory.transform(node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
212	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(jsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(jsDocBuilder);	  irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
213	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(fileLevelJsDocBuilder);	  irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
214	[BUG]  [BUGGY]  irFactory.setJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setJsDocBuilder(fileLevelJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
215	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJSDOC(irNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJSDOC(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJSDOC(irNode);	  irFactory.handleJSDOC(irNode);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
216	[BUG]  [BUGGY]  irNode.removeChild(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.removeChild(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.removeChild(rootNodeJsDocBuilder);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
217	[BUG]  [BUGGY]  irNode.addChildToBack(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToBack(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToBack(rootNodeJsDocHolder);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
218	[BUG]  [BUGGY]  irNode.addChildToBack(sourceString);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToBack(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToBack(sourceString);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
219	[BUG]  [BUGGY]  irFactory.setCommentOverviewJsDoc(comment);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setCommentOverviewJsDoc(comment);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setCommentOverviewJsDoc(comment);	  irFactory.setPossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
220	[BUG]  [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleUnexpectedFileOverviewJsDoc(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
221	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder,  errorReporter);	  irFactory.setFileOverviewJsDocHolder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
222	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder,  sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(fileOverviewJsDocBuilder,  sourceString);	  irFactory.setFileOverviewJsDocHolder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
223	[BUG]  [BUGGY]  irFactory.handleEmptyFileOverviewJsDoc(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleEmptyFileOverviewJsDoc(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleEmptyFileOverviewJsDoc(rootNodeJsDocBuilder);	  irFactory.handlePossibleFileOverviewJsDoc(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
224	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  errorReporter);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
225	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(sourceString,  rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(sourceString,  rootNodeJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    rootNodeJsDocHolder);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
226	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(sourceString,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(sourceString,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(sourceString,  fileLevelJsDocBuilder);	  irFactory.setPossibleFileOverviewJsDoc(sourceString);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
227	[BUG]  [BUGGY]  irFactory.handleErrorReporter(sourceString);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(sourceString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(sourceString);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
228	[BUG]  [BUGGY]  irFactory.handleErrorReporter(urlNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(urlNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(urlNode);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
229	[BUG]  [BUGGY]  irNode  =  rootNodeJsDocBuilder.getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  rootNodeJsDocBuilder.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  rootNodeJsDocBuilder.getParent();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
230	[BUG]  [BUGGY]  irNode  =  rootNodeJsDocHolder.getParent();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  rootNodeJsDocHolder.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  rootNodeJsDocHolder.getParent();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
231	[BUG]  [BUGGY]  irNode  =  node.getPrevious();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.getPrevious();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.getPrevious();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
232	[BUG]  [BUGGY]  irFactory.handleJSDocOverviewJsDoc(node);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDocOverviewJsDoc(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDocOverviewJsDoc(node);	  irFactory.handlePossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
233	[BUG]  [BUGGY]  irNode.removeChild(rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.removeChild(rootNodeJsDocHolder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.removeChild(rootNodeJsDocHolder);	  irNode.addChildToFront(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
234	[BUG]  [BUGGY]  irFactory.setCurrentPossibleFileOverviewJsDoc(false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setCurrentPossibleFileOverviewJsDoc(false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setCurrentPossibleFileOverviewJsDoc(false);	  irFactory.setPossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
235	[BUG]  [BUGGY]  irFactory.setPossibleFileOverview(true);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverview(true);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverview(true);	  irFactory.setPossibleFileOverviewJsDoc(false);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
236	[BUG]  [BUGGY]  irNode.setParentNode(rootNodeJsDocHolder,  node);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(rootNodeJsDocHolder,  node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(rootNodeJsDocHolder,  node);	  irNode.setParentNode(node);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
237	[BUG]  [BUGGY]  irNode.setSourceName(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(rootNodeJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(rootNodeJsDocBuilder);	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
238	[BUG]  [BUGGY]  irNode.setSourceName(urlString);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(urlString);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(urlString);	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
239	[BUG]  [BUGGY]  irNode.setSourceName(node.getSource());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(node.getSource());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(node.getSource());	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
240	[BUG]  [BUGGY]  irNode.setSourceName(baseUri);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setSourceName(baseUri);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setSourceName(baseUri);	  irNode.setSourceName(sourceString);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
241	[BUG]  [BUGGY]  irFactory.handleError(JSDOC);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleError(JSDOC);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleError(JSDOC);	  irFactory.handlePossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
242	[BUG]  [BUGGY]  irFactory.handleParseFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleParseFileOverviewJsDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleParseFileOverviewJsDoc(irNode);	  irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
243	[BUG]  [BUGGY]  irFactory.handleUnknownFileOverviewJsDoc(irNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleUnknownFileOverviewJsDoc(irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleUnknownFileOverviewJsDoc(irNode);	  irFactory.handleNodeOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
244	[BUG]  [BUGGY]  irNode.setParentNode(rootNode);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setParentNode(rootNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setParentNode(rootNode);	  irNode.setParentNode(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
245	[BUG]  [BUGGY]  irNode.setJSDocInfo(jsDocInfo);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setJSDocInfo(jsDocInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setJSDocInfo(jsDocInfo);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
246	[BUG]  [BUGGY]  irNode.setLineno(errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setLineno(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setLineno(errorReporter);	  irNode.setJSDocInfo(errorReporter);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
247	[BUG]  [BUGGY]  irNode.removeChild(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.removeChild(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.removeChild(fileLevelJsDocBuilder);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
248	[BUG]  [BUGGY]  irNode.addChildToBack(fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToBack(fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToBack(fileOverviewJsDocBuilder);	  irNode.addChildToBack(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
249	[BUG]  [BUGGY]  irFactory.setCurrentPossibleFileOverviewJSDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setCurrentPossibleFileOverviewJSDoc(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setCurrentPossibleFileOverviewJSDoc(fileOverviewInfo);	  irFactory.setPossibleFileOverviewJSDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
250	[BUG]  [BUGGY]  irFactory.setCommentType(JSDOC);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setCommentType(JSDOC);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setCommentType(JSDOC);	  irFactory.setPossibleFileOverviewJsDoc(comment);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
251	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(url);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(url);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(url);	  irFactory.setPossibleFileOverviewJsDoc(sourceString);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
252	[BUG]  [BUGGY]  irFactory.setErrorReporter(errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setErrorReporter(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setErrorReporter(errorReporter);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
253	[BUG]  [BUGGY]  irFactory.handleErrorReporter(msg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorReporter(msg);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorReporter(msg);	  irFactory.handleErrorReporter(irNode);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
254	[BUG]  [BUGGY]  Node  irNode  =  node.removeFirstChild();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.removeFirstChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.removeFirstChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
255	[BUG]  [BUGGY]  Node  irNode  =  node.cloneTree();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.cloneTree();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.cloneTree();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
256	[BUG]  [BUGGY]  Node  irNode  =  rootNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  rootNode.getFirstChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  rootNode.getFirstChild();	  Node    irNode    =    node.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
257	[BUG]  [BUGGY]  Node  irNode  =  node.getRootNode();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  node.getRootNode();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  node.getRootNode();	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
258	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getFileRootNode();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  node.getFileRootNode();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  node.getFileRootNode();	  Node    rootNodeJsDocHolder    =    node.getRootNode();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
259	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(rootNode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(rootNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(rootNode);	  irFactory.setFileLevelJsDocBuilder(rootNode);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
260	[BUG]  [BUGGY]  irFactory.handleJSDOC(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(jsDocBuilder);	  irFactory.handleJSDOC(irNode);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
261	[BUG]  [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  irFactory);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.addChildToFront(fileLevelJsDocBuilder,  irFactory);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.addChildToFront(fileLevelJsDocBuilder,  irFactory);	  irNode.addChildToFront(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
262	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(node,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(node,  fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(node,  fileLevelJsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(node,    fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
263	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(null,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDoc(null,  null);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDoc(null,  null);	  irFactory.setPossibleFileOverviewJsDoc(null);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
264	[BUG]  [BUGGY]  Node  irNode  =  rootNode.getParent();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  irNode  =  rootNode.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  irNode  =  rootNode.getParent();	  Node    irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
265	[BUG]  [BUGGY]  irFactory.setPossibleFileOverview(node);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverview(node);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverview(node);	  irFactory.setPossibleFileOverviewJsDoc(node);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
266	[BUG]  [BUGGY]  irFactory.setCurrentPossibleFileOverviewJsDoc(fileOverview);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setCurrentPossibleFileOverviewJsDoc(fileOverview);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setCurrentPossibleFileOverviewJsDoc(fileOverview);	  irFactory.setPossibleFileOverviewJsDoc(fileOverview);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
267	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverview);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileOverview);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(fileOverview);	  irFactory.setPossibleFileOverviewJsDoc(fileOverview);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
268	[BUG]  [BUGGY]  irFactory.setFileOverviewJsDocBuilder(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileOverviewJsDocBuilder(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileOverviewJsDocBuilder(jsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
269	[BUG]  [BUGGY]  irFactory.setJsDocBuilder(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setJsDocBuilder(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setJsDocBuilder(jsDocBuilder);	  irFactory.setFileLevelJsDocBuilder(jsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
270	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNode);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  rootNode);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    irNode);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
271	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocHolder(fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocHolder(fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocHolder(fileOverviewJsDocBuilder);	  irFactory.setFileOverviewJsDocHolder(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
272	[BUG]  [BUGGY]  irNode.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setPossibleFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
273	[BUG]  [BUGGY]  irNode.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileOverviewJsDocBuilder(fileLevelJsDocBuilder);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
274	[BUG]  [BUGGY]  irNode.setFileOverviewJsDocBuilder(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileOverviewJsDocBuilder(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileOverviewJsDocBuilder(fileOverviewInfo);	  irNode.setFileLevelJsDocBuilder(fileLevelJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
275	[BUG]  [BUGGY]  irNode.setLineno(node.getLineno());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setLineno(node.getLineno());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setLineno(node.getLineno());	  irNode.setParentNode(node);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
276	[BUG]  [BUGGY]  irNode.setName(node.getString());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setName(node.getString());  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setName(node.getString());	  irNode.setParentNode(node);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
277	[BUG]  [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleLocalFileOverviewJsDoc(rootNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleLocalFileOverviewJsDoc(rootNode);	  irFactory.handleLocalFileOverviewJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
278	[BUG]  [BUGGY]  irFactory.handleErrorJsDoc(fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleErrorJsDoc(fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleErrorJsDoc(fileOverviewJsDocBuilder);	  irFactory.handleErrorJsDoc(irNode);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
279	[BUG]  [BUGGY]  irFactory.handleJSDOC(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleJSDOC(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleJSDOC(fileOverviewInfo);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
280	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo,  irNode);	  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
281	[BUG]  [BUGGY]  Node  rootNodeJsDocHolder  =  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  Node  rootNodeJsDocHolder  =  node.getFirstChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	Node  rootNodeJsDocHolder  =  node.getFirstChild();	  Node    rootNodeJsDocHolder    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	42	None	replace
282	[BUG]  [BUGGY]  irNode  =  node.cloneTree();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.cloneTree();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.cloneTree();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
283	[BUG]  [BUGGY]  irNode  =  node.removeFirstChild();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  node.removeFirstChild();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  node.removeFirstChild();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
284	[BUG]  [BUGGY]  irNode  =  rootNode.getParent();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  rootNode.getParent();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  rootNode.getParent();	  irNode    =    node.getParent();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
285	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  rootNode);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  rootNode);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  rootNode);	  irNode    =    irFactory.transform(node);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
286	[BUG]  [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode  =  irFactory.transform(node,  sourceString,  fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode  =  irFactory.transform(node,  sourceString,  fileOverviewJsDocBuilder);	  irNode    =    irFactory.transform(node,    sourceString);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
287	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocHolder(fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocHolder(fileLevelJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocHolder(fileLevelJsDocBuilder);	  irFactory.setFileOverviewJsDocHolder(rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
288	[BUG]  [BUGGY]  irFactory.setCurrentPossibleFileOverviewJsDoc(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setCurrentPossibleFileOverviewJsDoc(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setCurrentPossibleFileOverviewJsDoc(fileOverviewInfo);	  irFactory.setPossibleFileOverviewJsDoc(fileOverviewInfo);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
289	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(fileLevelString));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(fileLevelString));  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(new  FileLevelJsDocBuilder(fileLevelString));	  irFactory.setFileLevelJsDocBuilder(new    FileLevelJsDocBuilder());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
290	[BUG]  [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  config);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,  config);	  irFactory.setFileLevelJsDocBuilder(fileLevelJsDocBuilder,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
291	[BUG]  [BUGGY]  irNode.setFileLevelJsDocBuilder(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irNode.setFileLevelJsDocBuilder(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irNode.setFileLevelJsDocBuilder(jsDocBuilder);	  irNode.setFileLevelJsDocBuilder(null);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
292	[BUG]  [BUGGY]  irFactory.handleFileOverviewJsDoc(errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleFileOverviewJsDoc(errorReporter);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleFileOverviewJsDoc(errorReporter);	  irFactory.setFileOverviewJsDoc(errorReporter);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
293	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDoc(fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDoc(fileOverviewJsDocBuilder);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
294	[BUG]  [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handlePossibleFileOverviewJsDocBuilder();  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handlePossibleFileOverviewJsDocBuilder();	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
295	[BUG]  [BUGGY]  irFactory.handleMissingFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.handleMissingFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.handleMissingFileOverviewJsDocBuilder(fileOverviewJsDocBuilder);	  irFactory.handleJSDOC(fileOverviewJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
296	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(false);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(false);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
297	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJSDocBuilder(fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJSDocBuilder(fileOverviewInfo);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJSDocBuilder(fileOverviewInfo);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
298	[BUG]  [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(jsDocBuilder);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      Node  irNode  =  irFactory.transform(node);  if  (node.getComments()  !=  null)  {  for  (Comment  comment  :  node.getComments())  {  if  (comment.getCommentType()  ==  JSDOC  &&  !comment.isParsed())  {  irFactory.handlePossibleFileOverviewJsDoc(comment);  }  }  }      [BUGGY]  irFactory.setPossibleFileOverviewJsDocBuilder(jsDocBuilder);  [BUGGY]        return  irNode;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTree  [RETURN_TYPE]  Node  AstRoot  node  String  sourceString  Config  config  ErrorReporter  errorReporter  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  IRFactory  irFactory  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstRoot  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	140	140	1	replace	irFactory.setPossibleFileOverviewJsDocBuilder(jsDocBuilder);	  irFactory.setPossibleFileOverviewJsDocBuilder(irNode);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
