bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    node.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
2	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    node.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
3	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    node.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
4	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    node.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
5	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
6	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
7	[BUG]  [BUGGY]  if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
8	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition());  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition());  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition());  node.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
9	[BUG]  [BUGGY]  return  node.cloneFunction();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneFunction();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneFunction();	  return    irNode.cloneFunction();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
10	[BUG]  [BUGGY]  return  irNode.getFunction();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFunction();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFunction();	  return    irNode.cloneFunction();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
11	[BUG]  [BUGGY]  return  irNode.getFunctionType();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFunctionType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFunctionType();	  return    irNode.cloneFunction();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
12	[BUG]  [BUGGY]  return  node.getLineno()  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLineno()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLineno()  -  1;	  return    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  return  irNode.getLineno()  *  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  *  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  *  1;	  return    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  return  irNode.getCharno()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getCharno()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getCharno()  -  1;	  return    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  return  lineno.getLineno()  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  lineno.getLineno()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  lineno.getLineno()  -  1;	  return    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  return  irNode.getString()  -  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getString()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getString()  -  1;	  return    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  return  node.clonePosition();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clonePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clonePosition();	  return    irNode.clonePosition();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
18	[BUG]  [BUGGY]  return  irNode.clonePosition()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.clonePosition()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.clonePosition()  +  1;	  return    irNode.clonePosition();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
19	[BUG]  [BUGGY]  return  irNode.clonePosition()  +  lineno;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.clonePosition()  +  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.clonePosition()  +  lineno;	  return    irNode.clonePosition();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
20	[BUG]  [BUGGY]  return  irNode.clonePosition()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.clonePosition()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.clonePosition()  -  1;	  return    irNode.clonePosition();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
21	[BUG]  [BUGGY]  return  irNode.clonePosition()  -  lineno;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.clonePosition()  -  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.clonePosition()  -  lineno;	  return    irNode.clonePosition();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
22	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
23	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  irNode.setCharno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  irNode.setCharno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  irNode.setCharno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
24	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
25	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(lineno);  irNode.setCharno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
26	[BUG]  [BUGGY]  return  irNode.getParentNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getParentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getParentNode();	  return    node.getParentNode();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
27	[BUG]  [BUGGY]  return  node.getParentNode(),  lineno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getParentNode(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getParentNode(),  lineno);	  return    node.getParentNode();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
28	[BUG]  [BUGGY]  return  irNode.getNextNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getNextNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getNextNode();	  return    node.getParentNode();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
29	[BUG]  [BUGGY]  return  node.getNextNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getNextNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getNextNode();	  return    node.getParentNode();    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
30	[BUG]  [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
32	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR  &&  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR  &&  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR  &&  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
34	[BUG]  [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
35	[BUG]  [BUGGY]  return  node.getLineno()  +  lineno;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLineno()  +  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLineno()  +  lineno;	  return    irNode.getLineno()    +    lineno;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  return  irNode.getLineno()  /  lineno;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  /  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  /  lineno;	  return    irNode.getLineno()    +    lineno;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  return  irNode.getLineno()  +  lineno  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  +  lineno  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  +  lineno  +  1;	  return    irNode.getLineno()    +    lineno;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  return  irNode.getLineno()  +  lineno,  charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  +  lineno,  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  +  lineno,  charno);	  return    irNode.getLineno()    +    lineno;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  return  irNode.getLineno()  +  lineno,  charno;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  +  lineno,  charno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  +  lineno,  charno;	  return    irNode.getLineno()    +    lineno;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  For(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  For(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	For(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }	  for(AstNode    irNode    :    nodes.values())    {    if(irNode.getLineno()    ==    -1)    {    return    irNode.getLineno();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
41	[BUG]  [BUGGY]  for(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()!=  -1)  {  return  irNode.getLineno();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  for(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()!=  -1)  {  return  irNode.getLineno();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	for(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()!=  -1)  {  return  irNode.getLineno();  }	  for(AstNode    irNode    :    nodes.values())    {    if(irNode.getLineno()    ==    -1)    {    return    irNode.getLineno();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
42	[BUG]  [BUGGY]  For(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()!=  -1)  {  return  irNode.getLineno();  }  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  For(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()!=  -1)  {  return  irNode.getLineno();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	For(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()!=  -1)  {  return  irNode.getLineno();  }	  for(AstNode    irNode    :    nodes.values())    {    if(irNode.getLineno()    ==    -1)    {    return    irNode.getLineno();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
43	[BUG]  [BUGGY]  for(AstNode  irNode  :  nodes.values())  {  if(irNode.getCharno()  ==  -1)  {  return  irNode.getLineno();  }  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  for(AstNode  irNode  :  nodes.values())  {  if(irNode.getCharno()  ==  -1)  {  return  irNode.getLineno();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	for(AstNode  irNode  :  nodes.values())  {  if(irNode.getCharno()  ==  -1)  {  return  irNode.getLineno();  }	  for(AstNode    irNode    :    nodes.values())    {    if(irNode.getLineno()    ==    -1)    {    return    irNode.getLineno();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
44	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  node.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.VAR?  irNode.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getParent()  :  irNode.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getParent()  :  irNode.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.VAR?  irNode.getParent()  :  irNode.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  node.getFirstChild()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  node.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  node.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.VAR?  irNode.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.VAR?  irNode.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.EXPR_RESULT;	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
52	[BUG]  [BUGGY]  return  node.getType()!=  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()!=  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()!=  Token.EXPR_RESULT;	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
53	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getType();	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
54	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getType()  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getType()  ==  Token.EXPR_RESULT;	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
55	[BUG]  [BUGGY]  return  node.getType()!=  Token.EXPR_RESULT?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()!=  Token.EXPR_RESULT?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()!=  Token.EXPR_RESULT?  null  :  node.getType();	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
56	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT?  null  :  node.getString();	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
57	[BUG]  [BUGGY]  return  node.getType()  ==  Token.VAR?  node.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.VAR?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.VAR?  node.getLastChild()  :  node.getLastChild();	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
58	[BUG]  [BUGGY]  return  node.getLineno()  -  lineno;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLineno()  -  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLineno()  -  lineno;	  return    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
59	[BUG]  [BUGGY]  return  node.getLineno()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLineno()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLineno()  +  1;	  return    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  return  node.getLineno()  +  charno;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLineno()  +  charno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLineno()  +  charno;	  return    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  return  node.cloneAstNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneAstNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneAstNode();	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
62	[BUG]  [BUGGY]  return  irNode.cloneAstNode(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneAstNode(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneAstNode(node);	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
63	[BUG]  [BUGGY]  return  irNode.getAstNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstNode();	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
64	[BUG]  [BUGGY]  return  irNode.cloneAstNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneAstNode(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneAstNode(node.getLineno());	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
65	[BUG]  [BUGGY]  return  irNode.cloneAstNode(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneAstNode(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneAstNode(node.getAbsolutePosition());	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
66	[BUG]  [BUGGY]  return  node  ==  null?  null  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node  ==  null?  null  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node  ==  null?  null  :  node.getFirstChild();	  return    node!=    null?    null    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
67	[BUG]  [BUGGY]  return  node!=  null?  null  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node!=  null?  null  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node!=  null?  null  :  node.getLastChild();	  return    node!=    null?    null    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
68	[BUG]  [BUGGY]  return  node  ==  null?  null  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node  ==  null?  null  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node  ==  null?  null  :  node.getLastChild();	  return    node!=    null?    null    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
69	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME  &&  node.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    node.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
72	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()!=  Token.NAME?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()!=  Token.NAME?  node.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    node.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
73	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCENAME_PROP,  lineno);	  return    irNode.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
74	[BUG]  [BUGGY]  return  node.getProp(Node.SOURCENAME_PROP);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getProp(Node.SOURCENAME_PROP);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getProp(Node.SOURCENAME_PROP);	  return    irNode.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
75	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCENAME_PROP,  sourceString);	  return    irNode.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
76	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP)+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP)+  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCENAME_PROP)+  1;	  return    irNode.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
77	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCENAME_PROP,  null);	  return    irNode.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
78	[BUG]  [BUGGY]  node.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
79	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
80	[BUG]  [BUGGY]  Node.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
81	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
82	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
83	[BUG]  [BUGGY]  node  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(lineno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
84	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  0);  irNode.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  0);  irNode.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  0);  irNode.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
85	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  irNode.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  irNode.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  irNode.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
86	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
87	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  lineno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  lineno);	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
88	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno);	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
89	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  2));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
90	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2);	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
91	[BUG]  [BUGGY]  return  node.getString();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getString();	  return    irNode.getString();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
92	[BUG]  [BUGGY]  return  irNode.getString()  + "n ";  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getString()  + "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getString()  + "n ";	  return    irNode.getString();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
93	[BUG]  [BUGGY]  return  irNode.getString()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getString()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getString()  +  1;	  return    irNode.getString();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
94	[BUG]  [BUGGY]  return  node.getNext(),  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getNext(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getNext(),  lineno);	  return    node.getNext();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
95	[BUG]  [BUGGY]  return  node.getNext()  -  lineno;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getNext()  -  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getNext()  -  lineno;	  return    node.getNext();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
96	[BUG]  [BUGGY]  return  node.getNext()  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getNext()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getNext()  -  1;	  return    node.getNext();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
97	[BUG]  [BUGGY]  return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  +  1  :  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  +  1  :  irNode.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  +  1  :  irNode.getLineno();	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  +  1  :  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  +  1  :  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  +  1  :  irNode.getCharno();	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
99	[BUG]  [BUGGY]  return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno()  +  1;	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
100	[BUG]  [BUGGY]  return  node.firstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.firstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.firstChild();	  return    irNode.firstChild();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
101	[BUG]  [BUGGY]  return  irNode.lastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.lastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.lastChild();	  return    irNode.firstChild();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
102	[BUG]  [BUGGY]  return  irNode.next();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.next();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.next();	  return    irNode.firstChild();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
103	[BUG]  [BUGGY]  return  node.getFactory().createAstNode(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getFactory().createAstNode(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getFactory().createAstNode(irNode.getAbsolutePosition());	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
104	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(node.getLineno());	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
105	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  lineno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  lineno);	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
106	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition()  +  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(node.getAbsolutePosition()  +  1);	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
107	[BUG]  [BUGGY]  return  node.getFactory().createAstNode(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getFactory().createAstNode(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getFactory().createAstNode(node.getAbsolutePosition());	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
108	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  node.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  node.getLineno());	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
109	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition());	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
110	[BUG]  [BUGGY]  return  node.getNext()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getNext()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getNext()  +  1;	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
111	[BUG]  [BUGGY]  return  irNode.getParent()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getParent()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getParent()  +  1;	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
112	[BUG]  [BUGGY]  return  irNode.getFirstChild().getNext()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFirstChild().getNext()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFirstChild().getNext()  +  1;	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
113	[BUG]  [BUGGY]  return  irNode.getFirstChild().getNext();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFirstChild().getNext();	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
114	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    node.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
115	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    node.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
116	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getLastChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    node.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
117	[BUG]  [BUGGY]  return  node.getLastChild()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLastChild()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLastChild()  +  1;	  return    irNode.getLastChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
118	[BUG]  [BUGGY]  return  irNode.getFirstChild()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFirstChild()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFirstChild()  +  1;	  return    irNode.getLastChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
119	[BUG]  [BUGGY]  return  irNode.getLastChild()  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild()  +  2;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild()  +  2;	  return    irNode.getLastChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
120	[BUG]  [BUGGY]  return  irNode.getLastChild()  *  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild()  *  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild()  *  1;	  return    irNode.getLastChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
121	[BUG]  [BUGGY]  return  node.getFirstChild()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getFirstChild()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getFirstChild()  +  1;	  return    irNode.getLastChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
122	[BUG]  [BUGGY]  return  node  ==  null?  null  :  node.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node  ==  null?  null  :  node.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node  ==  null?  null  :  node.getAbsolutePosition();	  return    node!=    null?    null    :    node.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
123	[BUG]  [BUGGY]  return  irNode!=  null?  null  :  node.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode!=  null?  null  :  node.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode!=  null?  null  :  node.getAbsolutePosition();	  return    node!=    null?    null    :    node.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
124	[BUG]  [BUGGY]  return  node!=  null?  null  :  node.getAbsolutePosition()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node!=  null?  null  :  node.getAbsolutePosition()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node!=  null?  null  :  node.getAbsolutePosition()  +  1;	  return    node!=    null?    null    :    node.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
125	[BUG]  [BUGGY]  return  node.getType()!=  Token.NAME?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()!=  Token.NAME?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()!=  Token.NAME?  null  :  node.getType();	  return    node.getType()    ==    Token.NAME?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
126	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  null  :  node.getType();	  return    node.getType()    ==    Token.NAME?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
127	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.getType();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  null  :  irNode.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  null  :  irNode.getType();	  return    node.getType()    ==    Token.NAME?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
128	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.NAME?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.NAME?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME  ||  node.getType()  ==  Token.NAME?  null  :  node.getType();	  return    node.getType()    ==    Token.NAME?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
129	[BUG]  [BUGGY]  return  node.getParent(),  lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getParent(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getParent(),  lineno);	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
130	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
131	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP,  lineno);	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
132	[BUG]  [BUGGY]  return  node.getProp(Node.SOURCEFILE_PROP);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getProp(Node.SOURCEFILE_PROP);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getProp(Node.SOURCEFILE_PROP);	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
133	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  sourceString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP,  sourceString);	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
134	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  null);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP,  null);	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
135	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP)+  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP)+  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP)+  1;	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
136	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  node.getLineno();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  node.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  node.getLineno();	  return    node.getType()    ==    Token.STRING?    null    :    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
137	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getString();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  null  :  node.getString();	  return    node.getType()    ==    Token.STRING?    null    :    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
138	[BUG]  [BUGGY]  return  node.getType()!=  Token.STRING?  null  :  node.getLineno();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()!=  Token.STRING?  null  :  node.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()!=  Token.STRING?  null  :  node.getLineno();	  return    node.getType()    ==    Token.STRING?    null    :    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
139	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getSourceName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  null  :  node.getSourceName();	  return    node.getType()    ==    Token.STRING?    null    :    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
140	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getLastChild());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getLastChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getLastChild());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
141	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode.getFirstChild());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode.getFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode.getFirstChild());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
142	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getFirstChild(),  node);	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
143	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node.getLastChild());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node.getLastChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getFirstChild(),  node.getLastChild());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
144	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  lineno);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getFirstChild(),  lineno);	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
145	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node.getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getFirstChild(),  node.getLineno());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
146	[BUG]  [BUGGY]  return  node.getSourceName()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSourceName()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSourceName()  +  1;	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
147	[BUG]  [BUGGY]  return(irNode.getSourceName()!=  null)?  irNode.getSourceName()  :  irNode.getSourceName();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()!=  null)?  irNode.getSourceName()  :  irNode.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()!=  null)?  irNode.getSourceName()  :  irNode.getSourceName();	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
148	[BUG]  [BUGGY]  return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  irNode.getSourceName();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  irNode.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  irNode.getSourceName();	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
149	[BUG]  [BUGGY]  return(irNode.getSourceName()  ==  null)?  null  :  irNode.getSourceName()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()  ==  null)?  null  :  irNode.getSourceName()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()  ==  null)?  null  :  irNode.getSourceName()  +  1;	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
150	[BUG]  [BUGGY]  return(irNode.getSourceName()!=  null)?  null  :  irNode.getSourceName()  +  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()!=  null)?  null  :  irNode.getSourceName()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()!=  null)?  null  :  irNode.getSourceName()  +  1;	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
151	[BUG]  [BUGGY]  return(irNode.getSourceName()!=  null?  irNode.getSourceName()  :  irNode.getSourceName());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()!=  null?  irNode.getSourceName()  :  irNode.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()!=  null?  irNode.getSourceName()  :  irNode.getSourceName());	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
152	[BUG]  [BUGGY]  return  node.getCharno();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getCharno();	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
153	[BUG]  [BUGGY]  return  irNode.getCharno()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getCharno()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getCharno()  +  1;	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
154	[BUG]  [BUGGY]  return  irNode.getCharno(),  lineno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getCharno(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getCharno(),  lineno);	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
155	[BUG]  [BUGGY]  return  irNode.getCharno()  +  lineno;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getCharno()  +  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getCharno()  +  lineno;	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
156	[BUG]  [BUGGY]  return  node.getPrevious();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getPrevious();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getPrevious();	  return    irNode.getPrevious();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
157	[BUG]  [BUGGY]  return  node.getAstRootNode(),  lineno);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(),  lineno);	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
158	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode);	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
159	[BUG]  [BUGGY]  return  node.getAstRootNode(),  irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(),  irNode.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(),  irNode.getLineno());	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
160	[BUG]  [BUGGY]  return  node.getAstRootNode()  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode()  -  1;	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
161	[BUG]  [BUGGY]  return  node.getAstRootNode(),  irNode);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(),  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(),  irNode);	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
162	[BUG]  [BUGGY]  return  node.removeLastChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.removeLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.removeLastChild();	  return    irNode.removeLastChild();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
163	[BUG]  [BUGGY]  return  irNode.removeLastChild()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.removeLastChild()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.removeLastChild()  +  1;	  return    irNode.removeLastChild();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
164	[BUG]  [BUGGY]  return  node.removeFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.removeFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.removeFirstChild();	  return    irNode.removeLastChild();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
165	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode.getAbsolutePosition());	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
166	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition()  +  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getAbsolutePosition()  +  1);	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
167	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  lineno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getAbsolutePosition(),  lineno);	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
168	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getAbsolutePosition(),  node);	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
169	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  position2);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  position2);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getAbsolutePosition(),  position2);	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
170	[BUG]  [BUGGY]  return  node.getSourceName()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSourceName()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSourceName()  +  sourceString;	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
171	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  sourceString.toLowerCase();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceName()  +  sourceString.toLowerCase();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceName()  +  sourceString.toLowerCase();	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
172	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  sourceString.toCharArray();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceName()  +  sourceString.toCharArray();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceName()  +  sourceString.toCharArray();	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
173	[BUG]  [BUGGY]  return  sourceString.getSourceName()  +  irNode;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  sourceString.getSourceName()  +  irNode;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  sourceString.getSourceName()  +  irNode;	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
174	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  sourceString.substring(1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceName()  +  sourceString.substring(1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceName()  +  sourceString.substring(1);	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
175	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  sourceString,  lineno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceName()  +  sourceString,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceName()  +  sourceString,  lineno);	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
176	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
177	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
178	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
179	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
180	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getParent()  :  node.getNext();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
181	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getNext()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getNext()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getNext()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
182	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
183	[BUG]  [BUGGY]  irNode.setLineno(lineno  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(lineno  +  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(lineno  +  1);	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
184	[BUG]  [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(lineno,  position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
185	[BUG]  [BUGGY]  return  irNode.getAstRootNode(sourceName);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(sourceName);	  return    irNode.getAstRootNode(sourceString);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
186	[BUG]  [BUGGY]  return  node.getAstRootNode(sourceString);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(sourceString);	  return    irNode.getAstRootNode(sourceString);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
187	[BUG]  [BUGGY]  return  irNode.getAstRootNode(sourceString,  lineno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(sourceString,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(sourceString,  lineno);	  return    irNode.getAstRootNode(sourceString);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
188	[BUG]  [BUGGY]  return  irNode.getAstRootNode(lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(lineno);	  return    irNode.getAstRootNode(sourceString);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
189	[BUG]  [BUGGY]  return  node.getLastChild().getNext();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLastChild().getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLastChild().getNext();	  return    irNode.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
190	[BUG]  [BUGGY]  return  irNode.getLastChild().getParent();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild().getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild().getParent();	  return    irNode.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
191	[BUG]  [BUGGY]  return  irNode.getLastChild().getNext()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild().getNext()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild().getNext()  +  1;	  return    irNode.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
192	[BUG]  [BUGGY]  return  node.getFirstChild().getNext();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getFirstChild().getNext();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getFirstChild().getNext();	  return    irNode.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
193	[BUG]  [BUGGY]  return  irNode.getLastChild().getString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild().getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild().getString();	  return    irNode.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
194	[BUG]  [BUGGY]  return  node.getfirstChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getfirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getfirstChild();	  return    irNode.getfirstChild();    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
195	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
196	[BUG]  [BUGGY]  Integer  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Integer  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Integer  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
197	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
198	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
199	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
200	[BUG]  [BUGGY]  return  node.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.toString();	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
201	[BUG]  [BUGGY]  return  irNode.toString()  + "n ";  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.toString()  + "n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.toString()  + "n ";	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
202	[BUG]  [BUGGY]  return  irNode.toString()  + ";n ";  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.toString()  + ";n ";  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.toString()  + ";n ";	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
203	[BUG]  [BUGGY]  return  irNode.toString()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.toString()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.toString()  +  1;	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
204	[BUG]  [BUGGY]  return  node.getSource();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSource();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSource();	  return    irNode.getSource();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
205	[BUG]  [BUGGY]  return  irNode.getSourceLineno();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceLineno();	  return    irNode.getSource();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
206	[BUG]  [BUGGY]  return  irNode.getSource()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSource()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSource()  +  sourceString;	  return    irNode.getSource();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
207	[BUG]  [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(irNode.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
208	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getLineno());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
209	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getCharno());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getCharno());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
210	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
211	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  -  1);	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
212	[BUG]  [BUGGY]  int  charno  =  position2charno(lineno.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(lineno.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(lineno.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
213	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  +  1);	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
214	[BUG]  [BUGGY]  return  node.getLastChild(),  lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLastChild(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLastChild(),  lineno);	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
215	[BUG]  [BUGGY]  return  irNode.getFirstChild(),  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFirstChild(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFirstChild(),  lineno);	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
216	[BUG]  [BUGGY]  return  irNode.getLastChild(),  lineno,  charno);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild(),  lineno,  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild(),  lineno,  charno);	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
217	[BUG]  [BUGGY]  return  irNode.getLastChild(),  charno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild(),  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild(),  charno);	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
218	[BUG]  [BUGGY]  return  irNode.getLastChild(),  node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild(),  node);	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
219	[BUG]  [BUGGY]  return  irNode.getLastChild(),  position2charno(lineno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild(),  position2charno(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild(),  position2charno(lineno);	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
220	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
221	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  irNode.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
222	[BUG]  [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
223	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  irNode.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
224	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	charno  =  position2charno(node.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
225	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(lineno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
226	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
227	[BUG]  [BUGGY]  Node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
228	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  node.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  node.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  node.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
229	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
230	[BUG]  [BUGGY]  return  node.getType()!=  Token.FUNCTION?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()!=  Token.FUNCTION?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()!=  Token.FUNCTION?  null  :  node.getType();	  return    node.getType()    ==    Token.FUNCTION?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
231	[BUG]  [BUGGY]  return  node.getType()  ==  Token.FUNCTION  ||  node.getType()  ==  Token.FUNCTION?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.FUNCTION  ||  node.getType()  ==  Token.FUNCTION?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.FUNCTION  ||  node.getType()  ==  Token.FUNCTION?  null  :  node.getType();	  return    node.getType()    ==    Token.FUNCTION?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
232	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  null  :  node.getType();	  return    node.getType()    ==    Token.FUNCTION?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
233	[BUG]  [BUGGY]  return  node.getType()  ==  Token.FUNCTION  ||  node.getType()  ==  Token.NAME?  null  :  node.getType();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.FUNCTION  ||  node.getType()  ==  Token.NAME?  null  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.FUNCTION  ||  node.getType()  ==  Token.NAME?  null  :  node.getType();	  return    node.getType()    ==    Token.FUNCTION?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
234	[BUG]  [BUGGY]  return  irNode.removeChild(irNode.getFirstChild());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.removeChild(irNode.getFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.removeChild(irNode.getFirstChild());	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
235	[BUG]  [BUGGY]  return  irNode.removeChild(node.getFirstChild());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.removeChild(node.getFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.removeChild(node.getFirstChild());	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
236	[BUG]  [BUGGY]  return  node.getLastChild()  -  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLastChild()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLastChild()  -  1;	  return    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
237	[BUG]  [BUGGY]  return  node.getLastChild()  -  lineno;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getLastChild()  -  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getLastChild()  -  lineno;	  return    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
238	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node,  lineno);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node,  lineno);	  return    irNode.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
239	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node,  false);	  return    irNode.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
240	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node,  sourceString);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node,  sourceString);	  return    irNode.getAstRootNode(node);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
241	[BUG]  [BUGGY]  return  node.cloneTree(),  lineno);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree(),  lineno);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
242	[BUG]  [BUGGY]  return  node.cloneTree(),  irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree(),  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree(),  irNode);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
243	[BUG]  [BUGGY]  return  node.getTree();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getTree();	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
244	[BUG]  [BUGGY]  return  node.cloneTree(),  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree(),  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree(),  null;	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
245	[BUG]  [BUGGY]  return  node.cloneTree()  &&  node.getLineno()!=  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree()  &&  node.getLineno()!=  -1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree()  &&  node.getLineno()!=  -1);	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
246	[BUG]  [BUGGY]  return  node.getAstRootNode()  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode()  +  1;	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
247	[BUG]  [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  irNode.getAstRootNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  irNode.getAstRootNode();	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
248	[BUG]  [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  null  :  irNode.getAstRootNode()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  null  :  irNode.getAstRootNode()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getAstRootNode()  ==  null)?  null  :  irNode.getAstRootNode()  +  1;	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
249	[BUG]  [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  irNode.getAstRootNode()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  irNode.getAstRootNode()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  irNode.getAstRootNode()  +  1;	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
250	[BUG]  [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  node.getAstRootNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getAstRootNode()  ==  null)?  irNode.getAstRootNode()  :  node.getAstRootNode();	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
251	[BUG]  [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  node.getAstRootNode()  :  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  node.getAstRootNode()  :  irNode.getAstRootNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getAstRootNode()  ==  null)?  node.getAstRootNode()  :  irNode.getAstRootNode();	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
252	[BUG]  [BUGGY]  return  irNode.removeChild(node);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.removeChild(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.removeChild(node);	  return    irNode.removeChild(irNode);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
253	[BUG]  [BUGGY]  return  node.removeChild(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.removeChild(irNode);	  return    irNode.removeChild(irNode);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
254	[BUG]  [BUGGY]  return  irNode.getChildren().removeChild(irNode);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getChildren().removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getChildren().removeChild(irNode);	  return    irNode.removeChild(irNode);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
255	[BUG]  [BUGGY]  return  irNode.getChildCount();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getChildCount();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getChildCount();	  return    irNode.removeChild(irNode);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
256	[BUG]  [BUGGY]  return  irNode.replaceChild(irNode,  newBlock);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.replaceChild(irNode,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.replaceChild(irNode,  newBlock);	  return    irNode.removeChild(irNode);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
257	[BUG]  [BUGGY]  return  irNode.replaceChild(node,  irNode);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.replaceChild(node,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.replaceChild(node,  irNode);	  return    irNode.removeChild(irNode);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
258	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode.getSourceName());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode.getSourceName());	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
259	[BUG]  [BUGGY]  return  irNode.getAstRootNode(sourceString,  node.getSourceName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(sourceString,  node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(sourceString,  node.getSourceName());	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
260	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  lineno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getSourceName(),  lineno);	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
261	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getSourceName(),  node.getCharno());	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
262	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  node.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getSourceName(),  node.getLineno());	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
263	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  node.getTree();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  node.getTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  node.getTree();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
264	[BUG]  [BUGGY]  return  irNode.getTree(),  lineno);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getTree(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getTree(),  lineno);	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
265	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  null;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getTree()  :  null;	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
266	[BUG]  [BUGGY]  return  irNode.getTree()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getTree()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getTree()  +  1;	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
267	[BUG]  [BUGGY]  return  irNode.getTree()  &&  node.getLineno()  ==  -1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getTree()  &&  node.getLineno()  ==  -1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getTree()  &&  node.getLineno()  ==  -1);	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
268	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  node.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
269	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  irNode.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
270	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
271	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  node.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  node.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  node.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
272	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
273	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING  &&  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
274	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  node.getLastChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  node.getLastChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  node.getLastChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
275	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  node.getCharno();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  node.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  node.getCharno();	  return    node.getType()    ==    Token.STRING?    null    :    node.getCharno();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
276	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getLocalName();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getLocalName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  null  :  node.getLocalName();	  return    node.getType()    ==    Token.STRING?    null    :    node.getCharno();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
277	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getText();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getText();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  null  :  node.getText();	  return    node.getType()    ==    Token.STRING?    null    :    node.getCharno();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
278	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode.getLineno());	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
279	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getLineno(),  node.getCharno());	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
280	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getLineno(),  lineno);	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
281	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getLineno(),  node.getAbsolutePosition());	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
282	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getLineno()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getLineno()  -  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getLineno()  -  1);	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
283	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getLineno()  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getLineno()  +  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getLineno()  +  1);	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
284	[BUG]  [BUGGY]  return  node.getSourceString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSourceString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSourceString();	  return    irNode.getSourceString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
285	[BUG]  [BUGGY]  return  irNode.getSourceString()  +  sourceName;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceString()  +  sourceName;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceString()  +  sourceName;	  return    irNode.getSourceString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
286	[BUG]  [BUGGY]  return  irNode.getSourceString()  +  1;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceString()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceString()  +  1;	  return    irNode.getSourceString();    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
287	[BUG]  [BUGGY]  node.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
288	[BUG]  [BUGGY]  Node  charno  =  node.getAbsolutePosition();  node.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node  charno  =  node.getAbsolutePosition();  node.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node  charno  =  node.getAbsolutePosition();  node.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
289	[BUG]  [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  node.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  node.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(irNode.getAbsolutePosition());  node.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
290	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(lineno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
291	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(lineno);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(lineno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
292	[BUG]  [BUGGY]  return  irNode.getLineno()  -  lineno  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  -  lineno  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  -  lineno  +  1;	  return    irNode.getLineno()    -    lineno;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
293	[BUG]  [BUGGY]  return  irNode.getLineno()  -  lineno,  charno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  -  lineno,  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  -  lineno,  charno);	  return    irNode.getLineno()    -    lineno;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
294	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  lineno,  charno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  lineno,  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  lineno,  charno);	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
295	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  lineno,  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  lineno,  position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  lineno,  position2charno(node.getAbsolutePosition());	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
296	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  node);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  node);	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
297	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  charno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  charno);	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
298	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  position2charno(node.getAbsolutePosition());	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
299	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
300	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  node.getFirstChild()  :  irNode.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
301	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
302	[BUG]  [BUGGY]  return  node.getSourcePosition();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSourcePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSourcePosition();	  return    irNode.getSourcePosition();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
303	[BUG]  [BUGGY]  return  irNode.getSourcePosition()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourcePosition()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourcePosition()  +  1;	  return    irNode.getSourcePosition();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
304	[BUG]  [BUGGY]  return  irNode.getSourcePosition()  +  lineno;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourcePosition()  +  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourcePosition()  +  lineno;	  return    irNode.getSourcePosition();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
305	[BUG]  [BUGGY]  return  irNode.getSourcePosition()  -  lineno;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourcePosition()  -  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourcePosition()  -  lineno;	  return    irNode.getSourcePosition();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
306	[BUG]  [BUGGY]  return  irNode.getSourcePosition()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourcePosition()  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourcePosition()  -  1;	  return    irNode.getSourcePosition();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
307	[BUG]  [BUGGY]  return  node.cloneBlock();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneBlock();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneBlock();	  return    irNode.cloneBlock();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
308	[BUG]  [BUGGY]  return  irNode.getBlock();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getBlock();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getBlock();	  return    irNode.cloneBlock();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
309	[BUG]  [BUGGY]  return  irNode.cloneBlock(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneBlock(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneBlock(node);	  return    irNode.cloneBlock();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
310	[BUG]  [BUGGY]  return  irNode.newBlock();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.newBlock();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.newBlock();	  return    irNode.cloneBlock();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
311	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
312	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position1charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position1charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  int  charno  =  position1charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
313	[BUG]  [BUGGY]  return  node.node.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.node.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.node.clone();	  return    irNode.node.clone();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
314	[BUG]  [BUGGY]  return  irNode.node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.node.getParent();	  return    irNode.node.clone();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
315	[BUG]  [BUGGY]  return  irNode.newBlock.clone();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.newBlock.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.newBlock.clone();	  return    irNode.node.clone();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
316	[BUG]  [BUGGY]  return  irNode.node.getLineno();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.node.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.node.getLineno();	  return    irNode.node.clone();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
317	[BUG]  [BUGGY]  return  irNode.node.cloneTree();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.node.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.node.cloneTree();	  return    irNode.node.clone();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
318	[BUG]  [BUGGY]  return  node  ==  null?  null  :  node.getName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node  ==  null?  null  :  node.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node  ==  null?  null  :  node.getName();	  return    node!=    null?    null    :    node.getName();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
319	[BUG]  [BUGGY]  return  irNode!=  null?  null  :  node.getName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode!=  null?  null  :  node.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode!=  null?  null  :  node.getName();	  return    node!=    null?    null    :    node.getName();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
320	[BUG]  [BUGGY]  return  node!=  null?  null  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node!=  null?  null  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node!=  null?  null  :  node.getParent();	  return    node!=    null?    null    :    node.getName();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
321	[BUG]  [BUGGY]  return  node.getSourceName(),  sourceString;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSourceName(),  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSourceName(),  sourceString;	  return    node.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
322	[BUG]  [BUGGY]  return  node.getSourceName(),  lineno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSourceName(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSourceName(),  lineno);	  return    node.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
323	[BUG]  [BUGGY]  return  node.getSourceName()  +  charno;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getSourceName()  +  charno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getSourceName()  +  charno;	  return    node.getSourceName();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
324	[BUG]  [BUGGY]  return  node.getFactory().clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getFactory().clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getFactory().clone();	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
325	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getLineno(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getLineno(),  node.getCharno());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
326	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node);	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
327	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getLineno(),  node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getLineno(),  node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getLineno(),  node.getAbsolutePosition());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
328	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getLineno());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
329	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getLineno(),  irNode.getCharno());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getLineno(),  irNode.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getLineno(),  irNode.getCharno());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
330	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  irNode.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  irNode.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  irNode.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
331	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  irNode.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  irNode.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()  +  1));  irNode.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
332	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno(node.getAbsolutePosition());  irNode.setCharno(irNode.getAbsoluteP  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno(node.getAbsolutePosition());  irNode.setCharno(irNode.getAbsoluteP  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()),  position2charno(node.getAbsolutePosition());  irNode.setCharno(irNode.getAbsoluteP	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
333	[BUG]  [BUGGY]  return  node.clone()?  null  :  node.clone();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()?  null  :  node.clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()?  null  :  node.clone();	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
334	[BUG]  [BUGGY]  return  node.clone()  &&  node.getLineno()!=  -1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getLineno()!=  -1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getLineno()!=  -1);	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
335	[BUG]  [BUGGY]  return  node.clone()  &&  node.getLineno()  ==  -1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getLineno()  ==  -1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getLineno()  ==  -1);	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
336	[BUG]  [BUGGY]  return  node.clone()  &&  node.getCharno()!=  charno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getCharno()!=  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getCharno()!=  charno);	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
337	[BUG]  [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
338	[BUG]  [BUGGY]  Node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
339	[BUG]  [BUGGY]  node.setCharno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setCharno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setCharno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
340	[BUG]  [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
341	[BUG]  [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(irNode.getAbsolutePosition());  node.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
342	[BUG]  [BUGGY]  Node  charno  =  node.getAbsolutePosition();  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node  charno  =  node.getAbsolutePosition();  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node  charno  =  node.getAbsolutePosition();  node.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
343	[BUG]  [BUGGY]  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
344	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  lineno);  node.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
345	[BUG]  [BUGGY]  return  node.cloneTree(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree(irNode);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
346	[BUG]  [BUGGY]  return  irNode.cloneTree(node,  lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneTree(node,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneTree(node,  lineno);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
347	[BUG]  [BUGGY]  return  irNode.cloneTree(node,  false);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneTree(node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneTree(node,  false);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
348	[BUG]  [BUGGY]  return  irNode.cloneTree(node,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneTree(node,  null);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneTree(node,  null);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
349	[BUG]  [BUGGY]  return  irNode.cloneTree(node,  newBlock);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneTree(node,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneTree(node,  newBlock);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
350	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  fileLevelJsDocBuilder;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceName()  +  fileLevelJsDocBuilder;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceName()  +  fileLevelJsDocBuilder;	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
351	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  lineno;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceName()  +  lineno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceName()  +  lineno;	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
352	[BUG]  [BUGGY]  return  irNode.cloneTree(node,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneTree(node,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneTree(node,  fileLevelJsDocBuilder);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
353	[BUG]  [BUGGY]  return  irNode.cloneTree(newBlock);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneTree(newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneTree(newBlock);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
354	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
355	[BUG]  [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno(),  irNode.getCharno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno(),  irNode.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getLineno(irNode.getLineno(),  irNode.getCharno());	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
356	[BUG]  [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getLineno(irNode.getLineno());	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
357	[BUG]  [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getLineno(irNode.getLineno(),  node.getCharno());	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
358	[BUG]  [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno(),  irNode.getCharno()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getLineno(irNode.getLineno(),  irNode.getCharno()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getLineno(irNode.getLineno(),  irNode.getCharno()  +  1;	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
359	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  node);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getSourceName(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getSourceName(),  node);	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
360	[BUG]  [BUGGY]  return  irNode.getAstRootNode(irNode.getSourceName());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(irNode.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(irNode.getSourceName());	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
361	[BUG]  [BUGGY]  return  irNode.getTreeImpl();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getTreeImpl();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getTreeImpl();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
362	[BUG]  [BUGGY]  return  irNode.getTarget();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getTarget();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getTarget();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
363	[BUG]  [BUGGY]  return  irNode.getStd();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getStd();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getStd();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
364	[BUG]  [BUGGY]  return  irNode.getLineno()  /  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  /  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  /  1;	  return    irNode.getLineno()    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
365	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
366	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
367	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
368	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  irNode.setCharno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  irNode.setCharno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  irNode.setCharno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
369	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition()  +  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition()  +  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition()  +  1);	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
370	[BUG]  [BUGGY]  return  irNode.getAstRootNode(sourceString,  node);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(sourceString,  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(sourceString,  node);	  return    irNode.getAstRootNode(sourceString);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
371	[BUG]  [BUGGY]  return  irNode.getAstRootNode(sourceString,  sourceName);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(sourceString,  sourceName);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(sourceString,  sourceName);	  return    irNode.getAstRootNode(sourceString);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
372	[BUG]  [BUGGY]  return  sourceString.getAstRootNode(irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  sourceString.getAstRootNode(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  sourceString.getAstRootNode(irNode);	  return    irNode.getAstRootNode(sourceString);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
373	[BUG]  [BUGGY]  if(position2charno(node.getAbsolutePosition())!=  0)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(position2charno(node.getAbsolutePosition())!=  0)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(position2charno(node.getAbsolutePosition())!=  0)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
374	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
375	[BUG]  [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(irNode.getAbsolutePosition());  irNode.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
376	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }  else  {  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }  else  {  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setLineno(charno);  }  else  {	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
377	[BUG]  [BUGGY]  return  node.getAstRootNode(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(node.getAbsolutePosition());	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
378	[BUG]  [BUGGY]  return  node.getAstRootNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(node.getLineno());	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
379	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode,  irNode);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode,  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode,  irNode);	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
380	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode,  lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode,  lineno);	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
381	[BUG]  [BUGGY]  return  irNode.replaceChild(node,  newBlock);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.replaceChild(node,  newBlock);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.replaceChild(node,  newBlock);	  return    irNode.removeFirstChild();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
382	[BUG]  [BUGGY]  return  irNode.getValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getValue();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getValue();	  return    irNode.getString();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
383	[BUG]  [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  node.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  node.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.FUNCTION?  node.getFirstChild()  :  node.getLastChild();	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
384	[BUG]  [BUGGY]  if(position2charno(node.getAbsolutePosition())!=  0)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(position2charno(node.getAbsolutePosition())!=  0)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(position2charno(node.getAbsolutePosition())!=  0)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
385	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
386	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
387	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
388	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  irNode.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  irNode.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition())+  1);  irNode.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
389	[BUG]  [BUGGY]  return  irNode.getLastChild()  +  4;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild()  +  4;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild()  +  4;	  return    irNode.getLastChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
390	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getLastChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
391	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()  ==  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()  ==  irNode.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()  ==  irNode.getAbsolutePosition();	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
392	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()!=  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()!=  irNode.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()!=  irNode.getAbsolutePosition();	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
393	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()!=  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()!=  0;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getAbsolutePosition()!=  0;	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
394	[BUG]  [BUGGY]  return  irNode.node.remove();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.node.remove();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.node.remove();	  return    irNode.node.clone();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
395	[BUG]  [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  null  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.FUNCTION?  null  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.FUNCTION?  null  :  node.getFirstChild();	  return    node.getType()    ==    Token.FUNCTION?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
396	[BUG]  [BUGGY]  return  irNode.cloneFollowNode();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneFollowNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneFollowNode();	  return    irNode.clonePosition();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
397	[BUG]  [BUGGY]  return  irNode.getAstRootNode(irNode.getFirstChild());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(irNode.getFirstChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(irNode.getFirstChild());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
398	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getFirstChild(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getFirstChild(),  node.getCharno());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
399	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
400	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getSourceString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getSourceString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  null  :  node.getSourceString();	  return    node.getType()    ==    Token.STRING?    null    :    node.getCharno();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
401	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  null  :  node.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  null  :  node.getAbsolutePosition();	  return    node.getType()    ==    Token.STRING?    null    :    node.getCharno();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
402	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  node.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  node.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  -  1);  node.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
403	[BUG]  [BUGGY]  Node  node  =  node.getLineno();  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node  node  =  node.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node  node  =  node.getLineno();	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
404	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
405	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(position2charno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
406	[BUG]  [BUGGY]  return  irNode.getInitialValue();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getInitialValue();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getInitialValue();	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
407	[BUG]  [BUGGY]  return  irNode.getInitialCharno();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getInitialCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getInitialCharno();	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
408	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  position2charno(lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  position2charno(lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  position2charno(lineno);	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
409	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  lineno,  sourceString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  lineno,  sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  lineno,  sourceString);	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
410	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
411	[BUG]  [BUGGY]  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setCharno(charno);	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
412	[BUG]  [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
413	[BUG]  [BUGGY]  node.setLineno(irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setLineno(irNode.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setLineno(irNode.getLineno());	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
414	[BUG]  [BUGGY]  return  NodeUtil.getAstRootNode(irNode.getAstRootNode());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getAstRootNode(irNode.getAstRootNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getAstRootNode(irNode.getAstRootNode());	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
415	[BUG]  [BUGGY]  return  NodeUtil.getAstRootNode(irNode,  irNode.getAstRootNode());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getAstRootNode(irNode,  irNode.getAstRootNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getAstRootNode(irNode,  irNode.getAstRootNode());	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
416	[BUG]  [BUGGY]  return  NodeUtil.getAstRootNode(irNode,  node.getAstRootNode());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getAstRootNode(irNode,  node.getAstRootNode());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getAstRootNode(irNode,  node.getAstRootNode());	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
417	[BUG]  [BUGGY]  return  NodeUtil.getAstRootNode(irNode).getAstRootNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getAstRootNode(irNode).getAstRootNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getAstRootNode(irNode).getAstRootNode();	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
418	[BUG]  [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()!=  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()!=  irNode.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getAbsolutePosition()!=  irNode.getAbsolutePosition();	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
419	[BUG]  [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()  ==  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()  ==  irNode.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getAbsolutePosition()  ==  irNode.getAbsolutePosition();	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
420	[BUG]  [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()  >=  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()  >=  irNode.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getAbsolutePosition()  >=  irNode.getAbsolutePosition();	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
421	[BUG]  [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()!=  irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getAbsolutePosition()!=  irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getAbsolutePosition()!=  irNode.getAbsolutePosition());	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
422	[BUG]  [BUGGY]  return  irNode.getLastChild(),  lineno,  node.getCharno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild(),  lineno,  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild(),  lineno,  node.getCharno());	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
423	[BUG]  [BUGGY]  return  irNode.getLastChild(),  lineno  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild(),  lineno  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild(),  lineno  +  1;	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
424	[BUG]  [BUGGY]  return  node.cloneTree(),  irNode;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree(),  irNode;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree(),  irNode;	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
425	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  node.getLength());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getLineno(),  node.getLength());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getLineno(),  node.getLength());	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
426	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(node.getAbsolutePosition(),  node);	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
427	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.getLineno());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.getLineno());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
428	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.getCharno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  irNode.getCharno());	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
429	[BUG]  [BUGGY]  return  irNode.cloneAstNode(sourceString);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneAstNode(sourceString);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneAstNode(sourceString);	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
430	[BUG]  [BUGGY]  return  irNode.cloneAstNode(false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.cloneAstNode(false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.cloneAstNode(false);	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
431	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP,  fileLevelJsDocBuilder);	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
432	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP,  node.getLineno());	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
433	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getAbsolutePosition());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
434	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node,  false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node,  false);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node,  false);	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
435	[BUG]  [BUGGY]  Node  node  =  node.getAstRoot(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node  node  =  node.getAstRoot(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node  node  =  node.getAstRoot(node.getAbsolutePosition());	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
436	[BUG]  [BUGGY]  Node  node  =  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node  node  =  node.getAstRootNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node  node  =  node.getAstRootNode();	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
437	[BUG]  [BUGGY]  return  irNode.getSourcePosition()  +  sourceString;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourcePosition()  +  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourcePosition()  +  sourceString;	  return    irNode.getSourcePosition();    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
438	[BUG]  [BUGGY]  return  NodeUtil.getSourceName(irNode.getSourceName());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getSourceName(irNode.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getSourceName(irNode.getSourceName());	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
439	[BUG]  [BUGGY]  return  NodeUtil.getSourceName(irNode.getSourcePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  NodeUtil.getSourceName(irNode.getSourcePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  NodeUtil.getSourceName(irNode.getSourcePosition());	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
440	[BUG]  [BUGGY]  return  irNode.getNumber()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getNumber()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getNumber()  +  1;	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
441	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  Node.GETPROP  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  Node.GETPROP  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  Node.GETPROP  :  node.getParent();	  return    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
442	[BUG]  [BUGGY]  return  irNode.secondChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.secondChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.secondChild();	  return    irNode.firstChild();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
443	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition()  -  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition()  -  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getAbsolutePosition()  -  1);	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
444	[BUG]  [BUGGY]  return  irNode.getAstRootNode(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(irNode.getAbsolutePosition());	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
445	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  fileLevelJsDocBuilder);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCENAME_PROP,  fileLevelJsDocBuilder);	  return    irNode.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
446	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  node.getLineno());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCENAME_PROP,  node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCENAME_PROP,  node.getLineno());	  return    irNode.getProp(Node.SOURCENAME_PROP);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
447	[BUG]  [BUGGY]  return  irNode.getLastChild().getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild().getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild().getFirstChild();	  return    irNode.getLastChild().getNext();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
448	[BUG]  [BUGGY]  For(Node  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  For(Node  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	For(Node  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }	  for(AstNode    irNode    :    nodes.values())    {    if(irNode.getLineno()    ==    -1)    {    return    irNode.getLineno();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
449	[BUG]  [BUGGY]  for(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getCharno();  }  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  for(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getCharno();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	for(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getCharno();  }	  for(AstNode    irNode    :    nodes.values())    {    if(irNode.getLineno()    ==    -1)    {    return    irNode.getLineno();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
450	[BUG]  [BUGGY]  return  node.getType()  ==  Token.STRING?  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.STRING?  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.STRING?  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
451	[BUG]  [BUGGY]  return  irNode!=  null?  null  :  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode!=  null?  null  :  irNode.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode!=  null?  null  :  irNode.getAbsolutePosition();	  return    node!=    null?    null    :    node.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
452	[BUG]  [BUGGY]  return  irNode  ==  null?  null  :  node.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode  ==  null?  null  :  node.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode  ==  null?  null  :  node.getAbsolutePosition();	  return    node!=    null?    null    :    node.getAbsolutePosition();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
453	[BUG]  [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()));  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setLineno(lineno);  irNode.setCharno(position2charno(node.getAbsolutePosition()));	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
454	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
455	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
456	[BUG]  [BUGGY]  return  node.getInitialValue();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getInitialValue();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getInitialValue();	  return    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
457	[BUG]  [BUGGY]  return  irNode.removeAstNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.removeAstNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.removeAstNode();	  return    irNode.cloneAstNode();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
458	[BUG]  [BUGGY]  return  irNode.getLineno()  -  lineno  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  -  lineno  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  -  lineno  -  1;	  return    irNode.getLineno()    -    lineno;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
459	[BUG]  [BUGGY]  return  irNode.getParent().removeChild(irNode);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getParent().removeChild(irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getParent().removeChild(irNode);	  return    irNode.removeChild(irNode);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
460	[BUG]  [BUGGY]  return  irNode.toString()  + ": "  +  irNode.toString();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.toString()  + ": "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.toString()  + ": "  +  irNode.toString();	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
461	[BUG]  [BUGGY]  return  irNode.toString()  + ": "  +  node.toString();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.toString()  + ": "  +  node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.toString()  + ": "  +  node.toString();	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
462	[BUG]  [BUGGY]  return  irNode.toString()  + ", "  +  irNode.toString();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.toString()  + ", "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.toString()  + ", "  +  irNode.toString();	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
463	[BUG]  [BUGGY]  return  irNode.toString()  + "_ "  +  irNode.toString();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.toString()  + "_ "  +  irNode.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.toString()  + "_ "  +  irNode.toString();	  return    irNode.toString();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
464	[BUG]  [BUGGY]  return  irNode.getName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getName();	  return    irNode.getString();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
465	[BUG]  [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  null  :  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getAstRootNode()  ==  null)?  null  :  irNode.getAstRootNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getAstRootNode()  ==  null)?  null  :  irNode.getAstRootNode();	  return    irNode.getAstRootNode()    +    1;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
466	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsoluteP  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsoluteP  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsoluteP	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
467	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
468	[BUG]  [BUGGY]  node.setCharno(position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setCharno(position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setCharno(position2charno(node.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
469	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsoluteP  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsoluteP  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsoluteP	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
470	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  node.setCharno(position2charno(node.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
471	[BUG]  [BUGGY]  return  irNode.node.toString();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.node.toString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.node.toString();	  return    irNode.node.clone();    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
472	[BUG]  [BUGGY]  return  irNode.getFunctionName();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFunctionName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFunctionName();	  return    irNode.cloneFunction();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
473	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getFirstChild()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
474	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getString()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.VAR?  irNode.getString()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.VAR?  irNode.getString()  :  node.getParent();	  return    irNode.getType()    ==    Token.VAR?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
475	[BUG]  [BUGGY]  return  irNode.getAstRoot(node.getCharno());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRoot(node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRoot(node.getCharno());	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
476	[BUG]  [BUGGY]  return  irNode.getAstRoot(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRoot(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRoot(node.getAbsolutePosition());	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
477	[BUG]  [BUGGY]  return  irNode.getAstRoot(node.getLineno());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRoot(node.getLineno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRoot(node.getLineno());	  return    irNode.getCharno();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
478	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME  &&  irNode.getLastChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
479	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()!=  Token.NAME?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.NAME?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
480	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getName());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getName());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
481	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getSourceName());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getSourceName());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getSourceName());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
482	[BUG]  [BUGGY]  return  irNode.getFactory().transform(node.getString());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().transform(node.getString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().transform(node.getString());	  return    irNode.getFactory().clone();    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
483	[BUG]  [BUGGY]  Pentru(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Pentru(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Pentru(AstNode  irNode  :  nodes.values())  {  if(irNode.getLineno()  ==  -1)  {  return  irNode.getLineno();  }	  for(AstNode    irNode    :    nodes.values())    {    if(irNode.getLineno()    ==    -1)    {    return    irNode.getLineno();    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
484	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  node);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  node);	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
485	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  irNode);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  irNode);	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
486	[BUG]  [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  lineno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFactory().createAstNode(irNode.getAbsolutePosition(),  lineno);	  return    irNode.getFactory().createAstNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
487	[BUG]  [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  irNode.setCharno(position2charno(node.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	irNode.setCharno(position2charno(node.getAbsolutePosition());	  irNode.setLineno(lineno);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
488	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  irNode);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  irNode);	  int    charno    =    position2charno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
489	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  irNode.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
490	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  0);  irNode.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition(),  0);  irNode.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition(),  0);  irNode.setCharno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
491	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getCharno();	  return    node.getType()    ==    Token.STRING?    null    :    node.getCharno();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
492	[BUG]  [BUGGY]  return  node.getType()!=  Token.STRING?  null  :  node.getCharno();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()!=  Token.STRING?  null  :  node.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()!=  Token.STRING?  null  :  node.getCharno();	  return    node.getType()    ==    Token.STRING?    null    :    node.getCharno();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
493	[BUG]  [BUGGY]  return  node.getType()  ==  Token.NAME?  this  :  node.getType();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.NAME?  this  :  node.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.NAME?  this  :  node.getType();	  return    node.getType()    ==    Token.NAME?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
494	[BUG]  [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  fileOverviewInfo);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getProp(Node.SOURCEFILE_PROP,  fileOverviewInfo);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getProp(Node.SOURCEFILE_PROP,  fileOverviewInfo);	  return    irNode.getProp(Node.SOURCEFILE_PROP);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
495	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()!=  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()!=  Token.NAME?  node.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    node.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
496	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getFirstChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.NAME?    node.getFirstChild()    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
497	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getLineno()  :  irNode.getAbsolutePosition();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getLineno()  :  irNode.getAbsolutePosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getLineno()  :  irNode.getAbsolutePosition();	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
498	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getString()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getString()  :  null;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getString()  :  null;	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
499	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getLineno()  :  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getLineno()  :  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT?  irNode.getLineno()  :  irNode.getCharno();	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
500	[BUG]  [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getCharno()  ==  charno;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getCharno()  ==  charno;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.EXPR_RESULT  ||  node.getCharno()  ==  charno;	  return    node.getType()    ==    Token.EXPR_RESULT;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
501	[BUG]  [BUGGY]  if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
502	[BUG]  [BUGGY]  if(position2charno!=  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(position2charno!=  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(position2charno!=  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
503	[BUG]  [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(irNode.getAbsoluteP	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
504	[BUG]  [BUGGY]  return  node.getType()  ==  Token.BLOCK;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getType()  ==  Token.BLOCK;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getType()  ==  Token.BLOCK;	  return    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
505	[BUG]  [BUGGY]  return  node.clone()  &&  node.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getFirstChild().getType()  ==  Token.EXPR_RESULT;	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
506	[BUG]  [BUGGY]  return  node.getFirstChild().clone();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getFirstChild().clone();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getFirstChild().clone();	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
507	[BUG]  [BUGGY]  return  node.clone()  &&  node.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.clone()  &&  node.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.clone()  &&  node.getFirstChild().getType()  ==  Token.FUNCTION;	  return    node.clone();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
508	[BUG]  [BUGGY]  Node  node  =  node.getCharno();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Node  node  =  node.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Node  node  =  node.getCharno();	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
509	[BUG]  [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()!=  -1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()!=  -1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  ||  irNode.getCharno()!=  -1);	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
510	[BUG]  [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()  ==  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()  ==  -1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  ||  irNode.getCharno()  ==  -1);	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
511	[BUG]  [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()!=  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()!=  0;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  ||  irNode.getCharno()!=  0;	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
512	[BUG]  [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()  ==  -1)  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  ||  irNode.getCharno()  ==  -1)  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  ||  irNode.getCharno()  ==  -1)	  return    irNode.getLineno()    +    1;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
513	[BUG]  [BUGGY]  return  irNode.getTree().cloneTree(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getTree().cloneTree(node);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getTree().cloneTree(node);	  return    irNode.cloneTree(node);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
514	[BUG]  [BUGGY]  return  irNode.getAstRootNode(),  node,  lineno);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(),  node,  lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(),  node,  lineno);	  return    irNode.getAstRootNode(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
515	[BUG]  [BUGGY]  return  irNode.getAstRootNode(irNode.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(irNode.getLineno(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(irNode.getLineno(),  node.getCharno());	  return    irNode.getAstRootNode(node.getLineno());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
516	[BUG]  [BUGGY]  return  irNode.getType()!=  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()!=  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()!=  Token.VAR?  irNode.getFirstChild()  :  node.getLastChild();	  return    irNode.getType()    ==    Token.VAR?    irNode.getFirstChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
517	[BUG]  [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(charno  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(charno  ==  -1)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
518	[BUG]  [BUGGY]  if(charno  ==  0)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(charno  ==  0)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(charno  ==  0)  {  irNode.setLineno(lineno);  node.setCharno(position2charno(node.getAbsolutePosition()));  }	  irNode.setLineno(lineno);    node.setCharno(position2charno(node.getAbsolutePosition()));    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
519	[BUG]  [BUGGY]  if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  else  {  return  null;  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
520	[BUG]  [BUGGY]  if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
521	[BUG]  [BUGGY]  return(node.getFirstChild()  ==  node)?  irNode.getFirstChild()  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(node.getFirstChild()  ==  node)?  irNode.getFirstChild()  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(node.getFirstChild()  ==  node)?  irNode.getFirstChild()  :  node.getLastChild();	  return    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
522	[BUG]  [BUGGY]  return(node.getFirstChild()  ==  null)?  null  :  node.getLastChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(node.getFirstChild()  ==  null)?  null  :  node.getLastChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(node.getFirstChild()  ==  null)?  null  :  node.getLastChild();	  return    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
523	[BUG]  [BUGGY]  return(node.getFirstChild()!=  null)?  irNode.getLastChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(node.getFirstChild()!=  null)?  irNode.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(node.getFirstChild()!=  null)?  irNode.getLastChild()  :  node.getFirstChild();	  return    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
524	[BUG]  [BUGGY]  return(node.getFirstChild()  ==  node)?  irNode.getLastChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(node.getFirstChild()  ==  node)?  irNode.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(node.getFirstChild()  ==  node)?  irNode.getLastChild()  :  node.getFirstChild();	  return    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
525	[BUG]  [BUGGY]  return  irNode.getFunctionTree();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getFunctionTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getFunctionTree();	  return    irNode.getTree();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
526	[BUG]  [BUGGY]  return  irNode.getLastChild(),  this.lineno);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLastChild(),  this.lineno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLastChild(),  this.lineno);	  return    irNode.getLastChild(),    lineno);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
527	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
528	[BUG]  [BUGGY]  if(node.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()  ==  -1)  {  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
529	[BUG]  [BUGGY]  if(node.getAbsolutePosition()!=  0)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getAbsolutePosition()!=  0)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getAbsolutePosition()!=  0)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
530	[BUG]  [BUGGY]  if(node.getAbsolutePosition()  ==  0)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getAbsolutePosition()  ==  0)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getAbsolutePosition()  ==  0)  {  int  charno  =  position2charno(node.getAbsolutePosition());  node.setLineno(charno);  }	  int    charno    =    position2charno(node.getAbsolutePosition());    node.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
531	[BUG]  [BUGGY]  return  irNode.getNext()  ||  node.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getNext()  ||  node.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getNext()  ||  node.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno();	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
532	[BUG]  [BUGGY]  return  irNode.getNext()  ||  node.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getNext()  ||  node.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getNext()  ||  node.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getCharno();	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
533	[BUG]  [BUGGY]  return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getLineno();	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
534	[BUG]  [BUGGY]  return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getLineno()  :  irNode.getCharno();	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
535	[BUG]  [BUGGY]  return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getCharno()  :  irNode.getString();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getCharno()  :  irNode.getString();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getNext()  ||  irNode.getLineno()  ==  -1)?  irNode.getCharno()  :  irNode.getString();	  return    irNode.getNext()    +    1;    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
536	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getLineno();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getLineno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  null  :  irNode.getLineno();	  return    node.getType()    ==    Token.STRING?    null    :    node.getLineno();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
537	[BUG]  [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  irNode.setLineno(charno);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  irNode.setLineno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  irNode.setLineno(charno);	  int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setLineno(charno);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
538	[BUG]  [BUGGY]  return  irNode.getPosition();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getPosition();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getPosition();	  return    irNode.clonePosition();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
539	[BUG]  [BUGGY]  if(node.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(node.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(node.getLineno()!=  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    irNode.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
540	[BUG]  [BUGGY]  return(irNode.getSourceName()  ==  null)?  null  :  irNode.getSourceName();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()  ==  null)?  null  :  irNode.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()  ==  null)?  null  :  irNode.getSourceName();	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
541	[BUG]  [BUGGY]  return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  node.getSourceName();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  node.getSourceName();	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
542	[BUG]  [BUGGY]  return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  sourceString;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  sourceString;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return(irNode.getSourceName()  ==  null)?  irNode.getSourceName()  :  sourceString;	  return    irNode.getSourceName()    +    1;    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
543	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  position2charno);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getAbsolutePosition(),  position2charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getAbsolutePosition(),  position2charno);	  return    irNode.getAstRootNode(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
544	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  node.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.STRING?  irNode.getLastChild()  :  node.getFirstChild();	  return    irNode.getType()    ==    Token.STRING?    irNode.getLastChild()    :    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
545	[BUG]  [BUGGY]  return  node.getAstRootNode(),  irNode.getLineno(),  irNode.getCharno());  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(),  irNode.getLineno(),  irNode.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(),  irNode.getLineno(),  irNode.getCharno());	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
546	[BUG]  [BUGGY]  return  node.getAstRootNode(irNode.getLineno(),  irNode.getCharno());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(irNode.getLineno(),  irNode.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(irNode.getLineno(),  irNode.getCharno());	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
547	[BUG]  [BUGGY]  return  node.getAstRootNode(node.getLineno(),  node.getCharno());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(node.getLineno(),  node.getCharno());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(node.getLineno(),  node.getCharno());	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
548	[BUG]  [BUGGY]  return  node.getAstRootNode(),  irNode.getLineno(),  irNode.getCharno();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.getAstRootNode(),  irNode.getLineno(),  irNode.getCharno();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.getAstRootNode(),  irNode.getLineno(),  irNode.getCharno();	  return    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
549	[BUG]  [BUGGY]  Integer  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  Integer  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	Integer  charno  =  position2charno(node.getAbsolutePosition());  node.setCharno(charno);	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
550	[BUG]  [BUGGY]  if(irNode.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  node.setCharno(charno);  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(irNode.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  node.setCharno(charno);  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(irNode.getLineno()  ==  -1)  {  int  charno  =  position2charno(node.getAbsolutePosition()  +  1);  node.setCharno(charno);  }	  if(irNode.getLineno()    ==    -1)    {    int    charno    =    position2charno(node.getAbsolutePosition());    node.setCharno(charno);    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
551	[BUG]  [BUGGY]  node.setCharno(irNode.getAbsolutePosition());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  node.setCharno(irNode.getAbsolutePosition());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	node.setCharno(irNode.getAbsolutePosition());	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    node.setCharno(irNode.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
552	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  null  :  irNode.getType();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.FUNCTION?  null  :  irNode.getType();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.FUNCTION?  null  :  irNode.getType();	  return    node.getType()    ==    Token.FUNCTION?    null    :    node.getType();    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
553	[BUG]  [BUGGY]  return  irNode.getLineno()  +  lineno  -  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getLineno()  +  lineno  -  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getLineno()  +  lineno  -  1;	  return    irNode.getLineno()    +    lineno;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
554	[BUG]  [BUGGY]  return  irNode.getSourceName()  +  sourceString,  charno);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getSourceName()  +  sourceString,  charno);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getSourceName()  +  sourceString,  charno);	  return    irNode.getSourceName()    +    sourceString;    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
555	[BUG]  [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getType()  ==  Token.NAME?  irNode.getString()  :  node.getParent();	  return    irNode.getType()    ==    Token.NAME?    irNode.getParent()    :    node.getParent();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
556	[BUG]  [BUGGY]  return  irNode.getImmediateParentNode();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getImmediateParentNode();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getImmediateParentNode();	  return    irNode.getPrevious();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
557	[BUG]  [BUGGY]  return  node.cloneTree()?  null  :  node.cloneTree();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree()?  null  :  node.cloneTree();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree()?  null  :  node.cloneTree();	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
558	[BUG]  [BUGGY]  return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.EXPR_RESULT;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.EXPR_RESULT;	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
559	[BUG]  [BUGGY]  return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.FUNCTION;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.FUNCTION;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.FUNCTION;	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
560	[BUG]  [BUGGY]  return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.THIS;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.THIS;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node.cloneTree()  &&  node.getFirstChild().getType()  ==  Token.THIS;	  return    node.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
561	[BUG]  [BUGGY]  return  irNode.getAstRootNode(irNode.getLastChild());  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(irNode.getLastChild());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(irNode.getLastChild());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
562	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getString());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getString());  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getString());	  return    irNode.getAstRootNode(node.getFirstChild());    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
563	[BUG]  [BUGGY]  return  node!=  null?  null  :  node.getLocalName();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node!=  null?  null  :  node.getLocalName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node!=  null?  null  :  node.getLocalName();	  return    node!=    null?    null    :    node.getName();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
564	[BUG]  [BUGGY]  return  node!=  null?  null  :  node.getSourceName();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  node!=  null?  null  :  node.getSourceName();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  node!=  null?  null  :  node.getSourceName();	  return    node!=    null?    null    :    node.getName();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
565	[BUG]  [BUGGY]  return  irNode!=  null?  null  :  irNode.getFirstChild();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode!=  null?  null  :  irNode.getFirstChild();  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode!=  null?  null  :  irNode.getFirstChild();	  return    node!=    null?    null    :    node.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
566	[BUG]  [BUGGY]  if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
567	[BUG]  [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsolutePosition());  }	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
568	[BUG]  [BUGGY]  if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsoluteP  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsoluteP  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	if(position2charno  ==  node.getAbsolutePosition())  {  irNode.setLineno(position2charno(node.getAbsolutePosition()));  irNode.setCharno(node.getAbsoluteP	  irNode.setLineno(position2charno(node.getAbsolutePosition()));    irNode.setCharno(node.getAbsolutePosition());    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
569	[BUG]  [BUGGY]  return  irNode.getAstRootNode(node.getSourceName()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.getAstRootNode(node.getSourceName()  +  1);  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.getAstRootNode(node.getSourceName()  +  1);	  return    irNode.getAstRootNode(node.getSourceName());    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
570	[BUG]  [BUGGY]  return  irNode.removeFirstChild()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  }      [BUGGY]  return  irNode.removeFirstChild()  +  1;  [BUGGY]      }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	228	228	1	replace	return  irNode.removeFirstChild()  +  1;	  return    irNode.getLastChild()    +    1;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
