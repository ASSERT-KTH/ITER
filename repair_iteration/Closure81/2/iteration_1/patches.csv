bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  irNode.setCharno(irNode.getLastChild().getLineno());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getLastChild().getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getLastChild().getLineno());	  irNode.setCharno(irNode.getLastChild().getCharno());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
2	[BUG]  [BUGGY]  irNode.setCharno(irNode.getLastChild(),  irNode.getCharno());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getLastChild(),  irNode.getCharno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getLastChild(),  irNode.getCharno());	  irNode.setCharno(irNode.getLastChild().getCharno());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
3	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLastChild().getCharno());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getLastChild().getCharno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getLastChild().getCharno());	  irNode.setLineno(irNode.getLastChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
4	[BUG]  [BUGGY]  irNode.setLineno(jsDocInfo.getLastChild().getLineno());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(jsDocInfo.getLastChild().getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(jsDocInfo.getLastChild().getLineno());	  irNode.setLineno(irNode.getLastChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
5	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLastChild().getLineno(),  irNode.getCharno());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getLastChild().getLineno(),  irNode.getCharno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getLastChild().getLineno(),  irNode.getCharno());	  irNode.setLineno(irNode.getLastChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
6	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLastChild().getString());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getLastChild().getString());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getLastChild().getString());	  irNode.setLineno(irNode.getLastChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
7	[BUG]  [BUGGY]  irNode.setLineno(jsDocInfo.getFirstChild().getLineno());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(jsDocInfo.getFirstChild().getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(jsDocInfo.getFirstChild().getLineno());	  irNode.setLineno(irNode.getFirstChild().getCharno());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
8	[BUG]  [BUGGY]  irNode.setLineno(irNode.getFirstChild().getString());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getFirstChild().getString());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getFirstChild().getString());	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
9	[BUG]  [BUGGY]  jsDocInfo.setLineno(irNode.getFirstChild().getLineno());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  jsDocInfo.setLineno(irNode.getFirstChild().getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	jsDocInfo.setLineno(irNode.getFirstChild().getLineno());	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
10	[BUG]  [BUGGY]  jsDocInfo.setLineno(irNode.getLastChild().getLineno());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  jsDocInfo.setLineno(irNode.getLastChild().getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	jsDocInfo.setLineno(irNode.getLastChild().getLineno());	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
11	[BUG]  [BUGGY]  irNode.setCharno(irNode.getFirstChild(),  irNode.getLineno());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getFirstChild(),  irNode.getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getFirstChild(),  irNode.getLineno());	  irNode.setCharno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
12	[BUG]  [BUGGY]  irNode.setCharno(irNode.getFirstChild(),  node.getLineno());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getFirstChild(),  node.getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getFirstChild(),  node.getLineno());	  irNode.setCharno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
13	[BUG]  [BUGGY]  irNode.setLineno(irNode.getFirstChild().getLineno()  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getFirstChild().getLineno()  +  1);  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getFirstChild().getLineno()  +  1);	  irNode.setLineno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
14	[BUG]  [BUGGY]  irNode.setCharno(irNode.getLastChild(),  node.getCharno());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getLastChild(),  node.getCharno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getLastChild(),  node.getCharno());	  irNode.setCharno(irNode.getLastChild().getCharno());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
15	[BUG]  [BUGGY]  irNode.setCharno(irNode.getLastChild().getString());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getLastChild().getString());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getLastChild().getString());	  irNode.setCharno(irNode.getLastChild().getCharno());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
16	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLastChild().getLineno()  +  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getLastChild().getLineno()  +  1);  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getLastChild().getLineno()  +  1);	  irNode.setLineno(irNode.getLastChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
17	[BUG]  [BUGGY]  irNode.setCharno(irNode,  node.getFirstChild().getLineno());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode,  node.getFirstChild().getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode,  node.getFirstChild().getLineno());	  irNode.setCharno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
18	[BUG]  [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getLastChil  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getLastChil  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getLastChil	      	non-compiled	[CE]  ')'  expected	5	None	replace
19	[BUG]  [BUGGY]  irNode.setLineno(irNode.getFirstChild().getLineno());  node.setCharno(irNode.getAbsolutePosition());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getFirstChild().getLineno());  node.setCharno(irNode.getAbsolutePosition());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getFirstChild().getLineno());  node.setCharno(irNode.getAbsolutePosition());	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
20	[BUG]  [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getFirstChild  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getFirstChild  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getFirstChild	      	non-compiled	[CE]  ')'  expected	5	None	replace
21	[BUG]  [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getLastChild  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getLastChild  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	if(irNode.getType()  ==  Token.FUNCTION)  {  irNode.setLineno(irNode.getFirstChild().getLineno());  }  else  {  irNode.setLineno(irNode.getLastChild	      	non-compiled	[CE]  ')'  expected	5	None	replace
22	[BUG]  [BUGGY]  irNode.setCharno(irNode.getFirstChild().getString());  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getFirstChild().getString());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getFirstChild().getString());	  irNode.setCharno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  ';'  expected	3	None	replace
23	[BUG]  [BUGGY]  irNode.setCharno(irNode.getFirstChild().getSourceName());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode.getFirstChild().getSourceName());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode.getFirstChild().getSourceName());	  irNode.setCharno(irNode.getFirstChild().getLineno());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
24	[BUG]  [BUGGY]  irNode.setCharno(irNode,  irNode.getLastChild().getCharno());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(irNode,  irNode.getLastChild().getCharno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(irNode,  irNode.getLastChild().getCharno());	  irNode.setCharno(irNode.getLastChild().getCharno());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
25	[BUG]  [BUGGY]  irNode.setCharno(jsDocInfo.getLastChild().getCharno());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setCharno(jsDocInfo.getLastChild().getCharno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setCharno(jsDocInfo.getLastChild().getCharno());	  irNode.setCharno(irNode.getLastChild().getCharno());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
26	[BUG]  [BUGGY]  irNode.setLineno(jsDocInfo.getLineno());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(jsDocInfo.getLineno());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(jsDocInfo.getLineno());	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
27	[BUG]  [BUGGY]  irNode.setLineno(irNode.getLastChild());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    JSDocInfo  jsDocInfo  =  handleJsDoc(node);  Node  irNode  =  justTransform(node);  if  (jsDocInfo  !=  null)  {  irNode.setJSDocInfo(jsDocInfo);  }  if  (irNode.getType()  ==  Token.FUNCTION  &&  irNode.getFirstChild().getLineno()  !=  -1)  {  irNode.setLineno(irNode.getFirstChild().getLineno());    [BUGGY]  irNode.setLineno(irNode.getLastChild());  [BUGGY]    }  else  {  if  (irNode.getLineno()  ==  -1)  {    int  lineno  =  node.getLineno();  irNode.setLineno(lineno);  int  charno  =  position2charno(node.getAbsolutePosition());  irNode.setCharno(charno);  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transform  [RETURN_TYPE]  Node  AstNode  node  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  AstNode  node  int  charno  lineno  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.2581988897471611	216	216	1	replace	irNode.setLineno(irNode.getLastChild());	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
