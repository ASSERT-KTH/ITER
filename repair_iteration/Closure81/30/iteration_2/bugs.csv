bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Comment  comment  =  irNode.getComment();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  irNode.getComment();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  irNode.getComment();	  Comment    comment    =    node.getComment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
2	[BUG]  [BUGGY]  Comment  comment  =  node.getParent();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getParent();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getParent();	  Comment    comment    =    node.getComment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getCommentInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getCommentInfo();	  Comment    comment    =    node.getComment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  Comment  comment  =  node.getComment(),  false);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getComment(),  false);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getComment(),  false);	  Comment    comment    =    node.getComment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstNode();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  irNode.getAstNode();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  irNode.getAstNode();	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(),  false);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(),  false);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  null);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(),  null);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(),  null);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
8	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  config);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(),  config);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(),  config);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(),  true);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(),  true);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(),  true);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
10	[BUG]  [BUGGY]  Comment  comment  =  node.getNext();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getNext();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getNext();	  Comment    comment    =    node.getParentNode();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  Comment  comment  =  irNode.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  irNode.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  irNode.getJSDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  null;  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  null  :  node.getJSDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  Comment  comment  =  node.getCurrentComment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getCurrentComment();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getCurrentComment();	  Comment    comment    =    node.getCurrentNode();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  JsDocInfoParser  comment  =  createJsDocInfoParser(node);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	JsDocInfoParser  comment  =  createJsDocInfoParser(node);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  Node  comment  =  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Node  comment  =  node.getAstRootNode();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Node  comment  =  node.getAstRootNode();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  JSDocInfo  comment  =  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  JSDocInfo  comment  =  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	JSDocInfo  comment  =  node.getJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  JsDocInfoParser  comment  =  createJSDocInfoParser(node);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	JsDocInfoParser  comment  =  createJSDocInfoParser(node);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  Node  comment  =  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Node  comment  =  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Node  comment  =  node.getJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  JsDocInfoParser  comment  =  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  JsDocInfoParser  comment  =  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	JsDocInfoParser  comment  =  node.getJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
21	[BUG]  [BUGGY]  AstNode  comment  =  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  AstNode  comment  =  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	AstNode  comment  =  node.getJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  Comment  comment  =  irNode.getAstRootNode();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  irNode.getAstRootNode();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  irNode.getAstRootNode();	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  false);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(),  false);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(),  false);	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(true);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(true);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(true);	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(),  null);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(),  null);	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
26	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(node);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(node);	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(),  config);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(),  config);	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
28	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getType()  ==  Token.GETPROP?  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
29	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  node.getJSDocInfo();	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
30	[BUG]  [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  null;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  null;  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getType()  ==  Token.NAME?  node.getJSDocInfo()  :  null;	  Comment    comment    =    node.getJSDocInfo();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
31	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentNode();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getCommentNode();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getCommentNode();	  Comment    comment    =    node.getParentNode();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getJSDocInfo();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  JsDocInfo  comment  =  node.getJSDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	JsDocInfo  comment  =  node.getJSDocInfo();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
33	[BUG]  [BUGGY]  Node  comment  =  node.getAstNode();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Node  comment  =  node.getAstNode();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Node  comment  =  node.getAstNode();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  JsDocInfo  comment  =  node.getComment();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  JsDocInfo  comment  =  node.getComment();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	JsDocInfo  comment  =  node.getComment();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  Comment  comment  =  node.getCommentParent();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getCommentParent();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getCommentParent();	  Comment    comment    =    node.getComment();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNodeInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNodeInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNodeInfo();	  Comment    comment    =    node.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(this);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(this);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(this);	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(JsDocInfoParser.class);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(JsDocInfoParser.class);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocHolder);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(this.fileLevelJsDocBuilder);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(this.rootNodeJsDocBuilder);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  Comment  comment  =  irNode.getDocInfo();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  irNode.getDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  irNode.getDocInfo();	  Comment    comment    =    node.getDocInfo();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(true);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(true);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(true);	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
44	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule());  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(node.getModule());  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(node.getModule());	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstNode(node.getLineno());  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstNode(node.getLineno());	  Comment    comment    =    node.getAstNode();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
46	[BUG]  [BUGGY]  Comment  comment  =  irNode.getJsDocInfo();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  irNode.getJsDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  irNode.getJsDocInfo();	  Comment    comment    =    node.getJsDocInfo();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
47	[BUG]  [BUGGY]  AstNode  comment  =  node.getAstRootNode();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  AstNode  comment  =  node.getAstRootNode();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	AstNode  comment  =  node.getAstRootNode();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
48	[BUG]  [BUGGY]  Node  comment  =  node.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Node  comment  =  node.getFirstChild();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Node  comment  =  node.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
49	[BUG]  [BUGGY]  Comment  comment  =  node.getCurrentDocInfo();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getCurrentDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getCurrentDocInfo();	  Comment    comment    =    node.getCurrentNode();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
50	[BUG]  [BUGGY]  Comment  comment  =  node.getOwnerDocInfo();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getOwnerDocInfo();  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getOwnerDocInfo();	  Comment    comment    =    node.getParentNode();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
51	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLineno());  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(node.getLineno());  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(node.getLineno());	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  JSDocInfo  handleJsDoc(AstNode  node)  {    [BUGGY]  Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class);  [BUGGY]    if  (comment  !=  null)  {  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	194	194	1	replace	Comment  comment  =  node.getAstRootNode(JsDocInfoParser.class);	  Comment    comment    =    node.getAstRootNode();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
