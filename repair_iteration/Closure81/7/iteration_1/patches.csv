bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter())  {	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
2	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter());  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter());  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter());	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
3	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createErrorReporter())  {	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
4	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString))  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceString))  {	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
5	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isErrorReporter())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config.isErrorReporter())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isErrorReporter())  {	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
6	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName))  {  [CE]  ';'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName))  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceName))  {	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
7	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  Config())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  new  Config())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  Config())  {	  ErrorReporter    errorReporter,    Config    config)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  System.getProperty( "line.separator "));  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  System.getProperty( "line.separator "));  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "));	      	non-compiled	[CE]  	7	None	replace
9	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode());  [CE]  not  a  statement  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode());  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getRootNode());	      	non-compiled	[CE]  not  a  statement	7	None	replace
10	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config);  [CE]  not  a  statement  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  this.rootNodeJsDocBuilder,  config);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config);	      	non-compiled	[CE]  not  a  statement	7	None	replace
11	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config);  [CE]  not  a  statement  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceName,  config);	      	non-compiled	[CE]  not  a  statement	7	None	replace
12	[BUG]  [BUGGY]  System.getProperty( "line.separator ")));  [CE]  [FE]                            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  System.getProperty( "line.separator ")));  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator ")));	      	non-compiled	[CE]  	7	None	replace
13	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder.getRootNode());  [CE]  ';'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  this.rootNodeJsDocBuilder.getRootNode());  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder.getRootNode());	      	non-compiled	[CE]  ';'  expected	7	None	replace
14	[BUG]  [BUGGY]  super(config,  sourceString);  [CE]  ')'  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  super(config,  sourceString);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(config,  sourceString);	      	non-compiled	[CE]  ')'  expected	7	None	replace
15	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString)  {	  ErrorReporter    errorReporter,    config)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
16	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceName)  {	  ErrorReporter    errorReporter,    config)    {    	non-compiled	[CE]  ';'  expected	1	None	replace
17	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.config)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  this.config)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.config)  {	  ErrorReporter    errorReporter,    config)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
19	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
20	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
21	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
22	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
23	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  sourceName)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName)  {	  ErrorReporter    errorReporter,    String    sourceName)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
24	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config)  {	  ErrorReporter    errorReporter,    String    sourceName)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
25	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString);	  ErrorReporter    errorReporter,    config);    	non-compiled	[CE]  ';'  expected	10	None	replace
26	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder);	  ErrorReporter    errorReporter,    config);    	non-compiled	[CE]  ';'  expected	10	None	replace
27	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceName);	  ErrorReporter    errorReporter,    config);    	non-compiled	[CE]  ';'  expected	10	None	replace
28	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  null);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null);	  ErrorReporter    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceString);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  sourceString);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceString);	  ErrorReporter    errorReporter);    	non-compiled	[CE]  ';'  expected	9	None	replace
30	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  null);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null);	  ErrorReporter    errorReporter);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  ErrorReporter  errorReporter)  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter)  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter)	  ErrorReporter    errorReporter);    	non-compiled	[CE]  ';'  expected	9	None	replace
32	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder);	  ErrorReporter    errorReporter);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>())  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>())  {	  ErrorReporter    errorReporter,    null)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  this)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this)  {	  ErrorReporter    errorReporter,    null)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
35	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet();  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet();  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet();	  ErrorReporter    errorReporter,    null)    {    	non-compiled	[CE]  ';'  expected	2	None	replace
36	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  >  0)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  sourceString.length()  >  0)  {	  ErrorReporter    errorReporter,    null)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
37	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
38	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
39	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
40	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
41	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES);  [CE]  ';'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
42	[BUG]  [BUGGY]  ErrorReporter  sourceName,  null)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  sourceName,  null)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  null)  {	  ErrorReporter    errorReporter,    null)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
43	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo())  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo())  {	  ErrorReporter    errorReporter,    null)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
44	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceString)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  sourceString)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceString)  {	  ErrorReporter    errorReporter,    String    sourceName)    {    	non-compiled	[CE]  ';'  expected	5	None	replace
45	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
46	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceName)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
47	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
48	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  sourceName);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName);	  ErrorReporter    errorReporter);    	non-compiled	[CE]  ';'  expected	9	None	replace
49	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  false);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  false);	  ErrorReporter    errorReporter);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getErrorReporter())  {	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
51	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getRawErrorReporter())  {  [CE]  ';'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config.getRawErrorReporter())  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getRawErrorReporter())  {	  ErrorReporter    errorReporter,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	6	None	replace
52	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode();  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode();  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNode();	      	non-compiled	[CE]  ')'  expected	7	None	replace
53	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config);  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  super(sourceString,  sourceName,  config);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName,  config);	      	non-compiled	[CE]  ')'  expected	7	None	replace
54	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString);  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse: "  +  sourceString);	      	non-compiled	[CE]  ')'  expected	7	None	replace
55	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceString);  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceString);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse  source: "  +  sourceString);	      	non-compiled	[CE]  ')'  expected	7	None	replace
56	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceName);  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceName);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse: "  +  sourceName);	      	non-compiled	[CE]  ')'  expected	7	None	replace
57	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	4	None	replace
58	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  null)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null)  {	  ErrorReporter    errorReporter,    config)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  ErrorReporter.class.getSimpleName());  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter.class.getSimpleName());  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.class.getSimpleName());	  ErrorReporter    errorReporter);    	non-compiled	[CE]  ';'  expected	9	None	replace
60	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder;  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder;	      	non-compiled	[CE]  ')'  expected	7	None	replace
61	[BUG]  [BUGGY]  System.getProperty( "line.separator "));  this.sourceString  =  sourceString;  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  System.getProperty( "line.separator "));  this.sourceString  =  sourceString;  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "));  this.sourceString  =  sourceString;	      	non-compiled	[CE]  	7	None	replace
62	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getRootNode();  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getRootNode();  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getRootNode();	      	non-compiled	[CE]  ')'  expected	7	None	replace
63	[BUG]  [BUGGY]  System.getProperty( "line.separator "));  this.sourceName  =  sourceString;  [CE]  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  System.getProperty( "line.separator "));  this.sourceName  =  sourceString;  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "));  this.sourceName  =  sourceString;	      	non-compiled	[CE]  	7	None	replace
64	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  false);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  config,  false);  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  false);	  ErrorReporter    errorReporter,    config);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,    [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [BUGGY]    this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	8	None	replace
