bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  config)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  config)  {	  ErrorReporter    errorReporter,    Collection    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
2	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {	  ErrorReporter    errorReporter,    Collection    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
3	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders,  null)  {	  ErrorReporter    errorReporter,    Collection    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
4	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  config)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  config)  {	  ErrorReporter    errorReporter,    List    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
5	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {	  ErrorReporter    errorReporter,    List    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
6	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
7	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
8	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config,  sourceString)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config,  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
9	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
10	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config),  sourceString)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config),  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config),  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
11	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createErrorReporter());	  ErrorReporter    errorReporter,    config.getErrorReporter());    	non-compiled	[CE]  ';'  expected	2	None	replace
12	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString));  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceString));	  ErrorReporter    errorReporter,    config.getErrorReporter());    	non-compiled	[CE]  ';'  expected	2	None	replace
13	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter()));  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter()));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter()));	  ErrorReporter    errorReporter,    config.getErrorReporter());    	non-compiled	[CE]  ';'  expected	2	None	replace
14	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isErrorReporter());  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isErrorReporter());	  ErrorReporter    errorReporter,    config.getErrorReporter());    	non-compiled	[CE]  ';'  expected	2	None	replace
15	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter());  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter());	  ErrorReporter    errorReporter,    config.getErrorReporter());    	non-compiled	[CE]  ';'  expected	2	None	replace
16	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getRawErrorReporter());  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getRawErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getRawErrorReporter());	  ErrorReporter    errorReporter,    config.getErrorReporter());    	non-compiled	[CE]  ';'  expected	2	None	replace
17	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>AllOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>AllOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>AllOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
18	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  Object>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  Object>  allOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  Object>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
19	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  allOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
20	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  ALLOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  ALLOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  ALLOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
21	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  ||  sourceString.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  ||  sourceString.length()  >  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  ||  sourceString.length()  >  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
22	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  ==  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  sourceString.length()  ==  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
23	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceName.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceName.length()  >  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  sourceName.length()  >  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
24	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  config.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  &&  config.length()  >  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  config.length()  >  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
25	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()!=  0)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()!=  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  sourceString.length()!=  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
26	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null  &&  sourceString.length()  >  0)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null  &&  sourceString.length()  >  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null  &&  sourceString.length()  >  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
27	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode.getRootNode();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode.getRootNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  rootNode.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
28	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.createRootNode();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.createRootNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.createRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
29	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  sourceString;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  sourceString;	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
30	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  sourceString  +  config.getRootNode();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  sourceString  +  config.getRootNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  sourceString  +  config.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
31	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode(sourceString);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNode(sourceString);	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
32	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  sourceName)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceName)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
33	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceName,  config)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceName,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceName,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceName)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
34	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  sourceName)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceName)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
35	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config,  rootNodeJsDocHolder)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config,  rootNodeJsDocHolder)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config,  rootNodeJsDocHolder)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    config)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
36	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  config)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    config)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
37	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  rootNodeJsDocHolder)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  rootNodeJsDocHolder)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  rootNodeJsDocHolder)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    config)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
38	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  setAllOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  setAllOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  setAllOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    ArrayList    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
39	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Arrays.asList(allOWED_DIRECTIVES))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Arrays.asList(allOWED_DIRECTIVES))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Arrays.asList(allOWED_DIRECTIVES))  {	  ErrorReporter    errorReporter,    Collection    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
40	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Collection    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
41	[BUG]  [BUGGY]  ErrorReporter  errorReporter)  {  ';'  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter)  {  ';'  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter)  {  ';'	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
42	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config)  ==  ';'  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config)  ==  ';'  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config)  ==  ';'	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
43	[BUG]  [BUGGY]  ErrorReporter  errorReporter)  ==  ';'  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter)  ==  ';'  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter)  ==  ';'	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
44	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter())  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter())  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter())	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
45	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config)  {  ';'  expected  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config)  {  ';'  expected  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config)  {  ';'  expected	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
46	[BUG]  [BUGGY]  ErrorReporter  errorReporter)  {  ';'  expected  =  true;  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter)  {  ';'  expected  =  true;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter)  {  ';'  expected  =  true;	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
47	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceString)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null,  sourceString)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
48	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null  ||  sourceString.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null  ||  sourceString.length()  ==  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null  ||  sourceString.length()  ==  0)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
49	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  this)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  this)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  this)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
50	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  false)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  false)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  false)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
51	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder)  {	  ErrorReporter    errorReporter,    config,    sourceName)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
52	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName,  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceName,  null)  {	  ErrorReporter    errorReporter,    config,    sourceName)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
53	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceString,  config)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceString,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  sourceString,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceString)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
54	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceString)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
55	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  fileLevelJsDocBuilders,  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceString)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
56	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  fileLevelJsDocBuilder);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
57	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
58	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder,  config);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  rootNodeJsDocBuilder,  config);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
59	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocHolder);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocHolder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  rootNodeJsDocHolder);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
60	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  templateNode);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  templateNode);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  templateNode);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
61	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  sourceString);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  sourceString);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
62	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocHolder,  config);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocHolder,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  rootNodeJsDocHolder,  config);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
63	[BUG]  [BUGGY]  System.getProperty( "file.separator "));  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "file.separator "));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "file.separator "));	  System.getProperty(   "line.separator   "));    	non-compiled	[CE]  	8	None	replace
64	[BUG]  [BUGGY]  System.getProperty( "line.separator "),  config);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator "),  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "),  config);	  System.getProperty(   "line.separator   "));    	non-compiled	[CE]  	8	None	replace
65	[BUG]  [BUGGY]  System.getProperty( "line.separator "),  sourceString);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator "),  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "),  sourceString);	  System.getProperty(   "line.separator   "));    	non-compiled	[CE]  	8	None	replace
66	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getRawErrorReporter())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getRawErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getRawErrorReporter())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
67	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getConfig().getRawErrorReporter())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getConfig().getRawErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getConfig().getRawErrorReporter())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
68	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getNormalizedErrorReporter())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getNormalizedErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getNormalizedErrorReporter())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
69	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getAllowedErrorReporter())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getAllowedErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getAllowedErrorReporter())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
70	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getProblemReporter())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getProblemReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getProblemReporter())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
71	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter());  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getErrorReporter());	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
72	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.isErrorReporter())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.isErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.isErrorReporter())  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
73	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.createErrorReporter())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.createErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.createErrorReporter())  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
74	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter()),  errorReporter)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter()),  errorReporter)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getErrorReporter()),  errorReporter)  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
75	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceString,  config);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  ';'  expected	25	None	replace
76	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  rootNodeJsDocBuilder);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString,  rootNodeJsDocBuilder);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  ';'  expected	25	None	replace
77	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  this.rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  this.rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  this.rootNodeJsDocBuilder);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
78	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  ';'  expected	25	None	replace
79	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  true);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  true);	  ErrorReporter    errorReporter,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
80	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  false,  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  false,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  false,  config);	  ErrorReporter    errorReporter,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
81	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  false,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  false,  config.getErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  false,  config.getErrorReporter());	  ErrorReporter    errorReporter,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
82	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  false,  sourceString);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  false,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  false,  sourceString);	  ErrorReporter    errorReporter,    false);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
83	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES);	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
84	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Lists.  <  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Lists.  <  String>  allOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Lists.  <  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
85	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  Object>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  Object>  allOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  Object>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
86	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
87	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  ALLOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  ALLOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  ALLOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
88	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  rootNodeJsDocBuilder);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  sourceName,  config,  rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName,  config,  rootNodeJsDocBuilder);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
89	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  errorReporter);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  sourceName,  config,  errorReporter);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName,  config,  errorReporter);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
90	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  null);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  sourceName,  config,  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName,  config,  null);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
91	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  false);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  sourceName,  config,  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName,  config,  false);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
92	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  rootNodeJsDocHolder);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  sourceName,  config,  rootNodeJsDocHolder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName,  config,  rootNodeJsDocHolder);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
93	[BUG]  [BUGGY]  super(rootNodeJsDocBuilder,  sourceName,  config);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(rootNodeJsDocBuilder,  sourceName,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(rootNodeJsDocBuilder,  sourceName,  config);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
94	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceString);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceString);	  this.rootNodeJsDocBuilder,    config);    	non-compiled	[CE]  not  a  statement	10	None	replace
95	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config,  sourceString);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config,  sourceString);	  this.rootNodeJsDocBuilder,    config);    	non-compiled	[CE]  not  a  statement	10	None	replace
96	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  this.rootNodeJsDocBuilder,    config);    	non-compiled	[CE]  not  a  statement	10	None	replace
97	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config,  fileLevelJsDocBuilder);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config,  fileLevelJsDocBuilder);	  this.rootNodeJsDocBuilder,    config);    	non-compiled	[CE]  not  a  statement	10	None	replace
98	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder);  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder);	  this.rootNodeJsDocBuilder,    config);    	non-compiled	[CE]  not  a  statement	10	None	replace
99	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config,  null);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config,  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config,  null);	  this.rootNodeJsDocBuilder,    config);    	non-compiled	[CE]  not  a  statement	10	None	replace
100	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  this.rootNodeJsDocBuilder)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  this.rootNodeJsDocBuilder)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString,  this.rootNodeJsDocBuilder)  {	  ErrorReporter    errorReporter,    config,    sourceString)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
101	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceString,  config)  {	  ErrorReporter    errorReporter,    config,    sourceString)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
102	[BUG]  [BUGGY]  System.getProperty( "file.separator ")));  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "file.separator ")));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "file.separator ")));	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
103	[BUG]  [BUGGY]  System.getProperty( "line.separator ")),  sourceString);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator ")),  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator ")),  sourceString);	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
104	[BUG]  [BUGGY]  System.getProperty( "line.separator "),  sourceString));  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator "),  sourceString));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "),  sourceString));	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
105	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceName);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse  source: "  +  sourceName);	  System.err.println(   "Failed    to    parse    source:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	55	None	replace
106	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceString,  sourceName);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceString,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse  source: "  +  sourceString,  sourceName);	  System.err.println(   "Failed    to    parse    source:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	55	None	replace
107	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceString,  config);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse  source: "  +  sourceString,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse  source: "  +  sourceString,  config);	  System.err.println(   "Failed    to    parse    source:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	55	None	replace
108	[BUG]  [BUGGY]  ErrorReporter.println( "Failed  to  parse  source: "  +  sourceString);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.println( "Failed  to  parse  source: "  +  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.println( "Failed  to  parse  source: "  +  sourceString);	  System.err.println(   "Failed    to    parse    source:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	55	None	replace
109	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  source:  ' "  +  sourceString);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse  source:  ' "  +  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse  source:  ' "  +  sourceString);	  System.err.println(   "Failed    to    parse    source:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	55	None	replace
110	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config.getErrorReporter())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config.getErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceString,  config.getErrorReporter())  {	  ErrorReporter    errorReporter,    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
111	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.isErrorReporter())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.isErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.isErrorReporter())  {	  ErrorReporter    errorReporter,    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
112	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getConfig().getErrorReporter())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getConfig().getErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getConfig().getErrorReporter())  {	  ErrorReporter    errorReporter,    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
113	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceString);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null,  sourceString);	  ErrorReporter    errorReporter,    config,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
114	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  null);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString,  null);	  ErrorReporter    errorReporter,    config,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
115	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null,  rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null,  rootNodeJsDocBuilder);	  ErrorReporter    errorReporter,    config,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
116	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null,  config);	  ErrorReporter    errorReporter,    config,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
117	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null,  sourceName);	  ErrorReporter    errorReporter,    config,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
118	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  config);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES);    	non-compiled	[CE]  ';'  expected	41	None	replace
119	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceString);  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceString);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES);    	non-compiled	[CE]  ';'  expected	41	None	replace
120	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES);  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  allOWED_DIRECTIVES);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES);    	non-compiled	[CE]  ';'  expected	41	None	replace
121	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceName);  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceName);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES);    	non-compiled	[CE]  ';'  expected	41	None	replace
122	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  allOWED_DIRECTIVES);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES);    	non-compiled	[CE]  ';'  expected	41	None	replace
123	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  null);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  null);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES);    	non-compiled	[CE]  ';'  expected	41	None	replace
124	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  ArrayList  <  ErrorReporter>())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  ArrayList  <  ErrorReporter>())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  ArrayList  <  ErrorReporter>())  {	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
125	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  LinkedHashSet  <  ErrorReporter>())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  LinkedHashSet  <  ErrorReporter>())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  LinkedHashSet  <  ErrorReporter>())  {	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
126	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  config)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  config)  {	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
127	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  Set  <  ErrorReporter>())  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  Set  <  ErrorReporter>())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  Set  <  ErrorReporter>())  {	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
128	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>());	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
129	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder.getRootNode(),  config);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder.getRootNode(),  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder.getRootNode(),  config);	  this.rootNodeJsDocBuilder.getRootNode());    	non-compiled	[CE]  ';'  expected	13	None	replace
130	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder.getRootNode()));  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder.getRootNode()));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder.getRootNode()));	  this.rootNodeJsDocBuilder.getRootNode());    	non-compiled	[CE]  ';'  expected	13	None	replace
131	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder.getRootNode(),  sourceString);  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder.getRootNode(),  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder.getRootNode(),  sourceString);	  this.rootNodeJsDocBuilder.getRootNode());    	non-compiled	[CE]  ';'  expected	13	None	replace
132	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder.getParentNode());  [CE]  ';'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder.getParentNode());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder.getParentNode());	  this.rootNodeJsDocBuilder.getRootNode());    	non-compiled	[CE]  ';'  expected	13	None	replace
133	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder.getRootNode(),  false);  [CE]  ';'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder.getRootNode(),  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder.getRootNode(),  false);	  this.rootNodeJsDocBuilder.getRootNode());    	non-compiled	[CE]  ';'  expected	13	None	replace
134	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(sourceString);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(sourceString);	  ErrorReporter    errorReporter,    Set    <    String>    set    =    Sets.newHashSet();    	non-compiled	[CE]  ';'  expected	35	None	replace
135	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  set  =  Sets.newHashSet();  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  set  =  Sets.newHashSet();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  set  =  Sets.newHashSet();	  ErrorReporter    errorReporter,    Set    <    String>    set    =    Sets.newHashSet();    	non-compiled	[CE]  ';'  expected	35	None	replace
136	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  set  =  Sets.newHashSet();  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  List  <  String>  set  =  Sets.newHashSet();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  List  <  String>  set  =  Sets.newHashSet();	  ErrorReporter    errorReporter,    Set    <    String>    set    =    Sets.newHashSet();    	non-compiled	[CE]  ';'  expected	35	None	replace
137	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  set  =  Sets.newHashSet();  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  set  =  Sets.newHashSet();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  set  =  Sets.newHashSet();	  ErrorReporter    errorReporter,    Set    <    String>    set    =    Sets.newHashSet();    	non-compiled	[CE]  ';'  expected	35	None	replace
138	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(1);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(1);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(1);	  ErrorReporter    errorReporter,    Set    <    String>    set    =    Sets.newHashSet();    	non-compiled	[CE]  ';'  expected	35	None	replace
139	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString,  sourceName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse: "  +  sourceString,  sourceName);	  System.err.println(   "Failed    to    parse:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	54	None	replace
140	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString,  config);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse: "  +  sourceString,  config);	  System.err.println(   "Failed    to    parse:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	54	None	replace
141	[BUG]  [BUGGY]  ErrorReporter.println( "Failed  to  parse: "  +  sourceString);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.println( "Failed  to  parse: "  +  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.println( "Failed  to  parse: "  +  sourceString);	  System.err.println(   "Failed    to    parse:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	54	None	replace
142	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString,  errorReporter);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceString,  errorReporter);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse: "  +  sourceString,  errorReporter);	  System.err.println(   "Failed    to    parse:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	54	None	replace
143	[BUG]  [BUGGY]  super(sourceString,  sourceName);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
144	[BUG]  [BUGGY]  super(sourceString,  config);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  config);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
145	[BUG]  [BUGGY]  super(config,  sourceString,  config);  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(config,  sourceString,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(config,  sourceString,  config);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
146	[BUG]  [BUGGY]  super(config,  sourceName);  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(config,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(config,  sourceName);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
147	[BUG]  [BUGGY]  super(rootNodeJsDocBuilder,  sourceString);  [CE]  ')'  expected  [FE]                                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(rootNodeJsDocBuilder,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(rootNodeJsDocBuilder,  sourceString);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
148	[BUG]  [BUGGY]  super(config,  sourceString,  config.getErrorReporter());  [CE]  ')'  expected  [FE]                                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(config,  sourceString,  config.getErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(config,  sourceString,  config.getErrorReporter());	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
149	[BUG]  [BUGGY]  super(config,  rootNodeJsDocBuilder);  [CE]  ')'  expected  [FE]                                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(config,  rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(config,  rootNodeJsDocBuilder);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
150	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString),  sourceName)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString),  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceString),  sourceName)  {	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceString))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
151	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter(sourceString))  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter(sourceString))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter(sourceString))  {	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceString))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
152	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString),  false)  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString),  false)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceString),  false)  {	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceString))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
153	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString);  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceString);	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceString))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
154	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.config,  config)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.config,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.config,  config)  {	  ErrorReporter    errorReporter,    this.config)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
155	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.config,  sourceString)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.config,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.config,  sourceString)  {	  ErrorReporter    errorReporter,    this.config)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
156	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.config,  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.config,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.config,  null)  {	  ErrorReporter    errorReporter,    this.config)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
157	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
158	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocHolder;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocHolder;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocHolder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
159	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
160	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder  +  sourceName;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder  +  sourceName;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder  +  sourceName;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
161	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder(sourceString);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder(sourceString);	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
162	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  config)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  config)  {	  ErrorReporter    errorReporter,    set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
163	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  fileLevelJsDocBuilders)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
164	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  Object>  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  Object>  fileLevelJsDocBuilders)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  Object>  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
165	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {	  ErrorReporter    errorReporter,    set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
166	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  null)  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  null)  {	  ErrorReporter    errorReporter,    set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
167	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceName,  config);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse: "  +  sourceName,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse: "  +  sourceName,  config);	  System.err.println(   "Failed    to    parse:   "    +    sourceName);    	non-compiled	[CE]  ')'  expected	56	None	replace
168	[BUG]  [BUGGY]  ErrorReporter.println( "Failed  to  parse: "  +  sourceName);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.println( "Failed  to  parse: "  +  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.println( "Failed  to  parse: "  +  sourceName);	  System.err.println(   "Failed    to    parse:   "    +    sourceName);    	non-compiled	[CE]  ')'  expected	56	None	replace
169	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  false)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  false)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  false)  {	  ErrorReporter    errorReporter,    this)    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
170	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set)  {	  ErrorReporter    errorReporter,    this)    {    	non-compiled	[CE]  ';'  expected	34	None	replace
171	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  Config(),  sourceString)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  Config(),  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  Config(),  sourceString)  {	  ErrorReporter    errorReporter,    new    Config())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
172	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  Config(),  config)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  Config(),  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  Config(),  config)  {	  ErrorReporter    errorReporter,    new    Config())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
173	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  Config(),  sourceName)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  Config(),  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  Config(),  sourceName)  {	  ErrorReporter    errorReporter,    new    Config())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
174	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  Config());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  Config());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  Config());	  ErrorReporter    errorReporter,    new    Config())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
175	[BUG]  [BUGGY]  ErrorReporter.class.getName());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.class.getName());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.class.getName());	  ErrorReporter.class.getSimpleName());    	non-compiled	[CE]  ';'  expected	59	None	replace
176	[BUG]  [BUGGY]  ErrorReporter.class.getSimpleName(),  config);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.class.getSimpleName(),  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.class.getSimpleName(),  config);	  ErrorReporter.class.getSimpleName());    	non-compiled	[CE]  ';'  expected	59	None	replace
177	[BUG]  [BUGGY]  ErrorReporter.class,  config.getSimpleName());  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.class,  config.getSimpleName());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.class,  config.getSimpleName());	  ErrorReporter.class.getSimpleName());    	non-compiled	[CE]  not  a  statement	59	None	replace
178	[BUG]  [BUGGY]  ErrorReporter.class.getSimpleName()));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.class.getSimpleName()));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.class.getSimpleName()));	  ErrorReporter.class.getSimpleName());    	non-compiled	[CE]  ';'  expected	59	None	replace
179	[BUG]  [BUGGY]  ErrorReporter.class.getSimpleName(),  sourceString);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter.class.getSimpleName(),  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter.class.getSimpleName(),  sourceString);	  ErrorReporter.class.getSimpleName());    	non-compiled	[CE]  ';'  expected	59	None	replace
180	[BUG]  [BUGGY]  System.getProperty( "line.source "));  this.sourceString  =  sourceString;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.source "));  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.source "));  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
181	[BUG]  [BUGGY]  System.getProperty( "file.separator "));  this.sourceString  =  sourceString;  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "file.separator "));  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "file.separator "));  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
182	[BUG]  [BUGGY]  System.getProperty( "line.source.separator "));  this.sourceString  =  sourceString;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.source.separator "));  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.source.separator "));  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
183	[BUG]  [BUGGY]  System.getProperty( "line.source.name "));  this.sourceString  =  sourceString;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.source.name "));  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.source.name "));  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
184	[BUG]  [BUGGY]  System.getProperty( "line.source.path "));  this.sourceString  =  sourceString;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.source.path "));  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.source.path "));  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
185	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isFailureErrorReporter())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isFailureErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isFailureErrorReporter())  {	  ErrorReporter    errorReporter,    config.isErrorReporter())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
186	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isInterfaceErrorReporter())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isInterfaceErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isInterfaceErrorReporter())  {	  ErrorReporter    errorReporter,    config.isErrorReporter())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
187	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isImmutableErrorReporter())  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isImmutableErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isImmutableErrorReporter())  {	  ErrorReporter    errorReporter,    config.isErrorReporter())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
188	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  config);	  ErrorReporter    errorReporter,    this.rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
189	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    this.rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
190	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  sourceString);	  ErrorReporter    errorReporter,    this.rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
191	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  sourceName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  sourceName);	  ErrorReporter    errorReporter,    this.rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
192	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    this.rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
193	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  templateNode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  templateNode);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder,  templateNode);	  ErrorReporter    errorReporter,    this.rootNodeJsDocBuilder);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
194	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null,  config)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null,  config)  {	  ErrorReporter    errorReporter,    sourceName,    config)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
195	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  true);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  true);	  ErrorReporter    errorReporter,    config,    false);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
196	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  false,  sourceString);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  false,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  false,  sourceString);	  ErrorReporter    errorReporter,    config,    false);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
197	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null,  false);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null,  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null,  false);	  ErrorReporter    errorReporter,    config,    false);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
198	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  sourceString);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getRootNode(),  sourceString);	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
199	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceString,  config.getRootNode());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceString,  config.getRootNode());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceString,  config.getRootNode());	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
200	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode()));  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode()));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getRootNode()));	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
201	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  sourceName);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getRootNode(),  sourceName);	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
202	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  false);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getRootNode(),  false);	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
203	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config.getRootNode());  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config.getRootNode());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceName,  config.getRootNode());	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
204	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName));  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceName));	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceName))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
205	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter(sourceName))  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter(sourceName))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getErrorReporter(sourceName))  {	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceName))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
206	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName);  [CE]  ';'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceName);	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceName))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
207	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName),  false)  {  [CE]  ';'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceName),  false)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceName),  false)  {	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceName))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
208	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  list  <  String>  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  list  <  String>  fileLevelJsDocBuilders)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  list  <  String>  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    ArrayList    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
209	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  null)  {	  ErrorReporter    errorReporter,    ArrayList    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
210	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders,  JSDocInfo)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    JSDocInfo)    {    	non-compiled	[CE]  ';'  expected	18	None	replace
211	[BUG]  [BUGGY]  System.getProperty( "line.separator "));  this.sourceName  =  sourceName;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator "));  this.sourceName  =  sourceName;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "));  this.sourceName  =  sourceName;	  System.getProperty(   "line.separator   "));    this.sourceName    =    sourceString;    	non-compiled	[CE]  	63	None	replace
212	[BUG]  [BUGGY]  System.getProperty( "line.source "));  this.sourceName  =  sourceString;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.source "));  this.sourceName  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.source "));  this.sourceName  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceName    =    sourceString;    	non-compiled	[CE]  	63	None	replace
213	[BUG]  [BUGGY]  System.getProperty( "line.sourceName "));  this.sourceName  =  sourceString;  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.sourceName "));  this.sourceName  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.sourceName "));  this.sourceName  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceName    =    sourceString;    	non-compiled	[CE]  	63	None	replace
214	[BUG]  [BUGGY]  System.getProperty( "file.separator "));  this.sourceName  =  sourceString;  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "file.separator "));  this.sourceName  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "file.separator "));  this.sourceName  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceName    =    sourceString;    	non-compiled	[CE]  	63	None	replace
215	[BUG]  [BUGGY]  System.getProperty( "line.source.separator "));  this.sourceName  =  sourceString;  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.source.separator "));  this.sourceName  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.source.separator "));  this.sourceName  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceName    =    sourceString;    	non-compiled	[CE]  	63	None	replace
216	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(config))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(config))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo(config))  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
217	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo());	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
218	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()).setSourceName(sourceString);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()).setSourceName(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo()).setSourceName(sourceString);	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
219	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()),  sourceString)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()),  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo()),  sourceString)  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
220	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  rootNodeJsDocBuilder);	  ErrorReporter    errorReporter,    sourceString);    	non-compiled	[CE]  ';'  expected	29	None	replace
221	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceString,  config);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceString,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceString,  config);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
222	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config,  sourceName);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config,  sourceName);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
223	[BUG]  [BUGGY]  rootNodeJsDocBuilder,  sourceName,  config);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  rootNodeJsDocBuilder,  sourceName,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	rootNodeJsDocBuilder,  sourceName,  config);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
224	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config));  [CE]  not  a  statement  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceName,  config));	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
225	[BUG]  [BUGGY]  This.rootNodeJsDocBuilder,  sourceName,  config);  [CE]  not  a  statement  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  This.rootNodeJsDocBuilder,  sourceName,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	This.rootNodeJsDocBuilder,  sourceName,  config);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
226	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter(sourceString))  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter(sourceString))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createErrorReporter(sourceString))  {	  ErrorReporter    errorReporter,    config.createErrorReporter())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
227	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter(sourceName))  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter(sourceName))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createErrorReporter(sourceName))  {	  ErrorReporter    errorReporter,    config.createErrorReporter())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
228	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter()),  sourceString)  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.createErrorReporter()),  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createErrorReporter()),  sourceString)  {	  ErrorReporter    errorReporter,    config.createErrorReporter())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
229	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null,  config.getErrorReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null,  config.getErrorReporter());	  ErrorReporter    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
230	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this);	  ErrorReporter    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
231	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config)  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
232	[BUG]  [BUGGY]  ErrorReporter  sourceName,  null,  config)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  null,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  null,  config)  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
233	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config,  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config,  null)  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
234	[BUG]  [BUGGY]  ErrorReporter  sourceName)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName)  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  ';'  expected	42	None	replace
235	[BUG]  [BUGGY]  ErrorReporter  sourceName,  this.config)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  this.config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  this.config)  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
236	[BUG]  [BUGGY]  ErrorReporter  sourceName,  null,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  null,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  null,  config);	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
237	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getParentNode();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getParentNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getParentNode();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
238	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getCurrentNode();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getCurrentNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getCurrentNode();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
239	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocBuilder.getRootNode();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
240	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.cloneTree();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.cloneTree();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.cloneTree();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
241	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.clone();  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.clone();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.clone();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
242	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getConfig();  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getConfig();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getConfig();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
243	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName,  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceName,  null);	  ErrorReporter    errorReporter,    config,    sourceName);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
244	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  null)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config,  null)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
245	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceName)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null,  sourceName)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
246	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceString,  config,  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceString,  config,  false);	  ErrorReporter    errorReporter,    config,    false);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
247	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config,  false);	  ErrorReporter    errorReporter,    config,    false);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
248	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  fileLevelJsDocBuilder);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    sourceName);    	non-compiled	[CE]  ';'  expected	48	None	replace
249	[BUG]  [BUGGY]  super(sourceString);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
250	[BUG]  [BUGGY]  super(sourceString.toLowerCase(),  config);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString.toLowerCase(),  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString.toLowerCase(),  config);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
251	[BUG]  [BUGGY]  super(sourceString.toLowerCase());  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString.toLowerCase());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString.toLowerCase());	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
252	[BUG]  [BUGGY]  super(rootNodeJsDocBuilder,  config);  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(rootNodeJsDocBuilder,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(rootNodeJsDocBuilder,  config);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
253	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode()  +  1;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNode()  +  1;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNode()  +  1;	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
254	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  rootNodeJsDocBuilder)  {	  ErrorReporter    errorReporter,    sourceName)    {    	non-compiled	[CE]  ';'  expected	23	None	replace
255	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getExceptionReporter());  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getExceptionReporter());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getExceptionReporter());	  ErrorReporter    errorReporter,    config.getErrorReporter());    	non-compiled	[CE]  ';'  expected	2	None	replace
256	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  sourceName)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceName)    {    	non-compiled	[CE]  ';'  expected	46	None	replace
257	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createExceptionReporter())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.createExceptionReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createExceptionReporter())  {	  ErrorReporter    errorReporter,    config.createErrorReporter())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
258	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getNameNode());  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config.getNameNode());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getNameNode());	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
259	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getRawNode());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config.getRawNode());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getRawNode());	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
260	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  sourceName);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString,  sourceName);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  ';'  expected	25	None	replace
261	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  fileLevelJsDocBuilder);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  ';'  expected	25	None	replace
262	[BUG]  [BUGGY]  System.getProperty( "line.separator ")),  sourceName);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator ")),  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator ")),  sourceName);	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
263	[BUG]  [BUGGY]  System.getProperty( "java.line.separator ")));  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "java.line.separator ")));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "java.line.separator ")));	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
264	[BUG]  [BUGGY]  System.getProperty( ".line.separator ")));  [CE]  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( ".line.separator ")));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( ".line.separator ")));	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
265	[BUG]  [BUGGY]  System.getProperty( "line.separator "))  +  sourceString;  [CE]  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator "))  +  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "))  +  sourceString;	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
266	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  fileLevelJsDocBuilders,  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    sourceString)    {    	non-compiled	[CE]  ';'  expected	65	None	replace
267	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceName)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceName)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
268	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceString)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allOWED_DIRECTIVES,  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
269	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.sourceName)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.sourceName)  {	  ErrorReporter    errorReporter,    sourceString)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
270	[BUG]  [BUGGY]  System.err.println(sourceString  + "Failed  to  parse: "  +  sourceName);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println(sourceString  + "Failed  to  parse: "  +  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println(sourceString  + "Failed  to  parse: "  +  sourceName);	  System.err.println(   "Failed    to    parse:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	54	None	replace
271	[BUG]  [BUGGY]  this.rootNodeJSDocBuilder,  sourceName,  config);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJSDocBuilder,  sourceName,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJSDocBuilder,  sourceName,  config);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
272	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName,  fileLevelJsDocBuilder);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceName,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceName,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    config,    sourceName);    	non-compiled	[CE]  ';'  expected	27	None	replace
273	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getFailureErrorReporter())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getFailureErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getFailureErrorReporter())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
274	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getConfig())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getConfig())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getConfig())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
275	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  >=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  >=  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  sourceString.length()  >=  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
276	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  <=  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  &&  sourceString.length()  <=  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  sourceString.length()  <=  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
277	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isConstructor())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isConstructor())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isConstructor())  {	  ErrorReporter    errorReporter,    config.isErrorReporter())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
278	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  this.sourceName)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  this.sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  this.sourceName)  {	  ErrorReporter    errorReporter,    config,    sourceName)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
279	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config,  errorReporter)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config,  errorReporter)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config,  errorReporter)  {	  ErrorReporter    errorReporter,    config,    sourceName)    {    	non-compiled	[CE]  ';'  expected	16	None	replace
280	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config,  sourceString)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  config,  sourceString)  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    config)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
281	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Arrays.asList(fileLevelJsDocBuilders))  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Arrays.asList(fileLevelJsDocBuilders))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Arrays.asList(fileLevelJsDocBuilders))  {	  ErrorReporter    errorReporter,    set    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
282	[BUG]  [BUGGY]  ErrorReporter  sourceName,  null  ||  config.isConstructor())  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  null  ||  config.isConstructor())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  null  ||  config.isConstructor())  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
283	[BUG]  [BUGGY]  ErrorReporter  sourceName,  null  ||  config.isInterface())  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  null  ||  config.isInterface())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  null  ||  config.isInterface())  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
284	[BUG]  [BUGGY]  ErrorReporter  sourceName,  null  ||  config.isExtern())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  null  ||  config.isExtern())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  null  ||  config.isExtern())  {	  ErrorReporter    sourceName,    null)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
285	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  sourceString)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config,  sourceString)  {	  ErrorReporter    errorReporter,    config,    sourceString)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
286	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  null)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString,  null)  {	  ErrorReporter    errorReporter,    config,    sourceString)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
287	[BUG]  [BUGGY]  ErrorReporter  errorReporter)!=  ';'  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter)!=  ';'  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter)!=  ';'	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
288	[BUG]  [BUGGY]  ErrorReporter  errorReporter)  >=  ';'  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter)  >=  ';'  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter)  >=  ';'	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
289	[BUG]  [BUGGY]  ErrorReporter  errorReporter)  [Delete]  ';'  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter)  [Delete]  ';'  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter)  [Delete]  ';'	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
290	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null,  sourceString);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null,  sourceString);	  ErrorReporter    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
291	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null,  sourceName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null,  sourceName);	  ErrorReporter    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
292	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES);  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  allOWED_DIRECTIVES);	  ErrorReporter    errorReporter,    Collection    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
293	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  sourceName);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  rootNodeJsDocBuilder,  sourceName);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
294	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  rootNodeJsDocBuilder);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config,  rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config,  rootNodeJsDocBuilder);	  ErrorReporter    errorReporter,    config,    rootNodeJsDocBuilder);    	non-compiled	[CE]  ';'  expected	26	None	replace
295	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  set  <  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  set  <  String>  allOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  set  <  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
296	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  sourceName)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  sourceName)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
297	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  ==  String>  allOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  ==  String>  allOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  ==  String>  allOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
298	[BUG]  [BUGGY]  super(sourceName,  config);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceName,  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceName,  config);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
299	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter(sourceName))  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter(sourceName))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getErrorReporter(sourceName))  {	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceName))    {    	non-compiled	[CE]  ';'  expected	6	None	replace
300	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceString,  fileLevelJsDocBuilder);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceString,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceString,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    sourceString);    	non-compiled	[CE]  ';'  expected	29	None	replace
301	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder.createRootNode());  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder.createRootNode());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder.createRootNode());	  this.rootNodeJsDocBuilder.getRootNode());    	non-compiled	[CE]  ';'  expected	13	None	replace
302	[BUG]  [BUGGY]  System.getProperty( "line.separator ")));  this.sourceName  =  sourceString;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator ")));  this.sourceName  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator ")));  this.sourceName  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceName    =    sourceString;    	non-compiled	[CE]  	63	None	replace
303	[BUG]  [BUGGY]  ||  System.getProperty( "line.separator "));  this.sourceName  =  sourceString;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ||  System.getProperty( "line.separator "));  this.sourceName  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	||  System.getProperty( "line.separator "));  this.sourceName  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceName    =    sourceString;    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
304	[BUG]  [BUGGY]  System.getProperty( "line.separator ")));  this.sourceString  =  sourceString;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator ")));  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator ")));  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
305	[BUG]  [BUGGY]  ||  System.getProperty( "line.separator "));  this.sourceString  =  sourceString;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ||  System.getProperty( "line.separator "));  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	||  System.getProperty( "line.separator "));  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
306	[BUG]  [BUGGY]  System.getProperty( "line.source "));  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.source "));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.source "));	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
307	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allowED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allowED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  allowED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
308	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES).setSourceName(sourceString);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES).setSourceName(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES).setSourceName(sourceString);	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
309	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allowed_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allowed_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  allowed_DIRECTIVES)  {	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
310	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES,  sourceName)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collections.  <  String>  allOWED_DIRECTIVES,  sourceName)  {	  ErrorReporter    errorReporter,    Collections.    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	47	None	replace
311	[BUG]  [BUGGY]  System.getProperty( "java.line.separator "));  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "java.line.separator "));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "java.line.separator "));	  System.getProperty(   "line.separator   "));    	non-compiled	[CE]  	8	None	replace
312	[BUG]  [BUGGY]  System.getProperty( "line.separator "),  sourceName);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator "),  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "),  sourceName);	  System.getProperty(   "line.separator   "));    	non-compiled	[CE]  	8	None	replace
313	[BUG]  [BUGGY]  System.getProperty( ".line.separator "));  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( ".line.separator "));  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( ".line.separator "));	  System.getProperty(   "line.separator   "));    	non-compiled	[CE]  	8	None	replace
314	[BUG]  [BUGGY]  System.err.println(sourceString  + "  failed  to  parse  source: "  +  sourceName);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println(sourceString  + "  failed  to  parse  source: "  +  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println(sourceString  + "  failed  to  parse  source: "  +  sourceName);	  System.err.println(   "Failed    to    parse    source:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	55	None	replace
315	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getSourceName())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getSourceName())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getSourceName())  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
316	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getRawErrorReporter())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getRawErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getRawErrorReporter())  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
317	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getFileErrorReporter())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getFileErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getFileErrorReporter())  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
318	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getSourceFile())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getSourceFile())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getSourceFile())  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
319	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  sourceName)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  sourceName)  {	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
320	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  sourceString)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(),  sourceString)  {	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
321	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.rootNodeJsDocBuilder)  {	  ErrorReporter    errorReporter,    this.config)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
322	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.config,  sourceName)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.config,  sourceName)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.config,  sourceName)  {	  ErrorReporter    errorReporter,    this.config)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
323	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newLinkedHashSet();  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newLinkedHashSet();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newLinkedHashSet();	  ErrorReporter    errorReporter,    Set    <    String>    set    =    Sets.newHashSet();    	non-compiled	[CE]  ';'  expected	35	None	replace
324	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(sourceName);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  set  =  Sets.newHashSet(sourceName);	  ErrorReporter    errorReporter,    Set    <    String>    set    =    Sets.newHashSet();    	non-compiled	[CE]  ';'  expected	35	None	replace
325	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.createErrorReporter())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.createErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.createErrorReporter())  {	  ErrorReporter    errorReporter,    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
326	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getFileErrorReporter())  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getFileErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getFileErrorReporter())  {	  ErrorReporter    errorReporter,    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
327	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.build();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.build();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.build();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
328	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getSourceNode();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getSourceNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.getSourceNode();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
329	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES);	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES);    	non-compiled	[CE]  ';'  expected	41	None	replace
330	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  null)  {	  ErrorReporter    errorReporter,    sourceName,    config)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
331	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  this);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  this);	  ErrorReporter    errorReporter,    config,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
332	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders.length)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders.length)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  ArrayList  <  String>  fileLevelJsDocBuilders.length)  {	  ErrorReporter    errorReporter,    ArrayList    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
333	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(sourceString))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(sourceString))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo(sourceString))  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
334	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(sourceName))  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(sourceName))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo(sourceName))  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
335	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()  ||  fileOverviewInfo  ==  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()  ||  fileOverviewInfo  ==  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo()  ||  fileOverviewInfo  ==  null)  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
336	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()  ||  fileOverviewInfo!=  null)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()  ||  fileOverviewInfo!=  null)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo()  ||  fileOverviewInfo!=  null)  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
337	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  sourceName;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  sourceName;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
338	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  rootNodeJsDocHolder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
339	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceName);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceName);	  this.rootNodeJsDocBuilder,    config);    	non-compiled	[CE]  not  a  statement	10	None	replace
340	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.fileLevelJsDocBuilders)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    ArrayList    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	19	None	replace
341	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNodeForCodeInsertion(sourceString);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNodeForCodeInsertion(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNodeForCodeInsertion(sourceString);	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
342	[BUG]  [BUGGY]  This.rootNodeJsDocBuilder  =  config.getRootNode();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  This.rootNodeJsDocBuilder  =  config.getRootNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	This.rootNodeJsDocBuilder  =  config.getRootNode();	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
343	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNodeForName(sourceString);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.getRootNodeForName(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.getRootNodeForName(sourceString);	  this.rootNodeJsDocBuilder    =    config.getRootNode();    	non-compiled	[CE]  ')'  expected	52	None	replace
344	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config)  {  ';'  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config)  {  ';'  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config)  {  ';'	  ErrorReporter    errorReporter)    	non-compiled	[CE]  ';'  expected	31	None	replace
345	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(config)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo(config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo(config)  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
346	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()  ||  config.isConstructor())  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  JSDocInfo()  ||  config.isConstructor())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  JSDocInfo()  ||  config.isConstructor())  {	  ErrorReporter    errorReporter,    new    JSDocInfo())    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
347	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allowED_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allowED_DIRECTIVES,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allowED_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
348	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allowed_DIRECTIVES,  config)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  allowed_DIRECTIVES,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  allowed_DIRECTIVES,  config)  {	  ErrorReporter    errorReporter,    Set    <    String>    allOWED_DIRECTIVES,    config)    {    	non-compiled	[CE]  ';'  expected	57	None	replace
349	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  sourceString)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  allOWED_DIRECTIVES,  sourceString)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
350	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allowed_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  set  <  String>  allowed_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  set  <  String>  allowed_DIRECTIVES)  {	  ErrorReporter    errorReporter,    set    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	39	None	replace
351	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  new  HashSet  <  String>())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  new  HashSet  <  String>())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  fileLevelJsDocBuilders,  new  HashSet  <  String>())  {	  ErrorReporter    errorReporter,    Set    <    String>    fileLevelJsDocBuilders,    config)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
352	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  JSDocInfo  fileLevelJsDocBuilders)  {  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  JSDocInfo  fileLevelJsDocBuilders)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  JSDocInfo  fileLevelJsDocBuilders)  {	  ErrorReporter    errorReporter,    List    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	20	None	replace
353	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse:  %s. "  +  sourceName);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse:  %s. "  +  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse:  %s. "  +  sourceName);	  System.err.println(   "Failed    to    parse:   "    +    sourceName);    	non-compiled	[CE]  ')'  expected	56	None	replace
354	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse:  ' "  +  sourceName);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse:  ' "  +  sourceName);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse:  ' "  +  sourceName);	  System.err.println(   "Failed    to    parse:   "    +    sourceName);    	non-compiled	[CE]  ')'  expected	56	None	replace
355	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  this.sourceString)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  this.sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  this.sourceString)  {	  ErrorReporter    errorReporter,    this.config)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
356	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder,  config)  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  rootNodeJsDocBuilder,  config)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  rootNodeJsDocBuilder,  config)  {	  ErrorReporter    errorReporter,    sourceName,    config)    {    	non-compiled	[CE]  ';'  expected	24	None	replace
357	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getConfig())  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  sourceName,  config.getConfig())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  sourceName,  config.getConfig())  {	  ErrorReporter    errorReporter,    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	1	None	replace
358	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  ALLOWED_DIRECTIVES)  {  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Set  <  String>  ALLOWED_DIRECTIVES)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Set  <  String>  ALLOWED_DIRECTIVES)  {	  ErrorReporter    errorReporter,    List    <    String>    allOWED_DIRECTIVES)    {    	non-compiled	[CE]  ';'  expected	38	None	replace
359	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config,  null);  [CE]  not  a  statement  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config,  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceName,  config,  null);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
360	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config,  fileLevelJsDocBuilder);  [CE]  not  a  statement  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceName,  config,  fileLevelJsDocBuilder);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
361	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config,  false);  [CE]  not  a  statement  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  sourceName,  config,  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  sourceName,  config,  false);	  this.rootNodeJsDocBuilder,    sourceName,    config);    	non-compiled	[CE]  not  a  statement	11	None	replace
362	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createFileErrorReporter())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.createFileErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createFileErrorReporter())  {	  ErrorReporter    errorReporter,    config.createErrorReporter())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
363	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.createOptionalErrorReporter())  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.createOptionalErrorReporter())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.createOptionalErrorReporter())  {	  ErrorReporter    errorReporter,    config.createErrorReporter())    {    	non-compiled	[CE]  ';'  expected	3	None	replace
364	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString,  sourceName))  {  [CE]  ';'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getErrorReporter(sourceString,  sourceName))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getErrorReporter(sourceString,  sourceName))  {	  ErrorReporter    errorReporter,    config.getErrorReporter(sourceString))    {    	non-compiled	[CE]  ';'  expected	4	None	replace
365	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  ';')  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  ';')  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  ';')  {	  ErrorReporter    errorReporter,    config,    sourceName)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
366	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  this.sourceString)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  this.sourceString)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  this.sourceString)  {	  ErrorReporter    errorReporter,    config,    sourceName)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
367	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getRawErrorReporter(sourceString))  {  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getRawErrorReporter(sourceString))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getRawErrorReporter(sourceString))  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
368	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.getRawWarnings())  {  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.getRawWarnings())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.getRawWarnings())  {	  ErrorReporter    errorReporter,    config.getRawErrorReporter())    {    	non-compiled	[CE]  ';'  expected	51	None	replace
369	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  this.sourceString);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  this.sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  this.sourceString);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
370	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  this.rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  sourceString,  this.rootNodeJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  sourceString,  this.rootNodeJsDocBuilder);	  ErrorReporter    errorReporter,    config,    sourceString);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
371	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  Config()).setSourceName(sourceString);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  Config()).setSourceName(sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  Config()).setSourceName(sourceString);	  ErrorReporter    errorReporter,    new    Config())    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
372	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  rootNode;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  rootNode;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
373	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder,  sourceString);  [CE]  ';'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder,  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder,  sourceString);	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ';'  expected	60	None	replace
374	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJSDocBuilder;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJSDocBuilder;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJSDocBuilder;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
375	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder  +  sourceString;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder  +  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder  +  sourceString;	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder;    	non-compiled	[CE]  ')'  expected	60	None	replace
376	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  false,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  false,  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  false,  null);	  ErrorReporter    errorReporter,    config,    false);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
377	[BUG]  [BUGGY]  System.getProperty( "line.separator ")),  config);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator ")),  config);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator ")),  config);	  System.getProperty(   "line.separator   ")));    	non-compiled	[CE]  	12	None	replace
378	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(config))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(config))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  new  HashSet  <  ErrorReporter>(config))  {	  ErrorReporter    errorReporter,    new    HashSet    <    ErrorReporter>())    {    	non-compiled	[CE]  <identifier>  expected	33	None	replace
379	[BUG]  [BUGGY]  super(config,  sourceString,  ')');  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(config,  sourceString,  ')');  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(config,  sourceString,  ')');	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
380	[BUG]  [BUGGY]  super(config,  sourceString,  errorReporter);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(config,  sourceString,  errorReporter);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(config,  sourceString,  errorReporter);	  super(config,    sourceString);    	non-compiled	[CE]  ')'  expected	14	None	replace
381	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null  ||  sourceString.length()!=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null  ||  sourceString.length()!=  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null  ||  sourceString.length()!=  0)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
382	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null  ||  sourceName.length()  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null  ||  sourceName.length()  ==  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null  ||  sourceName.length()  ==  0)  {	  ErrorReporter    errorReporter,    config,    null)    {    	non-compiled	[CE]  <identifier>  expected	58	None	replace
383	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  fileLevelJsDocBuilder);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  fileLevelJsDocBuilder);	  ErrorReporter    errorReporter,    sourceString);    	non-compiled	[CE]  ';'  expected	29	None	replace
384	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  null);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder,  config.getRootNode(),  null);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder,  config.getRootNode(),  null);	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
385	[BUG]  [BUGGY]  This.rootNodeJsDocBuilder,  config.getRootNode());  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  This.rootNodeJsDocBuilder,  config.getRootNode());  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	This.rootNodeJsDocBuilder,  config.getRootNode());	  this.rootNodeJsDocBuilder,    config.getRootNode());    	non-compiled	[CE]  not  a  statement	9	None	replace
386	[BUG]  [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter(sourceString))  {  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  sourceName,  config.getErrorReporter(sourceString))  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  sourceName,  config.getErrorReporter(sourceString))  {	  ErrorReporter    sourceName,    config.getErrorReporter())    {    	non-compiled	[CE]  ';'  expected	50	None	replace
387	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  Collection  <  String>  fileLevelJsDocBuilders);	  ErrorReporter    errorReporter,    Collection    <    String>    fileLevelJsDocBuilders)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
388	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  null  &&  config.length  >  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  null  &&  config.length  >  0)  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  null  &&  config.length  >  0)  {	  ErrorReporter    errorReporter,    null    &&    sourceString.length()    >    0)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
389	[BUG]  [BUGGY]  System.getProperty( "line.separator "),  config);  this.sourceString  =  sourceString;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.getProperty( "line.separator "),  config);  this.sourceString  =  sourceString;  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.getProperty( "line.separator "),  config);  this.sourceString  =  sourceString;	  System.getProperty(   "line.separator   "));    this.sourceString    =    sourceString;    	non-compiled	[CE]  	61	None	replace
390	[BUG]  [BUGGY]  System.err.println( "Failed  to  parse  source:  %s. "  +  sourceString);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  System.err.println( "Failed  to  parse  source:  %s. "  +  sourceString);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	System.err.println( "Failed  to  parse  source:  %s. "  +  sourceString);	  System.err.println(   "Failed    to    parse    source:   "    +    sourceString);    	non-compiled	[CE]  ')'  expected	55	None	replace
391	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isInterface())  {  [CE]  ';'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isInterface())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isInterface())  {	  ErrorReporter    errorReporter,    config.isErrorReporter())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
392	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isFunctionError())  {  [CE]  ';'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isFunctionError())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isFunctionError())  {	  ErrorReporter    errorReporter,    config.isErrorReporter())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
393	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config.isExtern())  {  [CE]  ';'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config.isExtern())  {  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config.isExtern())  {	  ErrorReporter    errorReporter,    config.isErrorReporter())    {    	non-compiled	[CE]  ';'  expected	5	None	replace
394	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  true);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  super(sourceString,  sourceName,  config,  true);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	super(sourceString,  sourceName,  config,  true);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  ')'  expected	53	None	replace
395	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.findRootNode();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.findRootNode();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.findRootNode();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
396	[BUG]  [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.reset();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.reset();  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	this.rootNodeJsDocBuilder  =  config.rootNodeJsDocBuilder.reset();	  this.rootNodeJsDocBuilder    =    config.rootNodeJsDocBuilder.getRootNode();    	non-compiled	[CE]  ')'  expected	62	None	replace
397	[BUG]  [BUGGY]  ErrorReporter  errorReporter,  config,  null,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,      [BUGGY]  ErrorReporter  errorReporter,  config,  null,  false);  [BUGGY]      this.sourceString  =  sourceString;  this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	104	104	1	replace	ErrorReporter  errorReporter,  config,  null,  false);	  ErrorReporter    errorReporter,    config,    null);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
