bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/ ".equals(config.getSourceName());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/ ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  + "/ ".equals(config.getErrorReporter());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/ ".equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ ",  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/ ",  config.getErrorReporter());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ ",  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ": "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ": "  +  errorReporter);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ": "  +  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
5	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  config: "  +  config);	  this.sourceString    =    sourceString    +   ":   "    +    config);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
6	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ": "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ": "  +  config,  errorReporter);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ": "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  errorReporter);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: "  +  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",: "  +  config);	  this.sourceString    =    sourceString    +   ":   "    +    config);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
9	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSimpleName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSimpleName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSimpleName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ": "  +  errorReporter;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ": "  +  errorReporter;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ": "  +  errorReporter;	  this.sourceString    =    sourceString    +   ":   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
15	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  config;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  config: "  +  config;	  this.sourceString    =    sourceString    +   ":   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
16	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  errorReporter;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: "  +  errorReporter;	  this.sourceString    =    sourceString    +   ":   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
17	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",: "  +  config;	  this.sourceString    =    sourceString    +   ":   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: "  +  config;	  this.sourceString    =    sourceString    +   ":   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
20	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "_ "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "_ "  +  config.getSourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "_ "  +  config.getSourceName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  config.getName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "._ "  +  config.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "._ "  +  config.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "._ "  +  config.getName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
23	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT_SOURCE;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getSourceName();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourceName();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getResourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getResourceName();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawSourceName();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getLineno();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getLineno();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getLineno();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter);	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
35	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this(sourceString,  sourceName,  config.getErrorReporter());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config.getErrorReporter());	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  This.sourceString  =  sourceString;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  This.sourceString  =  sourceString;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString;	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/ ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ": ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ": ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ": ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
40	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "_ ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "_ ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "_ ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";n ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ";n ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";n ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "# ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "# ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "# ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.* "  +  config;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/.* "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.* "  +  config;	  this.sourceString    =    sourceString    +   "/.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.n "  +  config;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/.n "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.n "  +  config;	  this.sourceString    =    sourceString    +   "/.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.html "  +  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/.html "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.html "  +  config;	  this.sourceString    =    sourceString    +   "/.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.js "  +  config;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/.js "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.js "  +  config;	  this.sourceString    =    sourceString    +   "/.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.   "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/.   "  +  errorReporter;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.   "  +  errorReporter;	  this.sourceString    =    sourceString    +   "/.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
48	[BUG]  [BUGGY]  super(sourceString,  sourceName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  super(sourceString,  sourceName);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  sourceName);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  super(sourceString,  sourceName,  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  sourceName,  config);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  super(sourceString);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  super(sourceString);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  null);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ": "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ": "  +  config.getSourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ": "  +  config.getSourceName();	  this.sourceString    =    sourceString    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
55	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",: "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
56	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
57	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getErrorReporter();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getErrorReporter();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporterName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporterName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getErrorReporterName();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
65	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporter(sourceName);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getErrorReporter(sourceName);	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
66	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getRawErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawErrorReporter();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
67	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.class.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.class.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.class.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "._ "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "._ "  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "._ "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "_ "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  + "_ "  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "_ "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
72	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSource();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSource();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSource();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
73	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourceName();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
74	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePosition();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePosition();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourcePosition();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
75	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.toString();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.toString();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
76	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": "  +  config;	  this.sourceString    =    sourceString    +   ":   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
77	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.   "  +  config;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  + "/.   "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.   "  +  config;	  this.sourceString    =    sourceString    +   "/.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
78	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getLocalName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getLocalName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getLocalName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "_ "  +  config.getName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  + "_ "  +  config.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "_ "  +  config.getName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
81	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
83	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  1;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
84	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
85	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": "  +  config);	  this.sourceString    =    sourceString    +   ":   "    +    config);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
86	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: "  +  config);	  this.sourceString    =    sourceString    +   ":   "    +    config);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
87	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getErrorReporter());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
88	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
89	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
90	[BUG]  [BUGGY]  if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
91	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
92	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
93	[BUG]  [BUGGY]  if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
94	[BUG]  [BUGGY]  if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
95	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ":   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
96	[BUG]  [BUGGY]  super(sourceString,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  super(sourceString,  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
97	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this(sourceString,  sourceName,  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
98	[BUG]  [BUGGY]  super(sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  super(sourceString,  errorReporter);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  errorReporter);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
99	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSourceName();  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSourceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSourceName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/null ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/null ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/null ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
101	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/. ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/. ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/. ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
102	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  'n';  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  'n';  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  'n';	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
103	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  /  config.getErrorReporter();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getErrorReporter();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
104	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceFile();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceFile();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceFile();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
105	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceLocation();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceLocation();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceLocation();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
106	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
107	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
108	[BUG]  [BUGGY]  super(sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  super(sourceString,  config,  errorReporter);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config,  errorReporter);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
109	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/. ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/. ".equals(config.getSourceName());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/. ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
110	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/. ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "/. ".equals(config.getErrorReporter());  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/. ".equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
111	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./. "  +  config;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + "./. "  +  config;  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./. "  +  config;	  this.sourceString    =    sourceString    +   "/.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
112	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  config);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
113	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
114	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
115	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSimpleName();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSimpleName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSimpleName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
116	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceReference();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceReference();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceReference();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
117	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceReferenceName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceReferenceName();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceReferenceName();	  this.sourceString    =    sourceString    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
118	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".jsDocBuilder ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".jsDocBuilder ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".jsDocBuilder ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
119	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".js ";  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".js ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".js ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
120	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".js. ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  + ".js. ";  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".js. ";	  this.sourceString    =    sourceString    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	6	None	replace
121	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
122	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
123	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceString  =  sourceString;  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceString  =  sourceString;  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
124	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
125	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  }  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  }	  this.sourceString    =    sourceName;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
126	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  config);  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
127	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePath();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {    [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePath();  [BUGGY]    this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourcePath();	  this.sourceString    =    sourceString    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
