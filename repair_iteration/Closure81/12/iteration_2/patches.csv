bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSource();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSource();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getSource();	  this.sourceString    =    sourceString    +    config.getSource();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
2	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceRef();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceRef();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceRef();	  this.sourceString    =    sourceString    +    config.getSource();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
3	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSource();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSource();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawSource();	  this.sourceString    =    sourceString    +    config.getSource();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
4	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.class.getSimpleName();	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getQualifiedName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getQualifiedName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getQualifiedName();	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter: ";	  this.sourceString    =    sourceString    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	39	None	replace
7	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ": ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": ";	  this.sourceString    =    sourceString    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	39	None	replace
8	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".: ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: ";	  this.sourceString    =    sourceString    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	39	None	replace
9	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.getName();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
10	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.getName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.getName();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
11	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getSourceName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.getName();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
12	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().getName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.getName();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
13	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getLocalName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getLocalName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.getLocalName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.getName();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
14	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.js. ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.js. ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.js. ";	  this.sourceString    =    sourceString    +   ".js.   ";    	non-compiled	[CE]  <identifier>  expected	120	None	replace
15	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".js ".trim();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".js ".trim();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".js ".trim();	  this.sourceString    =    sourceString    +   ".js.   ";    	non-compiled	[CE]  <identifier>  expected	120	None	replace
16	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceReferenceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceReferenceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourceReferenceName();	  this.sourceString    =    sourceString    +    config.getSourceReferenceName();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
17	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getReferenceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getReferenceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getReferenceName();	  this.sourceString    =    sourceString    +    config.getSourceReferenceName();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
18	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceFileName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceFileName();	  this.sourceString    =    sourceString    +    config.getSourceReferenceName();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
19	[BUG]  [BUGGY]  this.sourceName  =  sourceString;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceName  =  sourceString;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceName  =  sourceString;	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceName    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
20	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.class.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.class.getName();	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
21	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  errorReporter.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  errorReporter.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  errorReporter.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
22	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getErrorReporter();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
23	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  fileLevelJsDocBuilder.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  fileLevelJsDocBuilder.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  fileLevelJsDocBuilder.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
24	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class,  config.getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class,  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class,  config.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
25	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSourceName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
26	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/ ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/ ".equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/ ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
27	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ ",  config.getSourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/ ",  config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ ",  config.getSourceName());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.* ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.* ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.* ";	  this.sourceString    =    sourceString    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	101	None	replace
29	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.n ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.n ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.n ";	  this.sourceString    =    sourceString    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	101	None	replace
30	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.html ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.html ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.html ";	  this.sourceString    =    sourceString    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	101	None	replace
31	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.   ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.   ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.   ";	  this.sourceString    =    sourceString    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	101	None	replace
32	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.foo ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.foo ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.foo ";	  this.sourceString    =    sourceString    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	101	None	replace
33	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceLocation();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceLocation();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourceLocation();	  this.sourceString    =    sourceString    +    config.getSourceLocation();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
34	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceNode();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceNode();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceNode();	  this.sourceString    =    sourceString    +    config.getSourceLocation();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
35	[BUG]  [BUGGY]  this.sourceString  =  sourceName  /  config.getSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  /  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  /  config.getSourceName();	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
36	[BUG]  [BUGGY]  this.sourceString  =  sourceString  *  config.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  *  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  *  config.getSourceName();	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
37	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceName()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceName()  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourceName()  +  1;	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
38	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceFileName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourceFileName();	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
39	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getName();	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
40	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ".: "  +  errorReporter);	  this.sourceString    =    sourceString    +   ".:   "    +    errorReporter);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter: "  +  errorReporter);	  this.sourceString    =    sourceString    +   ".:   "    +    errorReporter);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.: "  +  errorReporter);	  this.sourceString    =    sourceString    +   ".:   "    +    errorReporter);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  errorReporter.getSourceName();	  this.sourceString    =    sourceString    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
44	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.toString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.toString();	  this.sourceString    =    sourceString    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
45	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getLineno();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getLineno();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getLineno();	  this.sourceString    =    sourceString    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  sourceString,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
47	[BUG]  [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
48	[BUG]  [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
49	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
50	[BUG]  [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
51	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",: "  +  errorReporter);	  this.sourceString    =    sourceString    +   ",:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceString,  errorReporter,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceString,  errorReporter,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  this.sourceString,  errorReporter,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
54	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
55	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  sourceName,  errorReporter,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  sourceName,  errorReporter,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  sourceName,  errorReporter,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
57	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ": "  +  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": "  +  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    errorReporter);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
58	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ": "  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ": "  +  errorReporter,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ": "  +  errorReporter,  config);	  this.sourceString    =    sourceString    +   ":   "    +    errorReporter);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
60	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
61	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
62	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceString,  0,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceString,  0,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  this.sourceString,  0,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
64	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.js ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.js ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.js ";	  this.sourceString    =    sourceString    +   ".js   ";    	non-compiled	[CE]  <identifier>  expected	119	None	replace
65	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter.js ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter.js ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter.js ";	  this.sourceString    =    sourceString    +   ".js   ";    	non-compiled	[CE]  <identifier>  expected	119	None	replace
66	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  js ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  js ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  js ";	  this.sourceString    =    sourceString    +   ".js   ";    	non-compiled	[CE]  <identifier>  expected	119	None	replace
67	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".js ",  config);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".js ",  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".js ",  config);	  this.sourceString    =    sourceString    +   ".js   ";    	non-compiled	[CE]  <identifier>  expected	119	None	replace
68	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getResourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getResourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getResourceName();	  this.sourceString    =    sourceString    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
69	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getConfig().getResourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getConfig().getResourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getConfig().getResourceName();	  this.sourceString    =    sourceString    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
70	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getResourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getResourceName();	  this.sourceString    =    sourceString    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
71	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  errorReporter.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  errorReporter.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  errorReporter.getName();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
72	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  config.getSourceName();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
73	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  File.separatorChar  +  config.getName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  File.separatorChar  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  File.separatorChar  +  config.getName();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
74	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
75	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.toString();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.toString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  config.toString();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
76	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.jsDocBuilder ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.jsDocBuilder ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.jsDocBuilder ";	  this.sourceString    =    sourceString    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	118	None	replace
77	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ".jsDocBuilder ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ".jsDocBuilder ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ".jsDocBuilder ";	  this.sourceString    =    sourceString    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	118	None	replace
78	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "_jsDocBuilder ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "_jsDocBuilder ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "_jsDocBuilder ";	  this.sourceString    =    sourceString    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	118	None	replace
79	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.jsDocBuilder();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.jsDocBuilder();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.jsDocBuilder();	  this.sourceString    =    sourceString    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	118	None	replace
80	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FONT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FONT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_FONT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_FONT;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
81	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  errorReporter;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_FONT;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
82	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_FONT;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
83	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_FONT;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_FONT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_FONT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_FONT;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
84	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  config;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT  +  config;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_FONT;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
85	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_FONT,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_FONT;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
86	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.* "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.* "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.* "  +  errorReporter;	  this.sourceString    =    sourceString    +   "/.       "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
87	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.n "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.n "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.n "  +  errorReporter;	  this.sourceString    =    sourceString    +   "/.       "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
88	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.html "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.html "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.html "  +  errorReporter;	  this.sourceString    =    sourceString    +   "/.       "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
89	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.js "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.js "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.js "  +  errorReporter;	  this.sourceString    =    sourceString    +   "/.       "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
90	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
91	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().DEFAULT;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().DEFAULT;	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
92	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.deFAULT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.deFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.deFAULT;	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
93	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
94	[BUG]  [BUGGY]  super(sourceString,  sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  sourceName,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  sourceName,  errorReporter);	  super(sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
95	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  sourceName,  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  sourceName,  config.getErrorReporter());	  super(sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
96	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/._ "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/._ "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/._ "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   "._   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
97	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/';  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/';	  this.sourceString    =    sourceString    +    'n';    	non-compiled	[CE]  <identifier>  expected	102	None	replace
98	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  'n';  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  'n';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  'n';	  this.sourceString    =    sourceString    +    'n';    	non-compiled	[CE]  <identifier>  expected	102	None	replace
99	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  'N';  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  'N';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  'N';	  this.sourceString    =    sourceString    +    'n';    	non-compiled	[CE]  <identifier>  expected	102	None	replace
100	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '#';  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '#';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '#';	  this.sourceString    =    sourceString    +    'n';    	non-compiled	[CE]  <identifier>  expected	102	None	replace
101	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_';  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_';	  this.sourceString    =    sourceString    +    'n';    	non-compiled	[CE]  <identifier>  expected	102	None	replace
102	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "# ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "# ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "# ";	  this.sourceString    =    sourceString    +   "#   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
103	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "# ",  errorReporter);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "# ",  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "# ",  errorReporter);	  this.sourceString    =    sourceString    +   "#   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
104	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".# ";  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".# ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".# ";	  this.sourceString    =    sourceString    +   "#   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
105	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "# ",  errorReporter;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "# ",  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "# ",  errorReporter;	  this.sourceString    =    sourceString    +   "#   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
106	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",# ";  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",# ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",# ";	  this.sourceString    =    sourceString    +   "#   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
107	[BUG]  [BUGGY]  This.sourceString  =  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString,  errorReporter);	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
108	[BUG]  [BUGGY]  This.sourceString  =  sourceString  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString  +  config.getErrorReporter();	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
109	[BUG]  [BUGGY]  This.sourceString  =  sourceString  + ": "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString  + ": "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString  + ": "  +  config.getErrorReporter();	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
110	[BUG]  [BUGGY]  This.sourceString  =  sourceString  + "_ "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString  + "_ "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString  + "_ "  +  config.getErrorReporter();	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
111	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  sourceName,  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  sourceName,  config,  errorReporter);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
112	[BUG]  [BUGGY]  super(rootNodeJsDocBuilder,  sourceName,  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(rootNodeJsDocBuilder,  sourceName,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(rootNodeJsDocBuilder,  sourceName,  config);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
113	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  sourceName,  config,  errorsReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  sourceName,  config,  errorsReporter);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
114	[BUG]  [BUGGY]  super(sourceString,  sourceName,  config,  ErrorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  sourceName,  config,  ErrorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  sourceName,  config,  ErrorReporter);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
115	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
116	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.DEFAULT;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  errorReporter.DEFAULT;	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
117	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT,  errorReporter);	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
118	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourceFile();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourceFile();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawSourceFile();	  this.sourceString    =    sourceString    +    config.getSourceFile();    	non-compiled	[CE]  <identifier>  expected	104	None	replace
119	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./ ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./ ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./ ";	  this.sourceString    =    sourceString    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	37	None	replace
120	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/ ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/ ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/ ";	  this.sourceString    =    sourceString    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	37	None	replace
121	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ ",  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/ ",  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ ",  errorReporter);	  this.sourceString    =    sourceString    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	37	None	replace
122	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".null ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".null ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".null ";	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
123	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/errors/null ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/errors/null ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/errors/null ";	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
124	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  null ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  null ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  null ";	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
125	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/false ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/false ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/false ";	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
126	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/errorReporter ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/errorReporter ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/errorReporter ";	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
127	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/null ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/null ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/null ";	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
128	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  '/'.equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  '/'.equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  '/'.equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
129	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getResourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getResourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getResourceName());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
130	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceFile());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceFile());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceFile());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
131	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getLocalFileName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getLocalFileName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getLocalFileName());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
132	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceReference());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceReference());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceReference());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
133	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  config: "  +  errorReporter;	  this.sourceString    =    sourceString    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
134	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "  config: "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "  config: "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "  config: "  +  config;	  this.sourceString    =    sourceString    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
135	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ",  config: "  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ",  config: "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ",  config: "  +  config;	  this.sourceString    =    sourceString    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
136	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".config: "  +  config;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".config: "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".config: "  +  config;	  this.sourceString    =    sourceString    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
137	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config.getErrorReporter(),  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config.getErrorReporter(),  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config.getErrorReporter(),  errorReporter);	  this(sourceString,    sourceName,    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
138	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter.getErrorReporter());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter.getErrorReporter());	  this(sourceString,    sourceName,    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
139	[BUG]  [BUGGY]  setSourceName(sourceString,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  setSourceName(sourceString,  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	setSourceName(sourceString,  config.getErrorReporter());	  this(sourceString,    sourceName,    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
140	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.config.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.config.getName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
141	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getQualifiedName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getQualifiedName();	  this.sourceString    =    sourceString    +    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
142	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getFileName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getFileName();	  this.sourceString    =    sourceString    +    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
143	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getLocalFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getLocalFileName();	  this.sourceString    =    sourceString    +    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
144	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.class.getSimpleName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.class.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.class.getSimpleName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
145	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSimpleName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getSimpleName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
146	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourcePath();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourcePath();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getSourcePath();	  this.sourceString    =    sourceString    +    config.getSourcePath();    	non-compiled	[CE]  <identifier>  expected	127	None	replace
147	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePath()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePath()  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourcePath()  +  1;	  this.sourceString    =    sourceString    +    config.getSourcePath();    	non-compiled	[CE]  <identifier>  expected	127	None	replace
148	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourcePath();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourcePath();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawSourcePath();	  this.sourceString    =    sourceString    +    config.getSourcePath();    	non-compiled	[CE]  <identifier>  expected	127	None	replace
149	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  '/'.equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  '/'.equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  '/'.equals(config.getSourceName());	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
150	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getRawSourceName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getRawSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getRawSourceName());	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
151	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getName());	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
152	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  1;	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
153	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",_ "  +  config.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",_ "  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",_ "  +  config.getName();	  this.sourceString    =    sourceName    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
154	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getLocalName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getLocalName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getLocalName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getLocalName();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
155	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getLocalName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getLocalName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getLocalName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getLocalName();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
156	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getCharno();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getCharno();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getCharno();	  this.sourceString    =    sourceString    +    config.getLineno();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
157	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceReference();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceReference();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getSourceReference();	  this.sourceString    =    sourceString    +    config.getSourceReference();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
158	[BUG]  [BUGGY]  super(sourceString,  config,  ErrorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  config,  ErrorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config,  ErrorReporter);	  super(sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
159	[BUG]  [BUGGY]  super(sourceString,  config,  errorReporter,  false);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  config,  errorReporter,  false);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config,  errorReporter,  false);	  super(sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
160	[BUG]  [BUGGY]  super(sourceString,  config,  errorReporter,  null);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  config,  errorReporter,  null);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config,  errorReporter,  null);	  super(sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
161	[BUG]  [BUGGY]  super(sourceString,  null,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  null,  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  null,  config,  errorReporter);	  super(sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
162	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ";: "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";: "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ",:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
163	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",: "  +  config.getSourceName();	  this.sourceString    =    sourceString    +   ",:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
164	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  config,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    config);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
165	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT,  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT,  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    config);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
166	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT,  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT,  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    config);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
167	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  |  FileLevelJsDocBuilder.DEFAULT,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  |  FileLevelJsDocBuilder.DEFAULT,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  |  FileLevelJsDocBuilder.DEFAULT,  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    config);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
168	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  fileLevelJsDocBuilder);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    config);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
169	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
170	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter: "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
171	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  config: "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
172	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
173	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
174	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  fileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
175	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
176	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
177	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE,  errorReporter);	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
178	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getSourceName();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
179	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  '_'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  '_'  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  '_'  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
180	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getConfig().getErrorReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getConfig().getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getConfig().getErrorReporter();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
181	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getName();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
182	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getRawErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getRawErrorReporter();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
183	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getResourceName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getResourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getResourceName();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
184	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  |  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  |  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  |  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
185	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  *  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  *  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  *  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
186	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
187	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
188	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  fileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  fileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  fileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
189	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/._ "  +  config.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/._ "  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/._ "  +  config.getName();	  this.sourceString    =    sourceString    +   "._   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
190	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getRawErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getRawErrorReporter();	  this.sourceString    =    sourceString    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
191	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawReporter();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawReporter();	  this.sourceString    =    sourceString    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
192	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawWarningReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawWarningReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawWarningReporter();	  this.sourceString    =    sourceString    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
193	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawWarning();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawWarning();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawWarning();	  this.sourceString    =    sourceString    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
194	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.   ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.   ".equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.   ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
195	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.* ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.* ".equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.* ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
196	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.html ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.html ".equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.html ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
197	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.n ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.n ".equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.n ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
198	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporter(sourceName,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporter(sourceName,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getErrorReporter(sourceName,  errorReporter);	  this.sourceString    =    sourceString    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
199	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporter(sourceName);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getErrorReporter(sourceName);	  this.sourceString    =    sourceString    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
200	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporter(errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporter(errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getErrorReporter(errorReporter);	  this.sourceString    =    sourceString    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
201	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    config;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
202	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  config;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    config;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
203	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config.toString();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config.toString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config.toString();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    config;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
204	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    config;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
205	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".js "  +  config;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".js "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".js "  +  config;	  this.sourceString    =    sourceString    +   "/.js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
206	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  config;	  this.sourceString    =    sourceString    +   "/.js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
207	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",/.js "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",/.js "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",/.js "  +  config;	  this.sourceString    =    sourceString    +   "/.js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
208	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.js "  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.js "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.js "  +  config;	  this.sourceString    =    sourceString    +   "/.js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
209	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.: "  +  config);	  this.sourceString    =    sourceString    +   ".:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	86	None	replace
210	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",: "  +  errorReporter;	  this.sourceString    =    sourceString    +   ",:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
211	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorsReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorsReporter);	  this(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
212	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  ErrorReporter);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  ErrorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  ErrorReporter);	  this(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
213	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSourceName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSourceName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSourceName();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
214	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSourceName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSourceName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSourceName();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
215	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getRawClass().getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getRawClass().getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getRawClass().getSourceName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSourceName();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
216	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getSourceName();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
217	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  ':'  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  ':'  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  ':'  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
218	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getConfig().getErrorReporter();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getConfig().getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getConfig().getErrorReporter();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
219	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getRawErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getRawErrorReporter();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
220	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getName();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getName();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
221	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getErrorReporterName();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getErrorReporterName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getErrorReporterName();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
222	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  errorReporter.getErrorReporter();	  this.sourceString    =    sourceString    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
223	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getConfig().getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getConfig().getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getConfig().getErrorReporter();	  this.sourceString    =    sourceString    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
224	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getRawErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getRawErrorReporter();	  this.sourceString    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
225	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  config;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.: "  +  config;	  this.sourceString    =    sourceString    +   ".:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
226	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
227	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  rootNodeJsDocHolder);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  rootNodeJsDocHolder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  rootNodeJsDocHolder);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
228	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
229	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter,  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
230	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.toString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.toString();	  this.sourceString    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
231	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getRawSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getRawSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getRawSourceName();	  this.sourceString    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
232	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ": "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": "  +  errorReporter;	  this.sourceString    =    sourceName    +   ":   "    +    config;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
233	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getConfig().getRawSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getConfig().getRawSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getConfig().getRawSourceName();	  this.sourceString    =    sourceString    +    config.getRawSourceName();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
234	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  false);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  false);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  false);	  this(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
235	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  fileLevelJsDocBuilder);	  this(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
236	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  fileOverviewInfo);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  fileOverviewInfo);	  this(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
237	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  true);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  true);	  this(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
238	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
239	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  this.sourceString,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
241	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.foo "  +  config;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.foo "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.foo "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
242	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.xml "  +  config;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.xml "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.xml "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
243	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.fxml "  +  config;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.fxml "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.fxml "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
244	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.rw "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.rw "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.rw "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
245	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.rfc "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.rfc "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.rfc "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
246	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.DEFAULT;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
247	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.config;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
248	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.defaultErrorReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.defaultErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.defaultErrorReporter();	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
249	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getMessage();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getMessage();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getMessage();	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
250	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".html "  +  config;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".html "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".html "  +  config;	  this.sourceString    =    sourceString    +   "/.html   "    +    config;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
251	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",/.html "  +  config;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",/.html "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",/.html "  +  config;	  this.sourceString    =    sourceString    +   "/.html   "    +    config;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
252	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.html "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.html "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.html "  +  config;	  this.sourceString    =    sourceString    +   "/.html   "    +    config;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
253	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.toFile();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.toFile();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.toFile();	  this.sourceString    =    sourceString    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
254	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
255	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  errorReporter.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
256	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  errorReporter.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
257	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.deFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.deFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.deFAULT_SOURCE;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
258	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT_SOURCE,  config);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT_SOURCE,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.DEFAULT_SOURCE,  config);	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
259	[BUG]  [BUGGY]  super(sourceString,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config.getErrorReporter());	  super(sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
260	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".* "  +  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".* "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".* "  +  config;	  this.sourceString    =    sourceString    +   "/.*   "    +    config;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
261	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",/.* "  +  config;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",/.* "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",/.* "  +  config;	  this.sourceString    =    sourceString    +   "/.*   "    +    config;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
262	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.* ",  config;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.* ",  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.* ",  config;	  this.sourceString    =    sourceString    +   "/.*   "    +    config;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
263	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",_ "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",_ "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",_ "  +  config.getErrorReporter();	  this.sourceString    =    sourceName    +   "_   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
264	[BUG]  [BUGGY]  this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.class.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.class.getName();	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
265	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getSimpleName();	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
266	[BUG]  [BUGGY]  this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.class.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.class.getName();	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
267	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getName()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getName()  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getName()  +  1;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
268	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getQualifiedName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getQualifiedName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class.getQualifiedName();	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
269	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  config,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(),    config);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
270	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(),  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(),    config);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
271	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSimpleName(),  FileLevelJsDocBuilder.class);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSimpleName(),  FileLevelJsDocBuilder.class);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSimpleName(),  FileLevelJsDocBuilder.class);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(),    config);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
272	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName(),  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName(),  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName(),  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(),    config);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
273	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(),  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(),    config);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
274	[BUG]  [BUGGY]  super(rootNodeJsDocBuilder,  sourceString);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(rootNodeJsDocBuilder,  sourceString);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(rootNodeJsDocBuilder,  sourceString);	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
275	[BUG]  [BUGGY]  this(sourceString,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  config,  errorReporter);	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
276	[BUG]  [BUGGY]  super(rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(rootNodeJsDocBuilder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(rootNodeJsDocBuilder);	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
277	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";no ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ";no ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";no ";	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
278	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";nar ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ";nar ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";nar ";	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
279	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";n ",  config);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ";n ",  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";n ",  config);	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
280	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)  ==  '/'))  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)  ==  '/'))  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)  ==  '/'))  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceString    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
281	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)!=  '/'))  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)!=  '/'))  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)!=  '/'))  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceString    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
282	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceString    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
283	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.length()  ==  0))  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.length()  ==  0))  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.length()  ==  0))  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceString    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
284	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)!=  '/'))  {  this.sourceString  =  sourceString;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)!=  '/'))  {  this.sourceString  =  sourceString;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.length()  >  0)||(sourceString.charAt(sourceName.length()  -  1)!=  '/'))  {  this.sourceString  =  sourceString;	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceString    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
285	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter: "  +  errorReporter;	  this.sourceString    =    sourceString    +   ":   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
286	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
287	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder.config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder.config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder.config;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
288	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileOverviewInfo;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileOverviewInfo;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileOverviewInfo;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
289	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  2;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  2;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
290	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
291	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    1;    	non-compiled	[CE]  <identifier>  expected	26	None	replace
292	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  errorReporter.getSimpleName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  errorReporter.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  errorReporter.getSimpleName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
293	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class,  config.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class,  config.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class,  config.getSimpleName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
294	[BUG]  [BUGGY]  this.sourceString  =  sourceString  *  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  *  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  *  config.getErrorReporter();	  this.sourceString    =    sourceString    /    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
295	[BUG]  [BUGGY]  this.sourceString  =  sourceName  /  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  /  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  /  config.getErrorReporter();	  this.sourceString    =    sourceString    /    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
296	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  errorReporter.getErrorReporter();	  this.sourceString    =    sourceString    /    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
297	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getRawErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getRawErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getRawErrorReporter();	  this.sourceString    =    sourceString    /    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
298	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.: "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ".:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
299	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter: "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ".:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
300	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.class.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  errorReporter.class.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  errorReporter.class.getName();	  this.sourceString    =    sourceString    +    errorReporter.class.getName();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
301	[BUG]  [BUGGY]  this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
302	[BUG]  [BUGGY]  this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
303	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT,  errorReporter);	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
304	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  +  errorReporter;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  +  errorReporter;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
305	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  +  1;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  +  1;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
306	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ "  +  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/ "  +  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ "  +  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
307	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter: "  +  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter: "  +  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
308	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
309	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ "  +  errorReporter,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/ "  +  errorReporter,  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ "  +  errorReporter,  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
310	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./ "  +  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./ "  +  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./ "  +  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
311	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  config,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  config,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName(),    config);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
312	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName(),    config);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
313	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getName(),  FileLevelJsDocBuilder.class);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getName(),  FileLevelJsDocBuilder.class);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getName(),  FileLevelJsDocBuilder.class);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName(),    config);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
314	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getName(),  config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getName(),  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getName(),  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName(),    config);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
315	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName(),    config);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
316	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ",  errorReporter ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ",  errorReporter ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ",  errorReporter ";	  this.sourceString    =    sourceString    +   ",    errorReporter   ";    	non-compiled	[CE]  <identifier>  expected	38	None	replace
317	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter;	  this.sourceString    =    sourceString    +   ",    errorReporter   ";    	non-compiled	[CE]  <identifier>  expected	38	None	replace
318	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter ",  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter ",  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter ",  config);	  this.sourceString    =    sourceString    +   ",    errorReporter   ";    	non-compiled	[CE]  <identifier>  expected	38	None	replace
319	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config,  errorReporter);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config,  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(config);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
320	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getSimpleName(config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(config);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
321	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config),  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config),  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config),  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(config);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
322	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName(config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName(config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getSimpleName(config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(config);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
323	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config,  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config,  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(config);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
324	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourcePosition();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSourcePosition();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourcePosition();	  this.sourceString    =    sourceString    +    config.getSourcePosition();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
325	[BUG]  [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
326	[BUG]  [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString  ==  null)  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
327	[BUG]  [BUGGY]  ||  sourceString!=  null)  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString!=  null)  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString!=  null)  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
328	[BUG]  [BUGGY]  ||  sourceString!=  null)  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString!=  null)  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString!=  null)  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
329	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ": "  +  config.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ": "  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ": "  +  config.getName();	  this.sourceString    =    sourceString    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
330	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ": "  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ": "  +  config.getSourceName();	  this.sourceString    =    sourceString    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
331	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".: "  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".: "  +  config.getSourceName();	  this.sourceString    =    sourceString    +   ":   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
332	[BUG]  [BUGGY]  this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  *  FileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
333	[BUG]  [BUGGY]  this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  /  FileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
334	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  1;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
335	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  errorReporter;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
336	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE,  errorReporter);	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
337	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "._ ";  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "._ ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "._ ";	  this.sourceString    =    sourceString    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	40	None	replace
338	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "_ ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "_ ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "_ ";	  this.sourceString    =    sourceString    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	40	None	replace
339	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.* ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.* ".equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.* ".equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
340	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.   ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.   ".equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.   ".equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
341	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.html ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.html ".equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.html ".equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
342	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.n ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.n ".equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.n ".equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
343	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getQualifiedName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getQualifiedName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.class.getQualifiedName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
344	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
345	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getLocalName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getLocalName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getLocalName();	  this.sourceString    =    sourceString    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
346	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  rootNodeJsDocBuilder);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  rootNodeJsDocBuilder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  rootNodeJsDocBuilder);	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
347	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  new  IRFactory());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  new  IRFactory());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  new  IRFactory());	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
348	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  new  HashSet  <  String>());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  new  HashSet  <  String>());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  new  HashSet  <  String>());	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
349	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getErrorReporterName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getErrorReporterName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getErrorReporterName();	  this.sourceString    =    sourceString    +    config.getErrorReporterName();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
350	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporterName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporterName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getErrorReporterName();	  this.sourceString    =    sourceString    +    config.getErrorReporterName();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
351	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporterType();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporterType();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getErrorReporterType();	  this.sourceString    =    sourceString    +    config.getErrorReporterName();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
352	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  config: "  +  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  config: "  +  errorReporter);	  this.sourceString    =    sourceString    +   ",    config:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
353	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "  config: "  +  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "  config: "  +  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "  config: "  +  config);	  this.sourceString    =    sourceString    +   ",    config:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
354	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ",  config: "  +  config);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ",  config: "  +  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ",  config: "  +  config);	  this.sourceString    =    sourceString    +   ",    config:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
355	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./ ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./ ".equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./ ".equals(config.getErrorReporter());	  this.sourceString    =    sourceName    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
356	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",/ ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",/ ".equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",/ ".equals(config.getErrorReporter());	  this.sourceString    =    sourceName    +   "/   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
357	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    -    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
358	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT  -  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT  -  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    -    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
359	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT  -  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.DEFAULT  -  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    -    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
360	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT  -  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.DEFAULT  -  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    -    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
361	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  2;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  2;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  2;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    -    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
362	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "_ "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "_ "  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "_ "  +  config.getSourceName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
363	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "._ "  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "._ "  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "._ "  +  config.getSourceName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
364	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.: "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.: "  +  errorReporter;	  this.sourceString    =    sourceString    +   ".:   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
365	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ".: "  +  errorReporter;	  this.sourceString    =    sourceString    +   ".:   "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
366	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".   "  +  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".   "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".   "  +  config;	  this.sourceString    =    sourceName    +   "/.       "    +    config;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
367	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/. ".  +  config;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/. ".  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/. ".  +  config;	  this.sourceString    =    sourceName    +   "/.       "    +    config;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
368	[BUG]  [BUGGY]  Preconditions.checkState(sourceString.length()  ==  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  Preconditions.checkState(sourceString.length()  ==  0);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	Preconditions.checkState(sourceString.length()  ==  0);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
369	[BUG]  [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
370	[BUG]  [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()!=  0);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()!=  0);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()!=  0);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
371	[BUG]  [BUGGY]  ||  sourceString  ==  null)  {  Preconditions.checkState(sourceString.length()  ==  0);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString  ==  null)  {  Preconditions.checkState(sourceString.length()  ==  0);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString  ==  null)  {  Preconditions.checkState(sourceString.length()  ==  0);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
372	[BUG]  [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  Preconditions.checkState(sourceString.length()  ==  0);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
373	[BUG]  [BUGGY]  This.sourceString  =  sourceName;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceName;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceName;	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
374	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ ".jsDocBuilder;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/ ".jsDocBuilder;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ ".jsDocBuilder;	  this.sourceString    =    sourceString    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	37	None	replace
375	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./null ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./null ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./null ";	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
376	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ",: "  +  config;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ",: "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ",: "  +  config;	  this.sourceString    =    sourceString    +   ",:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	17	None	replace
377	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceIndex();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceIndex();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceIndex();	  this.sourceString    =    sourceString    +    config.getSourcePosition();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
378	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.config.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.config.getName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	67	None	replace
379	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  fileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  fileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  fileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
380	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.   "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.   "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.   "  +  errorReporter;	  this.sourceString    =    sourceString    +   "/.       "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
381	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.n ".  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.n ".  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.n ".  +  errorReporter;	  this.sourceString    =    sourceString    +   "/.       "    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
382	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.DEFAULT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  errorReporter.DEFAULT;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
383	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
384	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_FONT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_FONT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_FONT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_FONT;    	non-compiled	[CE]  <identifier>  expected	84	None	replace
385	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "#n ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "#n ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "#n ";	  this.sourceString    =    sourceString    +   "#   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
386	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/ ",  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/ ",  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/ ",  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
387	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/. ",  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/. ",  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/. ",  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
388	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/',  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/',  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/',  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
389	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./ "  +  errorReporter,  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./ "  +  errorReporter,  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./ "  +  errorReporter,  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
390	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT  +  errorReporter;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.DEFAULT  +  errorReporter;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
391	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT_DIRECTIVES;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.DEFAULT_DIRECTIVES;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.DEFAULT_DIRECTIVES;	  this.sourceString    =    sourceString    +    errorReporter.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
392	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(sourceName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(sourceName);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(sourceName);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
393	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(),  errorReporter);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(),  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(),  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
394	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.toString();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.toString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.toString();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.getName();    	non-compiled	[CE]  <identifier>  expected	81	None	replace
395	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
396	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
397	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.endsWith( ".java ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.endsWith( ".java ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.endsWith( ".java ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
398	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  ==  0))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.length()  ==  0))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.length()  ==  0))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
399	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(SourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(SourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(SourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
400	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
401	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceReference();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceReference();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourceReference();	  this.sourceString    =    sourceString    +    config.getSourceReference();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
402	[BUG]  [BUGGY]  super(sourceString,  config,  errorReporter,  sourceName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  config,  errorReporter,  sourceName);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config,  errorReporter,  sourceName);	  super(sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
403	[BUG]  [BUGGY]  super(sourceString,  false,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  false,  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  false,  config,  errorReporter);	  super(sourceString,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
404	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getErrorReporter(config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getErrorReporter(config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getErrorReporter(config);	  this.sourceString    =    sourceString    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
405	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  System.err);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  System.err);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  System.err);	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
406	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  registry);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  registry);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  registry);	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
407	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceFile();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceFile();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourceFile();	  this.sourceString    =    sourceString    /    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
408	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSource();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSource();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSource();	  this.sourceString    =    sourceString    /    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	103	None	replace
409	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config  +  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config  +  FileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config  +  FileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    config;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
410	[BUG]  [BUGGY]  super(sourceString,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  fileLevelJsDocBuilder);	  super(sourceString,    sourceName);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
411	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getName();	  this.sourceString    =    sourceName    +   "_   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	80	None	replace
412	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./.* "  +  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./.* "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./.* "  +  config;	  this.sourceString    =    sourceString    +   "./.   "    +    config;    	non-compiled	[CE]  <identifier>  expected	111	None	replace
413	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  rootNodeJsDocHolder;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  rootNodeJsDocHolder;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  rootNodeJsDocHolder;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	106	None	replace
414	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.* "  +  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.* "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.* "  +  config;	  this.sourceString    =    sourceString    +   "/.*   "    +    config;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
415	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ",: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ",: "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ",: "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ",:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
416	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter, ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",  errorReporter, ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",  errorReporter, ";	  this.sourceString    =    sourceString    +   ",    errorReporter   ";    	non-compiled	[CE]  <identifier>  expected	38	None	replace
417	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourcePosition();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourcePosition();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourcePosition();	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
418	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceReferenceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceReferenceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourceReferenceName();	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
419	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourcePath();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSourcePath();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourcePath();	  this.sourceString    =    sourceString    +    config.getSourcePath();    	non-compiled	[CE]  <identifier>  expected	127	None	replace
420	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  fileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  fileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  fileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
421	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
422	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceName,  errorReporter,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  this.sourceName,  errorReporter,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  this.sourceName,  errorReporter,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
423	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
424	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceName;  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
425	[BUG]  [BUGGY]  System.arraycopy(sourceString,  0,  config,  errorReporter,  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  System.arraycopy(sourceString,  0,  config,  errorReporter,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	System.arraycopy(sourceString,  0,  config,  errorReporter,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
426	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  errorReporter.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  errorReporter.getSourceName();	  this.sourceString    =    sourceString    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
427	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceFileName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getSourceFileName();	  this.sourceString    =    sourceString    +    errorReporter.getSourceName();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
428	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceFile();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getSourceFile();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getSourceFile();	  this.sourceString    =    sourceString    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
429	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getLocalFileName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter.getLocalFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter.getLocalFileName();	  this.sourceString    =    sourceString    +    errorReporter.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
430	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getSimpleName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getSimpleName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
431	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getResourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getResourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getResourceName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
432	[BUG]  [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceName    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
433	[BUG]  [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  sourceName!=  null)  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  sourceName!=  null)  {  this.sourceString  =  sourceString;  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceName    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
434	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getLineno();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getLineno();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  config.getLineno();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
435	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getLocalName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  config.getLocalName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  config.getLocalName();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
436	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  errorReporter  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  errorReporter  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  errorReporter  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   "._   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
437	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "._ "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "._ "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "._ "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   "._   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
438	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "/.n "  +  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "/.n "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "/.n "  +  config;	  this.sourceString    =    sourceName    +   "/.       "    +    config;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
439	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder.toString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  fileLevelJsDocBuilder.toString();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    fileLevelJsDocBuilder;    	non-compiled	[CE]  <identifier>  expected	107	None	replace
440	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceString;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceString;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceString;	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
441	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( "- ")))  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
442	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.startsWith( "- ")))  {  this.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.startsWith( "- ")))  {  this.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.startsWith( "- ")))  {  this.sourceString  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
443	[BUG]  [BUGGY]  Preconditions.checkState(sourceString.length()!=  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  Preconditions.checkState(sourceString.length()!=  0);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	Preconditions.checkState(sourceString.length()!=  0);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
444	[BUG]  [BUGGY]  Preconditions.checkState(sourceString  ==  null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  Preconditions.checkState(sourceString  ==  null);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	Preconditions.checkState(sourceString  ==  null);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
445	[BUG]  [BUGGY]  Preconditions.checkState(sourceString!=  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  Preconditions.checkState(sourceString!=  null);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	Preconditions.checkState(sourceString!=  null);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
446	[BUG]  [BUGGY]  Preconditions.checkState(sourceString.length()  >=  0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  Preconditions.checkState(sourceString.length()  >=  0);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	Preconditions.checkState(sourceString.length()  >=  0);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
447	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
448	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
449	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString  ==  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString  ==  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString  ==  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
450	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.equals( " ")))  {  this.sourceString  =  sourceName;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.equals( " ")))  {  this.sourceString  =  sourceName;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.equals( " ")))  {  this.sourceString  =  sourceName;	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
451	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.equals( " ")))  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.equals( " ")))  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.equals( " ")))  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
452	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.length()  >  0)||(sourceString!=  null  &&  errorReporter.length()  >  0))  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
453	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceFile();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceFile();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourceFile();	  this.sourceString    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
454	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSource();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSource();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSource();	  this.sourceString    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
455	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  errorReporter;	  this.sourceString    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
456	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':';  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':';	  this.sourceString    =    sourceString    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	39	None	replace
457	[BUG]  [BUGGY]  super(sourceString.toLowerCase());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString.toLowerCase());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString.toLowerCase());	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
458	[BUG]  [BUGGY]  super(sourceString,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  false);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  false);	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
459	[BUG]  [BUGGY]  super(sourceString,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  null);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  null);	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
460	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSource();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSource();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getSource();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
461	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceLocation();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceLocation();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getSourceLocation();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
462	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceNameReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getSourceNameReporter();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
463	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceFile();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceFile();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getSourceFile();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
464	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT,  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT,  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    config);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
465	[BUG]  [BUGGY]  super(SourceString,  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(SourceString,  sourceName,  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(SourceString,  sourceName,  config,  errorReporter);	  super(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
466	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSimpleName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSimpleName();	  this.sourceString    =    sourceString    +    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
467	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.jsDocBuilder;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.jsDocBuilder;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.jsDocBuilder;	  this.sourceString    =    sourceString    +   "/.js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
468	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePrefix();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSourcePrefix();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourcePrefix();	  this.sourceString    =    sourceString    +    config.getSourceReferenceName();    	non-compiled	[CE]  <identifier>  expected	117	None	replace
469	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getLineno();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getLineno();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getLineno();	  this.sourceString    =    sourceString    +    config.getLineno();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
470	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";null ";  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ";null ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";null ";	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
471	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";neb ";  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ";neb ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";neb ";	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
472	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ";negative. ";  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ";negative. ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ";negative. ";	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
473	[BUG]  [BUGGY]  super(sourceString,  errorReporter,  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  errorReporter,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  errorReporter,  config);	  super(sourceString,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
474	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
475	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
476	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
477	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorRe  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorRe  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorRe	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
478	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ",: "  +  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ",: "  +  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ",: "  +  config);	  this.sourceString    =    sourceString    +   ",:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
479	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getSourceString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getSourceString();	  this.sourceString    =    sourceName    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
480	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.FIELD_NAME;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.FIELD_NAME;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.FIELD_NAME;	  this.sourceString    =    sourceString    +   "_   ";    	non-compiled	[CE]  <identifier>  expected	40	None	replace
481	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "./.   ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "./.   ".equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "./.   ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	109	None	replace
482	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  'n';  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  'n';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  'n';	  this.sourceString    =    sourceString    +    'n';    	non-compiled	[CE]  <identifier>  expected	102	None	replace
483	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ".: "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
484	[BUG]  [BUGGY]  super(sourceString,  null,  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  null,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  null,  config);	  super(sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
485	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  '/';  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  '/';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  '/';	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
486	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.indexOf(config.getSourceName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.indexOf(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.indexOf(config.getSourceName());	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
487	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  '_';  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  '_';  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceName())+  '_';	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
488	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.startsWith(config.getSourceName());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.startsWith(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.startsWith(config.getSourceName());	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
489	[BUG]  [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  setErrorReporter(errorReporter);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  setErrorReporter(errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  setErrorReporter(errorReporter);  }	  this(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
490	[BUG]  [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  System.arraycopy(rootNodeJsDocBuilder,  rootNode,  fileLevelJsDocBuilder,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  System.arraycopy(rootNodeJsDocBuilder,  rootNode,  fileLevelJsDocBuilder,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  System.arraycopy(rootNodeJsDocBuilder,  rootNode,  fileLevelJsDocBuilder,  errorReporter);  }	  this(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
491	[BUG]  [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  this(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
492	[BUG]  [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  System.arraycopy(rootNodeJsDocBuilder,  0,  sourceName,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  System.arraycopy(rootNodeJsDocBuilder,  0,  sourceName,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  this(sourceString,  sourceName,  config);  }  else  {  System.arraycopy(rootNodeJsDocBuilder,  0,  sourceName,  errorReporter);  }	  this(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
493	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  fileLevelJsDocBuilder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(),  fileLevelJsDocBuilder);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getName(),    config);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
494	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  sourceName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  sourceName);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT,  sourceName);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
495	[BUG]  [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
496	[BUG]  [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
497	[BUG]  [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  this.sourceName  =  sourceString;  }	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
498	[BUG]  [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  Class  <?>  fileLevelJsDocBuilder  =  new  Class  <?>();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  Class  <?>  fileLevelJsDocBuilder  =  new  Class  <?>();  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  Class  <?>  fileLevelJsDocBuilder  =  new  Class  <?>();  }	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
499	[BUG]  [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  System.arraycopy(sourceString,  0,  fileLevelJsDocBuilder,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  System.arraycopy(sourceString,  0,  fileLevelJsDocBuilder,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString!=  null)  {  This.sourceString  =  sourceString;  }  else  {  System.arraycopy(sourceString,  0,  fileLevelJsDocBuilder,  errorReporter);  }	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
500	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
501	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
502	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
503	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceName.equals( " ")))  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
504	[BUG]  [BUGGY]  ||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceName!=  null  &&  sourceString.equals( " ")))  {  this.sourceString  =  sourceName;  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
505	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  1L;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  1L;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  -  1L;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    -    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
506	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  errorReporter);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".,  config: "  +  errorReporter);	  this.sourceString    =    sourceString    +   ",    config:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
507	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  errorReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".,  config: "  +  errorReporter;	  this.sourceString    =    sourceString    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
508	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.rf "  +  config;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.rf "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.rf "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
509	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.jsdk "  +  config;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.jsdk "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.jsdk "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
510	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.jsDoc   "  +  config;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.jsDoc   "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.jsDoc   "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
511	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.prototype.js "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.prototype.js "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.prototype.js "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
512	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceNameLocation();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getSourceNameLocation();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getSourceNameLocation();	  this.sourceString    =    sourceString    +    config.getSourceLocation();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
513	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + "._ "  +  config.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + "._ "  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + "._ "  +  config.getName();	  this.sourceString    =    sourceString    +   "._   "    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
514	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  messageReporter;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  messageReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT_SOURCE  +  messageReporter;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT_SOURCE    +    errorReporter;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
515	[BUG]  [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  + ".: "  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  + ".: "  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ".:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
516	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_RESULT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_RESULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_RESULT;	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	59	None	replace
517	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSource());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSource());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSource());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
518	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceLocation());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceLocation());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceLocation());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
519	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceNameReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getSourceNameReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getSourceNameReporter());	  this.sourceString    =    sourceString    +    '/'.equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	87	None	replace
520	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class.getName(),  errorReporter);	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
521	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(config);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getName(config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(config);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
522	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config.createErrorReporter());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config.createErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config.createErrorReporter());	  this(sourceString,    sourceName,    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
523	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporterName(sourceName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getErrorReporterName(sourceName);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getErrorReporterName(sourceName);	  this.sourceString    =    sourceString    +    config.getErrorReporterName();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
524	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSource();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSource();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getSource();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
525	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceNameReporter();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceNameReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getSourceNameReporter();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
526	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceLocation();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceLocation();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getSourceLocation();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
527	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceFile();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceFile();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getSourceFile();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
528	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.class,  config.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
529	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.toString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.toString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.toString();	  this.sourceString    =    sourceString    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
530	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.name();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.name();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.name();	  this.sourceString    =    sourceString    +    config.toString();    	non-compiled	[CE]  <identifier>  expected	75	None	replace
531	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.config.getSimpleName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.config.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.config.getSimpleName();	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
532	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceReference();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceReference();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourceReference();	  this.sourceString    =    sourceString    +    config.getSourceReference();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
533	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FilelevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FilelevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FilelevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
534	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileTypeJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileTypeJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileTypeJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	61	None	replace
535	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".rfs: ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".rfs: ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".rfs: ";	  this.sourceString    =    sourceString    +   ":   ";    	non-compiled	[CE]  <identifier>  expected	39	None	replace
536	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceReference();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  ':'  +  config.getSourceReference();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  ':'  +  config.getSourceReference();	  this.sourceString    =    sourceString    +    ':'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	95	None	replace
537	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.*n ";  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.*n ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.*n ";	  this.sourceString    =    sourceString    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	101	None	replace
538	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./. ";  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./. ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./. ";	  this.sourceString    =    sourceString    +   "/.   ";    	non-compiled	[CE]  <identifier>  expected	101	None	replace
539	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  'n',  errorReporter);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  'n',  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  'n',  errorReporter);	  this.sourceString    =    sourceString    +    'n';    	non-compiled	[CE]  <identifier>  expected	102	None	replace
540	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/ ",  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/ ",  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/ ",  config);	  this.sourceString    =    sourceString    +   "/   ";    	non-compiled	[CE]  <identifier>  expected	37	None	replace
541	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FilelevelJsDocBuilder.class.getSimpleName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FilelevelJsDocBuilder.class.getSimpleName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FilelevelJsDocBuilder.class.getSimpleName();	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
542	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/null ",  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/null ",  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/null ",  config);	  this.sourceString    =    sourceString    +   "/null   ";    	non-compiled	[CE]  <identifier>  expected	100	None	replace
543	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
544	[BUG]  [BUGGY]  if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
545	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
546	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
547	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporter(sourceString);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  config.getErrorReporter(sourceString);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  config.getErrorReporter(sourceString);	  this.sourceString    =    sourceName    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
548	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config).toLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config).toLowerCase();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getSimpleName(config).toLowerCase();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(config);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
549	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.. "  +  config;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.. "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.. "  +  config;	  this.sourceString    =    sourceName    +   "/.       "    +    config;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
550	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  config;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".,  config: "  +  config;	  this.sourceString    =    sourceString    +   ",    config:   "    +    config;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
551	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourcePath();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourcePath();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourcePath();	  this.sourceString    =    sourceString    /    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
552	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  errorReporter;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  File.separatorChar  +  errorReporter;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  File.separatorChar  +  errorReporter;	  this.sourceString    =    sourceString    +   ".js.   ";    	non-compiled	[CE]  <identifier>  expected	120	None	replace
553	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  ErrorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  ErrorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  ErrorReporter);	  this(sourceString,    sourceName,    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
554	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  config);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".,  config: "  +  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".,  config: "  +  config);	  this.sourceString    =    sourceString    +   ",    config:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
555	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".config: "  +  config);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".config: "  +  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".config: "  +  config);	  this.sourceString    =    sourceString    +   ",    config:   "    +    config);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
556	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileTypeJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileTypeJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileTypeJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
557	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.ELEMENT;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.ELEMENT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.DEFAULT  /  FileLevelJsDocBuilder.ELEMENT;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    /    FileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
558	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
559	[BUG]  [BUGGY]  if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  0,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
560	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    0,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
561	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourceString();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawSourceString();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawSourceString();	  this.sourceString    =    sourceString    +    config.getRawErrorReporter();    	non-compiled	[CE]  <identifier>  expected	66	None	replace
562	[BUG]  [BUGGY]  this(sourceString,  config,  sourceName);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  config,  sourceName);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  config,  sourceName);	  this(sourceString,    sourceName,    config);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
563	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getName();	  this.sourceString    =    sourceString    +    File.separatorChar    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
564	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "./ ",  config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "./ ",  config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "./ ",  config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/   ",    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
565	[BUG]  [BUGGY]  This.sourceString  =  sourceString.trim();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString.trim();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString.trim();	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
566	[BUG]  [BUGGY]  This.sourceString  =  sourceString,  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString,  config);	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
567	[BUG]  [BUGGY]  This.sourceString  =  sourceString  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString  +  config.getSourceName();	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
568	[BUG]  [BUGGY]  This.sourceString  =  sourceString  + "/. "  +  config;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This.sourceString  =  sourceString  + "/. "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This.sourceString  =  sourceString  + "/. "  +  config;	  This.sourceString    =    sourceString;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
569	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.fx "  +  config;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.fx "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.fx "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
570	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.rfs "  +  config;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.rfs "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.rfs "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
571	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.no-data "  +  config;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.no-data "  +  config;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.no-data "  +  config;	  this.sourceString    =    sourceString    +   "/.n   "    +    config;    	non-compiled	[CE]  <identifier>  expected	44	None	replace
572	[BUG]  [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE,  config);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName  +  FileLevelJsDocBuilder.DEFAULT_SOURCE,  config);	  this.sourceString    =    sourceName    +    FileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
573	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getResourceName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getResourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getResourceName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSourceName();    	non-compiled	[CE]  <identifier>  expected	99	None	replace
574	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceReference();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '_'  +  config.getSourceReference();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '_'  +  config.getSourceReference();	  this.sourceString    =    sourceString    +    '_'    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	82	None	replace
575	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getSourceName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getSourceName();	  this.sourceString    =    sourceString    +   "_   "    +    config.getSourceName();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
576	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceLocation();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getSourceLocation();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getSourceLocation();	  this.sourceString    =    sourceString    +    config.getSourceLocation();    	non-compiled	[CE]  <identifier>  expected	105	None	replace
577	[BUG]  [BUGGY]  super(sourceString.toLowerCase(),  config);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString.toLowerCase(),  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString.toLowerCase(),  config);	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
578	[BUG]  [BUGGY]  this(sourceString,  config);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  config);	  super(sourceString);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
579	[BUG]  [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceName  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
580	[BUG]  [BUGGY]  if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null  ||  sourceName.length()  ==  0)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
581	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "# ",  config);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "# ",  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "# ",  config);	  this.sourceString    =    sourceString    +   "#   ";    	non-compiled	[CE]  <identifier>  expected	42	None	replace
582	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
583	[BUG]  [BUGGY]  This(sourceString,  sourceName,  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  This(sourceString,  sourceName,  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	This(sourceString,  sourceName,  config,  errorReporter);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
584	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  else  {  return  new  IRFactory(sourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
585	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(SourceString,  sourceName,  config,  errorReporter);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(SourceString,  sourceName,  config,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  return  new  IRFactory(SourceString,  sourceName,  config,  errorReporter);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    return    new    IRFactory(sourceString,    sourceName,    config,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
586	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.js ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.js ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.js ";	  this.sourceString    =    sourceString    +   "/.js   "    +    config;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
587	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getLineno();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getLineno();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getLineno();	  this.sourceString    =    sourceString    +    config.getLineno();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
588	[BUG]  [BUGGY]  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceName    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
589	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter).getErrorReporter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter).getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter).getErrorReporter();	  this(sourceString,    sourceName,    config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	35	None	replace
590	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  -  1;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.DEFAULT  -  1;	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.DEFAULT    -    1;    	non-compiled	[CE]  <identifier>  expected	83	None	replace
591	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.fileLevelJsDocBuilder.DEFAULT;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.fileLevelJsDocBuilder.DEFAULT;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.fileLevelJsDocBuilder.DEFAULT;	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
592	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.jsDocBuilder();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.jsDocBuilder();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder.jsDocBuilder();	  this.sourceString    =    sourceString    +   ".jsDocBuilder   ";    	non-compiled	[CE]  <identifier>  expected	118	None	replace
593	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class;	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
594	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class,  config.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class,  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  FileLevelJsDocBuilder.class,  config.getName();	  this.sourceString    =    sourceString    /    FileLevelJsDocBuilder.class.getName();    	non-compiled	[CE]  <identifier>  expected	78	None	replace
595	[BUG]  [BUGGY]  if(sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceName!=  null)  {  this.sourceString  =  sourceName;  }  else  {  System.arraycopy(sourceString,  0,  sourceString,  errorReporter,  errorReporter);  }	  if(sourceString!=    null)    {    this.sourceString    =    sourceName;    }    else    {    System.arraycopy(sourceString,    0,    sourceString,    errorReporter,    errorReporter);    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
596	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSimpleName(),  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSimpleName(),  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getSimpleName(),  errorReporter);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getSimpleName(),    config);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
597	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config.getName();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ",: "  +  config.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ",: "  +  config.getName();	  this.sourceString    =    sourceString    +   ",:   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
598	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(),  config);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(),  config);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class.getQualifiedName(),  config);	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
599	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getQualifiedName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getQualifiedName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getQualifiedName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getQualifiedName();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
600	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getErrorReporter(sourceName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getErrorReporter(sourceName);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getErrorReporter(sourceName);	  this.sourceString    =    sourceString    +    config.getErrorReporter(sourceName);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
601	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".js ".equals(config.getSourceName());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".js ".equals(config.getSourceName());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".js ".equals(config.getSourceName());	  this.sourceString    =    sourceString    +   "/   ".equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
602	[BUG]  [BUGGY]  Preconditions.checkState(sourceString.length()  >  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  Preconditions.checkState(sourceString.length()  >  0);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	Preconditions.checkState(sourceString.length()  >  0);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
603	[BUG]  [BUGGY]  Preconditions.checkState(sourceString.length()  <=  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  Preconditions.checkState(sourceString.length()  <=  0);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	Preconditions.checkState(sourceString.length()  <=  0);	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    Preconditions.checkState(sourceString.length()    ==    0);    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
604	[BUG]  [BUGGY]  null;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  null;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	null;	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
605	[BUG]  [BUGGY]  null  =  sourceString;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  null  =  sourceString;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	null  =  sourceString;	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
606	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".;null ";  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".;null ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".;null ";	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
607	[BUG]  [BUGGY]  null  =  sourceString  + ";n ";  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  null  =  sourceString  + ";n ";  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	null  =  sourceString  + ";n ";	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
608	[BUG]  [BUGGY]  null  =  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  null  =  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	null  =  config.getErrorReporter();	  this.sourceString    =    sourceString    +   ";n   ";    	non-compiled	[CE]  <identifier>  expected	41	None	replace
609	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  false);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  null,  false);	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
610	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  fileOverviewInfo);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  fileOverviewInfo);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  null,  fileOverviewInfo);	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
611	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  fileLevelJsDocBuilder);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  fileLevelJsDocBuilder);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  null,  fileLevelJsDocBuilder);	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
612	[BUG]  [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  0);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this(sourceString,  sourceName,  config,  errorReporter,  null,  0);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this(sourceString,  sourceName,  config,  errorReporter,  null,  0);	  this(sourceString,    sourceName,    config,    errorReporter,    null);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
613	[BUG]  [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceString;  }  else  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  if(sourceString  ==  null)  {  this.sourceString  =  sourceString;  }  else  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	if(sourceString  ==  null)  {  this.sourceString  =  sourceString;  }  else  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
614	[BUG]  [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||(sourceString!=  null  &&  sourceName.equals( " ")))  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||(sourceString!=  null  &&  sourceName.equals( " ")))  {  throw  new  IllegalArgumentException( "Failed  to  parse  source  string: "  +  sourceString);  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    throw    new    IllegalArgumentException(   "Failed    to    parse    source    string:   "    +    sourceString);    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
615	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getFileName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getFileName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	115	None	replace
616	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FilelevelJsDocBuilder.class.getName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FilelevelJsDocBuilder.class.getName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FilelevelJsDocBuilder.class.getName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class.getLocalName();    	non-compiled	[CE]  <identifier>  expected	79	None	replace
617	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getLineNumber());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getLineNumber());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getLineNumber());	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
618	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getURL());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  '/'.equals(config.getURL());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  '/'.equals(config.getURL());	  this.sourceString    =    sourceString    +    '/'.equals(config.getSourceName());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
619	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + ".   "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + ".   "  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + ".   "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   ":   "    +    config,    errorReporter);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
620	[BUG]  [BUGGY]  this.sourceString  =  sourceString  /  config.getResourceName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  /  config.getResourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  /  config.getResourceName();	  this.sourceString    =    sourceString    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
621	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getRawClass();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getRawClass();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getRawClass();	  this.sourceString    =    sourceString    +    config.getResourceName();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
622	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getQualifiedSourceName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getQualifiedSourceName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getQualifiedSourceName();	  this.sourceString    =    sourceString    +    config.getRawSourceName();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
623	[BUG]  [BUGGY]  super(sourceString,  config,  errorsReporter);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  super(sourceString,  config,  errorsReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	super(sourceString,  config,  errorsReporter);	  super(sourceString,    config);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
624	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getLineno();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getLineno();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getLineno();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
625	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getLocalFileName();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getLocalFileName();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  FileLevelJsDocBuilder.class,  config.getLocalFileName();	  this.sourceString    =    sourceString    +    FileLevelJsDocBuilder.class,    config.getName();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
626	[BUG]  [BUGGY]  ||  config  ==  null)  {  this.sourceString  =  sourceName;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  config  ==  null)  {  this.sourceString  =  sourceName;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  config  ==  null)  {  this.sourceString  =  sourceName;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceName    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
627	[BUG]  [BUGGY]  ||  config  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  config  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  config  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  sourceString;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceName    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
628	[BUG]  [BUGGY]  ||  config  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  errorReporter;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  ||  config  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  errorReporter;  }  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	||  config  ==  null)  {  this.sourceString  =  sourceName;  }  else  {  this.sourceName  =  errorReporter;  }	  if(sourceString    ==    null)    {    this.sourceString    =    sourceName;    }    else    {    this.sourceName    =    sourceString;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
629	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.* "  +  config,  errorReporter);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.* "  +  config,  errorReporter);  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.* "  +  config,  errorReporter);	  this.sourceString    =    sourceString    +   "/.*   "    +    config;    	non-compiled	[CE]  <identifier>  expected	43	None	replace
630	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getNamespaceURI();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getNamespaceURI();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getNamespaceURI();	  this.sourceString    =    sourceString    +    config.getName();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
631	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getErrorReporter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getErrorReporter();  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  fileLevelJsDocBuilder  +  config.getErrorReporter();	  this.sourceString    =    sourceString    +   "._   "    +    config.getErrorReporter();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
632	[BUG]  [BUGGY]  this.sourceString  =  sourceString  + "/.*n ".equals(config.getErrorReporter());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  + "/.*n ".equals(config.getErrorReporter());  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  + "/.*n ".equals(config.getErrorReporter());	  this.sourceString    =    sourceString    +   "/.   ".equals(config.getErrorReporter());    	non-compiled	[CE]  <identifier>  expected	110	None	replace
633	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.fileLevelJsDocBuilder.DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.fileLevelJsDocBuilder.DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.fileLevelJsDocBuilder.DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
634	[BUG]  [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().DEFAULT_SOURCE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  IRFactory(String  sourceString,  String  sourceName,  Config  config,  ErrorReporter  errorReporter)  {      [BUGGY]  this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().DEFAULT_SOURCE;  [BUGGY]      this.sourceName  =  sourceName;  this.config  =  config;  this.errorReporter  =  errorReporter;  this.transformDispatcher  =  new  TransformDispatcher();  this.templateNode  =  createTemplateNode();  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  <init>  [RETURN_TYPE]  ErrorReporter)  String  sourceString  String  sourceName  Config  config  ErrorReporter  errorReporter  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	105	105	1	replace	this.sourceString  =  sourceString  +  config.getFileLevelJsDocBuilder().DEFAULT_SOURCE;	  this.sourceString    =    sourceString    +    fileLevelJsDocBuilder.DEFAULT_SOURCE;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
