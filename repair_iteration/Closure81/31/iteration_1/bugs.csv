bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(comment  ==  null)  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment  ==  null)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment  ==  null)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
2	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.EXPR_RESULT)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
3	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.GETPROP)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
4	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  ||  comment.getType()  ==  Token.NAME)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  ||  comment.getType()  ==  Token.NAME)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
5	[BUG]  [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  ||  comment.getParsed()  ==  null)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  ||  comment.getParsed()  ==  null)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]    [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	  	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
7	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getParsed())  {  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  &&  comment.getParsed())  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  &&  comment.getParsed())  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
8	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.isParsed())  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  &&  comment.isParsed())  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  &&  comment.isParsed())  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
9	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.hasParsed())  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  &&  comment.hasParsed())  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  &&  comment.hasParsed())  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
10	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.VAR)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.VAR)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
11	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.GETPROP)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
12	[BUG]  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError  [CONTEXT]  private  JSDocInfo  handleJsDoc(AstNode  node)  {  Comment  comment  =  node.getJsDocNode();  [BUGGY]  if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {  [BUGGY]  JsDocInfoParser  jsDocParser  =  createJsDocInfoParser(comment);  comment.setParsed(true);  if  (!handlePossibleFileOverviewJsDoc(jsDocParser))  {  return  jsDocParser.retrieveAndResetParsedJSDocInfo();  }  }  return  null;  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  handleJsDoc  [RETURN_TYPE]  JSDocInfo  AstNode  node  [VARIABLES]  Comment  comment  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  JsDocInfoParser  jsDocParser  Config  config  Node  irNode  newBlock  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  AstNode  node  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	195	195	1	replace	if(comment!=  null  &&  comment.getType()  ==  Token.NAME)  {	if  (comment  !=  null)  {  	non-compiled	[CE]  illegal  start  of  type	61	None	replace
