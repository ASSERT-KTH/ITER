bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  fileLevelJsDocBuilder.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  fileLevelJsDocBuilder.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	fileLevelJsDocBuilder.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  fileLevelJsDocBuilder.setJSDocInfo(irNode.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  fileLevelJsDocBuilder.setJSDocInfo(irNode.getJSDocInfo());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	fileLevelJsDocBuilder.setJSDocInfo(irNode.getJSDocInfo());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileLevelJsDocBuilder.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileLevelJsDocBuilder.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileLevelJsDocBuilder.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
6	[BUG]  [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setSourceString(irNode.getJSDocInfo().getSourceString());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setSourceString(irNode.getJSDocInfo().getSourceString());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setSourceString(irNode.getJSDocInfo().getSourceString());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
7	[BUG]  [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  irNode.getJSDocBuilder();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  irNode.getJSDocBuilder();  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  irNode.getJSDocBuilder();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
8	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.getLicense()!=  null)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
9	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  fileLevelJsDocBuilder!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  fileLevelJsDocBuilder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  fileLevelJsDocBuilder!=  null)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
10	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
11	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.isLicense())  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  ||  fileOverviewInfo.hasLicense())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  ||  fileOverviewInfo.hasLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  ||  fileOverviewInfo.hasLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasLicense())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocBuilder.hasLicense())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocBuilder.hasLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocBuilder.hasLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.hasLicense())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.hasLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.hasLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.getLicense()  ==  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.getLicense()  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileOverviewInfo.getLicense()  ==  null)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.getLicense()!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  if(irNode!=  null  &&  fileOverviewInfo.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(irNode!=  null  &&  fileOverviewInfo.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(irNode!=  null  &&  fileOverviewInfo.getLicense()!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
19	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
20	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
21	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getLicense()!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
22	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  ||  rootNodeJsDocHolder.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  ||  rootNodeJsDocHolder.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  ||  rootNodeJsDocHolder.getLicense()!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
23	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  if(irNode!=  null  ||  fileOverviewInfo.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(irNode!=  null  ||  fileOverviewInfo.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(irNode!=  null  ||  fileOverviewInfo.getLicense()!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileLevelJsDocBuilder!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileLevelJsDocBuilder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo  ==  null  &&  fileLevelJsDocBuilder!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
26	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  fileOverviewInfo!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  fileOverviewInfo!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  fileOverviewInfo!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocBuilder!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocBuilder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocBuilder!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder  ==  null)  {	  if(fileOverviewInfo!=    null    &&    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileLevelJsDocBuilder!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileLevelJsDocBuilder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  fileLevelJsDocBuilder!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
31	[BUG]  [BUGGY]  if(rootNode.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNode.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNode.getJSDocInfo()!=  null)  {	  if(rootNodeJsDocHolder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
32	[BUG]  [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocBuilder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocBuilder!=  null)  {	  if(rootNodeJsDocHolder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
33	[BUG]  [BUGGY]  if(irNode!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(irNode!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(irNode!=  null)  {	  if(rootNodeJsDocHolder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
34	[BUG]  [BUGGY]  if(!irNode.hasErrorReporter())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!irNode.hasErrorReporter())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!irNode.hasErrorReporter())  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo.getLicense()!=  null)  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  if(!rootNodeJsDocBuilder.hasErrorReporter())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!rootNodeJsDocBuilder.hasErrorReporter())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!rootNodeJsDocBuilder.hasErrorReporter())  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
37	[BUG]  [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo!=  null)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo!=  null)  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
38	[BUG]  [BUGGY]  if(!rootNode.hasErrorReporter())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!rootNode.hasErrorReporter())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!rootNode.hasErrorReporter())  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  if(!fileOverviewInfo.hasErrorReporter())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!fileOverviewInfo.hasErrorReporter())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!fileOverviewInfo.hasErrorReporter())  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!rootNodeJsDocHolder.hasErrorReporter()  &&  fileOverviewInfo.isLicense())  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
41	[BUG]  [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo  ==  null  &&  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.isLicense())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.isLicense())  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo().isLicense())  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo().isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo().isLicense())  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
44	[BUG]  [BUGGY]  if(fileOverviewInfo  ==  null  ||  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo  ==  null  ||  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo  ==  null  ||  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
45	[BUG]  [BUGGY]  if(irNode!=  null  ||  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(irNode!=  null  ||  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(irNode!=  null  ||  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
46	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocBuilder.isLicense())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocBuilder.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocBuilder.isLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
48	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.isLicense()  ||  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.isLicense()  ||  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileOverviewInfo.isLicense()  ||  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.isLicense())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.isLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  if(rootNodeJsDocHolder  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder  ==  null)  {	  if(fileOverviewInfo    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  if(rootNodeJsDocBuilder  ==  null)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocBuilder  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocBuilder  ==  null)  {	  if(fileOverviewInfo    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
52	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getJSDocInfo()!=  null)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
54	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
55	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()!=  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()!=  Token.NAME)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()!=  Token.NAME)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
56	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo!=  null  &&  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo!=  null  &&  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  fileOverviewInfo!=  null  &&  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
58	[BUG]  [BUGGY]  if(!fileLevelJsDocBuilder.hasErrorReporter())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!fileLevelJsDocBuilder.hasErrorReporter())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!fileLevelJsDocBuilder.hasErrorReporter())  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
59	[BUG]  [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  ||  fileOverviewInfo!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(!rootNodeJsDocHolder.hasErrorReporter()  ||  fileOverviewInfo!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(!rootNodeJsDocHolder.hasErrorReporter()  ||  fileOverviewInfo!=  null)  {	  if(!rootNodeJsDocHolder.hasErrorReporter())    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
60	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.NAME)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.NAME)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.NAME)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  if(fileOverviewInfo  ==  null  ||  fileOverviewInfo.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo  ==  null  ||  fileOverviewInfo.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo  ==  null  ||  fileOverviewInfo.getLicense()!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
62	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  ||  fileOverviewInfo.getLicense()  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  ||  fileOverviewInfo.getLicense()  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  ||  fileOverviewInfo.getLicense()  ==  null)  {	  if(fileOverviewInfo!=    null    ||    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
63	[BUG]  [BUGGY]  if(fileOverviewInfo  ==  null  ||  fileLevelJsDocBuilder!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo  ==  null  ||  fileLevelJsDocBuilder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo  ==  null  ||  fileLevelJsDocBuilder!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  ||  fileLevelJsDocBuilder  ==  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  ||  fileLevelJsDocBuilder  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  ||  fileLevelJsDocBuilder  ==  null)  {	  if(fileOverviewInfo!=    null    ||    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
65	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  rootNodeJsDocHolder.getJSDocBuilder();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  Node  fileLevelJsDocBuilder  =  rootNodeJsDocHolder.getJSDocBuilder();  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	Node  fileLevelJsDocBuilder  =  rootNodeJsDocHolder.getJSDocBuilder();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
66	[BUG]  [BUGGY]  Node  fileLevelJsDocBuilder  =  irNode.getJSDocBuilder();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  Node  fileLevelJsDocBuilder  =  irNode.getJSDocBuilder();  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	Node  fileLevelJsDocBuilder  =  irNode.getJSDocBuilder();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
67	[BUG]  [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileLevelJsDocBuilder.setLicense(irNode.getJSDocInfo().getLicense());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileLevelJsDocBuilder.setLicense(irNode.getJSDocInfo().getLicense());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileLevelJsDocBuilder.setLicense(irNode.getJSDocInfo().getLicense());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLineno(irNode.getJSDocInfo().getLineno());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLineno(irNode.getJSDocInfo().getLineno());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLineno(irNode.getJSDocInfo().getLineno());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
69	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  rootNodeJsDocHolder!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  rootNodeJsDocHolder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  rootNodeJsDocHolder!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFileOverview())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFileOverview())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFileOverview())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
71	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFileOverviewJsDoc())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFileOverviewJsDoc())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFileOverviewJsDoc())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
72	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder  ==  null)  {	  if(fileOverviewInfo    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  rootNodeJsDocHolder.getLicense()!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  rootNodeJsDocHolder.getLicense()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  rootNodeJsDocHolder.getLicense()!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
74	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNode.getJSDocInfo()!=  null  &&  rootNode.getJSDocInfo().isLicense())  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNode.getJSDocInfo()!=  null  &&  rootNode.getJSDocInfo().isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNode.getJSDocInfo()!=  null  &&  rootNode.getJSDocInfo().isLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
75	[BUG]  [BUGGY]  if(irNode!=  null  &&  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(irNode!=  null  &&  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(irNode!=  null  &&  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
76	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNode.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNode.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNode.getJSDocInfo()!=  null)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.isLicense())    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
77	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo!=  null)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
78	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  ||  fileOverviewInfo!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  ||  fileOverviewInfo!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  ||  fileOverviewInfo!=  null)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
79	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  ||  rootNodeJsDocHolder.getJSDocInfo()!=  null)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.getLicense())  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.getLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileOverviewInfo.getLicense())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
81	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasChildren())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasChildren())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasChildren())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFile())  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFile())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileOverviewInfo.hasFile())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
83	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasType())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasType())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.hasType())  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.hasLicense())    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
84	[BUG]  [BUGGY]  irNode.setLineno(rootNodeJsDocHolder.getLineno());  fileOverviewInfo.setLineno(irNode.getJSDocInfo().getLineno());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setLineno(rootNodeJsDocHolder.getLineno());  fileOverviewInfo.setLineno(irNode.getJSDocInfo().getLineno());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setLineno(rootNodeJsDocHolder.getLineno());  fileOverviewInfo.setLineno(irNode.getJSDocInfo().getLineno());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
85	[BUG]  [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLocale(irNode.getJSDocInfo().getLocale());  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLocale(irNode.getJSDocInfo().getLocale());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());  fileOverviewInfo.setLocale(irNode.getJSDocInfo().getLocale());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
86	[BUG]  [BUGGY]  irNode.setLineno(rootNodeJsDocHolder.getLineno());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  irNode.setLineno(rootNodeJsDocHolder.getLineno());  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	irNode.setLineno(rootNodeJsDocHolder.getLineno());	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
87	[BUG]  [BUGGY]  Node  fileOverviewInfo  =  rootNodeJsDocHolder.getParent();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  Node  fileOverviewInfo  =  rootNodeJsDocHolder.getParent();  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	Node  fileOverviewInfo  =  rootNodeJsDocHolder.getParent();	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
88	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
89	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.EXPR_RESULT)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
90	[BUG]  [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.BLOCK)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.BLOCK)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder.getType()  ==  Token.BLOCK)  {	  if(irNode.getJSDocInfo()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
91	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
92	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.EXPR_RESULT)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.EXPR_RESULT)  {	  if(fileOverviewInfo!=    null    &&    fileOverviewInfo.getLicense()!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
93	[BUG]  [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder!=  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(irNode.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(irNode.getType()  ==  Token.FUNCTION  ||  rootNodeJsDocHolder!=  null)  {	  if(rootNodeJsDocHolder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
94	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  &&  irNode.getJSDocInfo()!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  &&  irNode.getJSDocInfo()!=  null)  {	  if(rootNodeJsDocHolder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
95	[BUG]  [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder!=  null)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder!=  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(rootNodeJsDocHolder!=  null  ||  rootNodeJsDocHolder!=  null)  {	  if(fileOverviewInfo!=    null    ||    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo  ==  null)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo  ==  null)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
97	[BUG]  [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {	  if(fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
98	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.isLicense())  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.isLicense())  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  fileOverviewInfo.isLicense())  {	  if(fileOverviewInfo!=    null    &&    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
99	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.FUNCTION)  {	  if(fileOverviewInfo!=    null    &&    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
100	[BUG]  [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(fileOverviewInfo!=  null  &&  fileLevelJsDocBuilder!=  null  &&  rootNodeJsDocHolder.getType()  ==  Token.VAR)  {	  if(fileOverviewInfo!=    null    &&    fileLevelJsDocBuilder!=    null)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
101	[BUG]  [BUGGY]  if(irNode  ==  null)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    private  void  setFileOverviewJsDoc(Node  irNode)  {    irNode.setJSDocInfo(rootNodeJsDocHolder.getJSDocInfo());    [BUGGY]  if(irNode  ==  null)  {  [BUGGY]    if  ((irNode.getJSDocInfo()  !=  null)  &&  (irNode.getJSDocInfo().getLicense()  !=  null))  {  fileOverviewInfo.setLicense(irNode.getJSDocInfo().getLicense());  }  irNode.setJSDocInfo(fileOverviewInfo);  }  }  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  setFileOverviewJsDoc  [RETURN_TYPE]  void  Node  irNode  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  boolean  Config  config  Node  irNode  rootNodeJsDocHolder  templateNode  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.11470786693528087	150	150	1	replace	if(irNode  ==  null)  {	  if(fileOverviewInfo    ==    null)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
