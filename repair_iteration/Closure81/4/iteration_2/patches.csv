bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
2	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
3	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token!=  Token.EOF)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
4	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
5	[BUG]  [BUGGY]  if(token!=  Token.ERROR  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
6	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  <=  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  ')'  expected	69	None	replace
7	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  ==  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  ')'  expected	69	None	replace
8	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token!=  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  ')'  expected	69	None	replace
9	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  >=  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  ')'  expected	69	None	replace
10	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  <=  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  <=  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  <=  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  ')'  expected	69	None	replace
11	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token!=  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  ')'  expected	69	None	replace
12	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  <=  Token.CATCH)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
13	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  ==  Token.CATCH)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
14	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  >=  Token.CATCH)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
15	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token!=  Token.CATCH)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
16	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  <=  Token.CATCH)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
17	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token!=  Token.CATCH)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
18	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token!=  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
19	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token!=  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
20	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
21	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
22	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
23	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  <=  Token.EOL)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
24	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.EOF)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  <=  Token.EOF)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
25	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  <=  Token.EOL)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
26	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.EOF)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  <=  Token.EOF)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
27	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  <=  Token.EOL)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
28	[BUG]  [BUGGY]  if(token!=  Token.EMPTY  &&  token  <=  Token.EOF)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EMPTY  &&  token  <=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY  &&  token  <=  Token.EOF)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
29	[BUG]  [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.EOF)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  &&  token  <=  Token.EOF)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
30	[BUG]  [BUGGY]  if(token!=  null  ||  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  ||  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  ||  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
31	[BUG]  [BUGGY]  if(token!=  null  &&  token  <  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  &&  token  <  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  <  Token.NAME)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
32	[BUG]  [BUGGY]  if(token  ==  null  ||  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  null  ||  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  null  ||  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
33	[BUG]  [BUGGY]  if(token  ==  null  &&  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  null  &&  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  null  &&  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
34	[BUG]  [BUGGY]  if(token!=  null  &&  token  <=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  &&  token  <=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  <=  Token.EOL)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
35	[BUG]  [BUGGY]  if(token!=  EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  EOL)  {  switch(token)  {	  if(Token.EOL!=    token)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
36	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  <=  Token.CATCH)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
37	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  <=  Token.CATCH)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
38	[BUG]  [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CATCH  &&  token!=  Token.EOL)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
39	[BUG]  [BUGGY]  if(token!=  Token.EMPTY  &&  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EMPTY  &&  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
40	[BUG]  [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
41	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
42	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token!=  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
43	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT  ||  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT  ||  token!=  Token.NAME)  {	  if(token!=    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
44	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  >=  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
45	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token)+  1;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token)+  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token)+  1;	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
46	[BUG]  [BUGGY]  JsDocInfo  fileLevelJsDocBuilder  =  getFormatter(token);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileLevelJsDocBuilder  =  getFormatter(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileLevelJsDocBuilder  =  getFormatter(token);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
47	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  false);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  false);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  false);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
48	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  errorReporter);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  errorReporter);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  errorReporter);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
49	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.EXPR_RESULT)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
50	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  >=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  >=  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  >=  Token.EXPR_RESULT)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
51	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
52	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  true);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  true);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  true);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
53	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  false);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  false);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  false);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
54	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  token);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  token);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
55	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.EOL,  token);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.EOL,  token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.EOL,  token);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
56	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.EOL);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.EOL);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.EOL);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
57	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  this);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  this);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  this);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
58	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  false);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  false);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  false);	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	1	None	replace
59	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  true);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  true);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  true);	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	1	None	replace
60	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  config);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  config);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  config);	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	1	None	replace
61	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  null);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  null);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  null);	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	1	None	replace
62	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	42	None	replace
63	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token!=  Token.NAME)  {	  if(token    ==    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
64	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token!=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token!=  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token!=  Token.EXPR_RESULT)  {	  if(token    ==    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
65	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.config.get(token);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.config.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.config.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  ')'  expected	3	None	replace
66	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fileLevelJsDocBuilder.get(token);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fileLevelJsDocBuilder.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fileLevelJsDocBuilder.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  ')'  expected	3	None	replace
67	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.chars.get(token);  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.chars.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.chars.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  	3	None	replace
68	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.files.get(token);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.files.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.files.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  	3	None	replace
69	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fnNodes.get(token);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fnNodes.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fnNodes.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  ')'  expected	3	None	replace
70	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
71	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
72	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
73	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
74	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
75	[BUG]  [BUGGY]  if(token  ==  Token.EOF)  {  return  Token.EOF;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF)  {  return  Token.EOF;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF)  {  return  Token.EOF;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
76	[BUG]  [BUGGY]  if(token  ==  Token.NAME)  {  return  Token.NAME;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME)  {  return  Token.NAME;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME)  {  return  Token.NAME;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
77	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP)  {  return  Token.GETPROP;  }  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP)  {  return  Token.GETPROP;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP)  {  return  Token.GETPROP;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
78	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  return  Token.EOL;  }  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  return  Token.EOL;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  return  Token.EOL;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
79	[BUG]  [BUGGY]  AssertionFailedToken(token)  {  return  Token.EOL;  }  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  AssertionFailedToken(token)  {  return  Token.EOL;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	AssertionFailedToken(token)  {  return  Token.EOL;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
80	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOL)  {  return  Token.EOL;  }  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOL)  {  return  Token.EOL;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.EOL)  {  return  Token.EOL;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
81	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.GETPROP)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
82	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.GETPROP)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
83	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token!=  Token.GETPROP)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
84	[BUG]  [BUGGY]  if(token!=  Token.GETPROP  ||  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.GETPROP  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.GETPROP  ||  token!=  Token.NAME)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
85	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  >=  Token.GETPROP)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
86	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
87	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token  ==  Token.EOL)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
88	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token!=  Token.EMPTY)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
89	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
90	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
91	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
92	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.EOL)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
93	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
94	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
95	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
96	[BUG]  [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo();	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    	non-compiled	[CE]  ')'  expected	7	None	replace
97	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfoFor(token);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfoFor(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfoFor(token);	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    	non-compiled	[CE]  ')'  expected	7	None	replace
98	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo().token;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo().token;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo().token;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    	non-compiled	[CE]  ')'  expected	7	None	replace
99	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT)  {  switch(token)  {	  if(token    ==    Token.EXPR_RESULT)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
100	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_TYPE)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_TYPE)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_TYPE)  {  switch(token)  {	  if(token    ==    Token.EXPR_RESULT)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
101	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
102	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
103	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token!=  Token.FUNCTION)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
104	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	35	None	replace
105	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.ERROR)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.ERROR)  {	  if(token    ==    Token.ERROR)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
106	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.ERROR)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.ERROR)  {	  if(token    ==    Token.ERROR)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
107	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  false);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  false);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  false);	  JSDocInfo    fileOverviewInfo    =    createFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	4	None	replace
108	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  true);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  true);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  true);	  JSDocInfo    fileOverviewInfo    =    createFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	4	None	replace
109	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  transformFileOverviewInfo(token);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  transformFileOverviewInfo(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  transformFileOverviewInfo(token);	  JSDocInfo    fileOverviewInfo    =    createFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	4	None	replace
110	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  transformTokenType(token);  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  transformTokenType(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  transformTokenType(token);	  JSDocInfo    fileOverviewInfo    =    createFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	4	None	replace
111	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  config);  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  config);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token,  config);	  JSDocInfo    fileOverviewInfo    =    createFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	4	None	replace
112	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EXPR_RESULT)  {	  if(token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
113	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
114	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
115	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
116	[BUG]  [BUGGY]  if(Token.EOF  ==  token)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.EOF  ==  token)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.EOF  ==  token)  {  switch(token)  {	  if(Token.EOF!=    token)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
117	[BUG]  [BUGGY]  int  fileOverviewInfo  =  getFileOverviewInfo();  break;  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  int  fileOverviewInfo  =  getFileOverviewInfo();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	int  fileOverviewInfo  =  getFileOverviewInfo();  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    break;    	non-compiled	[CE]  ')'  expected	75	None	replace
118	[BUG]  [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    break;    	non-compiled	[CE]  ')'  expected	75	None	replace
119	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
120	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  <=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
121	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.CATCH)  {  switch(token)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  <=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  	59	None	replace
122	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.CATCH)  {  switch(token)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  <=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  	59	None	replace
123	[BUG]  [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.EOL)  {  switch(token)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CATCH  &&  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  	59	None	replace
124	[BUG]  [BUGGY]  if(token!=  Token.CATCH  ||  token!=  Token.EOL)  {  switch(token)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CATCH  ||  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CATCH  ||  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  	59	None	replace
125	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.CALL)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.CALL)  {	  if(token!=    Token.NAME    ||    token    ==    Token.CALL)    {    	non-compiled	[CE]  	63	None	replace
126	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token!=  Token.NAME)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token!=  Token.NAME)  {	  if(token!=    Token.NAME    ||    token    ==    Token.CALL)    {    	non-compiled	[CE]  	63	None	replace
127	[BUG]  [BUGGY]  if(token  >=  Token.NAME  ||  token  ==  Token.CALL)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  >=  Token.NAME  ||  token  ==  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME  ||  token  ==  Token.CALL)  {	  if(token!=    Token.NAME    ||    token    ==    Token.CALL)    {    	non-compiled	[CE]  	63	None	replace
128	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  >=  Token.CALL)  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  >=  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  >=  Token.CALL)  {	  if(token!=    Token.NAME    ||    token    ==    Token.CALL)    {    	non-compiled	[CE]  	63	None	replace
129	[BUG]  [BUGGY]  if(token!=  Token.GETPROP)  {  switch(token)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.GETPROP)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.GETPROP)  {  switch(token)  {	  if(token    ==    Token.GETPROP)    {    switch(token)    {    	non-compiled	[CE]  	20	None	replace
130	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP  &&  token!=  Token.NAME)  {  switch(token)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP  &&  token!=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP  &&  token!=  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.GETPROP)    {    switch(token)    {    	non-compiled	[CE]  	20	None	replace
131	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.CALL)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token!=  Token.CALL)  {	  if(token!=    Token.NAME    ||    token!=    Token.CALL)    {    	non-compiled	[CE]  	65	None	replace
132	[BUG]  [BUGGY]  if(token!=  Token.CALL  ||  token!=  Token.NAME)  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CALL  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CALL  ||  token!=  Token.NAME)  {	  if(token!=    Token.NAME    ||    token!=    Token.CALL)    {    	non-compiled	[CE]  	65	None	replace
133	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.CALL)  {  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  >=  Token.CALL)  {	  if(token!=    Token.NAME    ||    token!=    Token.CALL)    {    	non-compiled	[CE]  	65	None	replace
134	[BUG]  [BUGGY]  if(token!=  Token.EOF)  {  switch(Token.ERROR)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  	41	None	replace
135	[BUG]  [BUGGY]  if(token  ==  Token.EOL)  {  switch(Token.ERROR)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  	41	None	replace
136	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  switch(Token.ERROR)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  	41	None	replace
137	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.ERROR)  {  switch(Token.ERROR)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.ERROR)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.ERROR)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  	41	None	replace
138	[BUG]  [BUGGY]  if(token!=  Token.EOL)  {  switch(Token.ERROR)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  	41	None	replace
139	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY)  {  switch(Token.ERROR)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  	41	None	replace
140	[BUG]  [BUGGY]  if(Token.NAME  ==  token)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.NAME  ==  token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.NAME  ==  token)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  	45	None	replace
141	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.NAME)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.NAME)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  	45	None	replace
142	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.NAME)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.NAME)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  	45	None	replace
143	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EOF)  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.EOF)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  	45	None	replace
144	[BUG]  [BUGGY]  if(token  ==  EOL)  {  switch(token)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  EOL)  {  switch(token)  {	  if(token    ==    null)    {    switch(token)    {    	non-compiled	[CE]  	31	None	replace
145	[BUG]  [BUGGY]  if(token  ==  null)  {  switch(Token.EOF)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  null)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  null)  {  switch(Token.EOF)  {	  if(token    ==    null)    {    switch(token)    {    	non-compiled	[CE]  	31	None	replace
146	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOF)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.EOF)  {	  if(token!=    Token.NAME    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  	64	None	replace
147	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOL)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.EOL)  {	  if(token!=    Token.NAME    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  	64	None	replace
148	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOF)  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.EOF)  {	  if(token!=    Token.NAME    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  	64	None	replace
149	[BUG]  [BUGGY]  final  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  break;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  final  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	final  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  break;	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  	78	None	replace
150	[BUG]  [BUGGY]  int  fileOverviewInfo  =  getPositionInformation(token);  break;  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  int  fileOverviewInfo  =  getPositionInformation(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	int  fileOverviewInfo  =  getPositionInformation(token);  break;	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  	78	None	replace
151	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  	78	None	replace
152	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  switch(token)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  	57	None	replace
153	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	57	None	replace
154	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	57	None	replace
155	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	57	None	replace
156	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
157	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token!=  Token.NAME)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
158	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
159	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
160	[BUG]  [BUGGY]  if(token  ==  Token.EOL)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL)  {  switch(Token.EOF)  {	  if(token    ==    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	34	None	replace
161	[BUG]  [BUGGY]  if(token!=  Token.EOL)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL)  {  switch(Token.EOF)  {	  if(token    ==    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	34	None	replace
162	[BUG]  [BUGGY]  if(token  ==  Token.ERROR)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR)  {  switch(Token.EOF)  {	  if(token    ==    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	34	None	replace
163	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP)  {  switch(Token.GETPROP)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP)  {  switch(Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP)  {  switch(Token.GETPROP)  {	  if(token    ==    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	34	None	replace
164	[BUG]  [BUGGY]  if(token  ==  Token.ERROR)  {  switch(Token.ERROR)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	34	None	replace
165	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  ==  Token.CATCH)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
166	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token!=  Token.CATCH)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
167	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.CATCH)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
168	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.CATCH)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
169	[BUG]  [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CATCH  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	70	None	replace
170	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.STRING)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  <=  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  <=  Token.STRING)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  ')'  expected	68	None	replace
171	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.STRING)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  ==  Token.STRING)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  ')'  expected	68	None	replace
172	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.STRING)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token!=  Token.STRING)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  ')'  expected	68	None	replace
173	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.STRING)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  >=  Token.STRING)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  ')'  expected	68	None	replace
174	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.STRING)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token!=  Token.STRING)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  ')'  expected	68	None	replace
175	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  <=  Token.STRING)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  <=  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  <=  Token.STRING)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  ')'  expected	68	None	replace
176	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  <=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  <=  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
177	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  <=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  <=  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
178	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  ==  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
179	[BUG]  [BUGGY]  if(token  >=  Token.NAME  ||  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  >=  Token.NAME  ||  token  <=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME  ||  token  <=  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
180	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.EOL)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  >=  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
181	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.EXPR_RESULT    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
182	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.EXPR_RESULT)  {	  if(token    ==    Token.EXPR_RESULT    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
183	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  >=  Token.NAME)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  >=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  >=  Token.NAME)  {	  if(token    ==    Token.EXPR_RESULT    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
184	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.EXPR_RESULT)  {	  if(token    ==    Token.EXPR_RESULT    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
185	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(token);  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(token);  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
186	[BUG]  [BUGGY]  int  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  int  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	int  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
187	[BUG]  [BUGGY]  Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
188	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileOverviewInfo();  break;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileOverviewInfo();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileOverviewInfo();  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
189	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileTypeJsDocBuilder();  break;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileTypeJsDocBuilder();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileTypeJsDocBuilder();  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
190	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	71	None	replace
191	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token!=  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	71	None	replace
192	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	71	None	replace
193	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	71	None	replace
194	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	71	None	replace
195	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(token);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(token);	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
196	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileOverviewInfo();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileOverviewInfo();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileOverviewInfo();	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
197	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileTypeJsDocBuilder();  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileTypeJsDocBuilder();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileTypeJsDocBuilder();	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
198	[BUG]  [BUGGY]  Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
199	[BUG]  [BUGGY]  int  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  int  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	int  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
200	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.GETELEM)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.GETELEM)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.GETELEM)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	47	None	replace
201	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	47	None	replace
202	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.GETPROP)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	47	None	replace
203	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	30	None	replace
204	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token!=  Token.EOF)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	30	None	replace
205	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	30	None	replace
206	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  false);  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  false);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  false);  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    break;    	non-compiled	[CE]  ')'  expected	55	None	replace
207	[BUG]  [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    break;    	non-compiled	[CE]  ')'  expected	55	None	replace
208	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  true);  break;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  true);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  true);  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    break;    	non-compiled	[CE]  ')'  expected	55	None	replace
209	[BUG]  [BUGGY]  final  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  final  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	final  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    break;    	non-compiled	[CE]  ')'  expected	55	None	replace
210	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  true);  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  true);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  true);  break;	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    break;    	non-compiled	[CE]  ')'  expected	76	None	replace
211	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  false);  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  false);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  false);  break;	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    break;    	non-compiled	[CE]  ')'  expected	76	None	replace
212	[BUG]  [BUGGY]  final  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  break;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  final  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	final  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  break;	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    break;    	non-compiled	[CE]  ')'  expected	76	None	replace
213	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  null);  break;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  null);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  null);  break;	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    break;    	non-compiled	[CE]  ')'  expected	76	None	replace
214	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  token);  break;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  token);  break;	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    break;    	non-compiled	[CE]  ')'  expected	76	None	replace
215	[BUG]  [BUGGY]  if(token!=  null)  {  switch(Token.ERROR)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null)  {  switch(Token.ERROR)  {	  if(token!=    null)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
216	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
217	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
218	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
219	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
220	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  <=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
221	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token!=  Token.EOL)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	66	None	replace
222	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token!=  Token.EOL)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	66	None	replace
223	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token!=  Token.FUNCTION)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
224	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
225	[BUG]  [BUGGY]  if(token  ==  Token.FUNCTION  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.FUNCTION  ||  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.FUNCTION  ||  token  ==  Token.EOL)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
226	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
227	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	51	None	replace
228	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  <=  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
229	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  <=  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
230	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  ==  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
231	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  >=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token  >=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  >=  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
232	[BUG]  [BUGGY]  if(token  >=  Token.NAME  ||  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  >=  Token.NAME  ||  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME  ||  token  <=  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
233	[BUG]  [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CATCH  &&  token!=  Token.NAME)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
234	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  <=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
235	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  <=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
236	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  <=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
237	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token!=  Token.EOL)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
238	[BUG]  [BUGGY]  if(token!=  Token.EMPTY  &&  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EMPTY  &&  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY  &&  token  <=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
239	[BUG]  [BUGGY]  if(token!=  Token.CALL  &&  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CALL  &&  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CALL  &&  token  <=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
240	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token!=  Token.FUNCTION)  {	  if(token    ==    Token.EOF    ||    token!=    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
241	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token!=  Token.FUNCTION)  {	  if(token    ==    Token.EOF    ||    token!=    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
242	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.ERROR)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token!=  Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token!=  Token.ERROR)  {	  if(token!=    Token.ERROR)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
243	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOF)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token!=  Token.EOF)  {	  if(token    ==    Token.EOL    ||    token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	16	None	replace
244	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token!=  Token.EOF)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token!=  Token.EOF)  {	  if(token    ==    Token.EOL    ||    token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	16	None	replace
245	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	80	None	replace
246	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	80	None	replace
247	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	80	None	replace
248	[BUG]  [BUGGY]  if(token!=  Token.EXPR_TYPE)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_TYPE)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_TYPE)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
249	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_TYPE)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_TYPE)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_TYPE)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
250	[BUG]  [BUGGY]  if(token!=  Token.EXPR_ARRAY)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_ARRAY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_ARRAY)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
251	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.START)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.START)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.START)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.START)    {    	non-compiled	[CE]  ')'  expected	48	None	replace
252	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.START)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.START)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.START)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.START)    {    	non-compiled	[CE]  ')'  expected	48	None	replace
253	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.END)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.END)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.END)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.START)    {    	non-compiled	[CE]  ')'  expected	48	None	replace
254	[BUG]  [BUGGY]  if(token  ==  Token.START  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.START  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.START  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.START)    {    	non-compiled	[CE]  ')'  expected	48	None	replace
255	[BUG]  [BUGGY]  final  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.clone();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  final  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.clone();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	final  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.clone();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
256	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.next();  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.next();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.next();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
257	[BUG]  [BUGGY]  JsDocInfo  fileOverviewInfo  =(JsDocInfo)token.clone();  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileOverviewInfo  =(JsDocInfo)token.clone();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileOverviewInfo  =(JsDocInfo)token.clone();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
258	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.remove();  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.remove();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.remove();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
259	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.reset();  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.reset();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.reset();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
260	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP  ||  token  ==  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP  ||  token  ==  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP  ||  token  ==  Token.GETPROP)  {	  if(token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
261	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP  &&  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP  &&  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP  &&  token!=  Token.NAME)  {	  if(token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
262	[BUG]  [BUGGY]  if(token  ==  Token.GETELEM)  {  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETELEM)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETELEM)  {	  if(token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
263	[BUG]  [BUGGY]  if(token!=  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.GETPROP)  {	  if(token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
264	[BUG]  [BUGGY]  if(token!=  Token.ERROR)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR)  {  switch(Token.EOF)  {	  if(token!=    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	28	None	replace
265	[BUG]  [BUGGY]  if(token!=  Token.EMPTY)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EMPTY)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY)  {  switch(Token.EOF)  {	  if(token!=    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	28	None	replace
266	[BUG]  [BUGGY]  if(token!=  Token.NAME)  {  switch(Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME)  {  switch(Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME)  {  switch(Token.NAME)  {	  if(token!=    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	28	None	replace
267	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  ==  Token.EOL)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	36	None	replace
268	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token!=  Token.EOL)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	36	None	replace
269	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  ==  Token.EOL)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	36	None	replace
270	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	49	None	replace
271	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  >=  Token.EOF)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  >=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  >=  Token.EOF)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	49	None	replace
272	[BUG]  [BUGGY]  Integer  ir  =  token.intValue()  +  1;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  ir  =  token.intValue()  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  ir  =  token.intValue()  +  1;	  Integer    ir    =    token.intValue();    	non-compiled	[CE]  ')'  expected	5	None	replace
273	[BUG]  [BUGGY]  Integer  ir  =  token.doubleValue();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  ir  =  token.doubleValue();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  ir  =  token.doubleValue();	  Integer    ir    =    token.intValue();    	non-compiled	[CE]  ')'  expected	5	None	replace
274	[BUG]  [BUGGY]  Integer  ir  =  token.intValue()  *  2;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  ir  =  token.intValue()  *  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  ir  =  token.intValue()  *  2;	  Integer    ir    =    token.intValue();    	non-compiled	[CE]  ')'  expected	5	None	replace
275	[BUG]  [BUGGY]  Integer  ir  =  token.intValue()  -  1;  [CE]  ')'  expected  [FE]                                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  ir  =  token.intValue()  -  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  ir  =  token.intValue()  -  1;	  Integer    ir    =    token.intValue();    	non-compiled	[CE]  ')'  expected	5	None	replace
276	[BUG]  [BUGGY]  Integer  ir  =  token.intValue()  *  1;  [CE]  ')'  expected  [FE]                                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  ir  =  token.intValue()  *  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  ir  =  token.intValue()  *  1;	  Integer    ir    =    token.intValue();    	non-compiled	[CE]  ')'  expected	5	None	replace
277	[BUG]  [BUGGY]  int  ir  =  token.intValue();  [CE]  ')'  expected  [FE]                                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  int  ir  =  token.intValue();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	int  ir  =  token.intValue();	  Integer    ir    =    token.intValue();    	non-compiled	[CE]  ')'  expected	5	None	replace
278	[BUG]  [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CATCH  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	81	None	replace
279	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
280	[BUG]  [BUGGY]  if(token!=  Token.ERROR  ||  token!=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  ||  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  ||  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	30	None	replace
281	[BUG]  [BUGGY]  if(token!=  Token.EMPTY  ||  token!=  Token.EOF)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EMPTY  ||  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY  ||  token!=  Token.EOF)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	66	None	replace
282	[BUG]  [BUGGY]  if(token!=  Token.ERROR  ||  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  ||  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  ||  token!=  Token.EOL)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	66	None	replace
283	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token!=  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
284	[BUG]  [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  &&  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
285	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token  ==  Token.EXPR_RESULT)  {	  if(token    ==    Token.EXPR_RESULT    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
286	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  fileLevelJsDocBuilder);  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  fileLevelJsDocBuilder);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  fileLevelJsDocBuilder);  break;	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    break;    	non-compiled	[CE]  ')'  expected	76	None	replace
287	[BUG]  [BUGGY]  if(token!=  Token.START)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.START)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.START)  {  switch(token)  {	  if(token!=    Token.ERROR)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	27	None	replace
288	[BUG]  [BUGGY]  if(token!=  null  &&  token  ==  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  &&  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  ==  Token.NAME)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
289	[BUG]  [BUGGY]  if(token!=  null  &&  token  >=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  &&  token  >=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  >=  Token.NAME)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	79	None	replace
290	[BUG]  [BUGGY]  if(token  >=  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  >=  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
291	[BUG]  [BUGGY]  JsDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token);	  JSDocInfo    fileOverviewInfo    =    createFileOverviewInfo(token);    	non-compiled	[CE]  ')'  expected	4	None	replace
292	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
293	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
294	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.EOL)  {	  if(token    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	82	None	replace
295	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverview(token);  break;  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverview(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverview(token);  break;	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  ')'  expected	78	None	replace
296	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInformation(token);  break;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInformation(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInformation(token);  break;	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  ')'  expected	78	None	replace
297	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  transform(token);  break;  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  transform(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  transform(token);  break;	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  ')'  expected	78	None	replace
298	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  convertToken(token);  break;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  convertToken(token);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  convertToken(token);  break;	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  ')'  expected	78	None	replace
299	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	50	None	replace
300	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.NAME  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.NAME  ==  Token.NAME)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  ')'  expected	45	None	replace
301	[BUG]  [BUGGY]  if(Token.NAME  ==  name)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.NAME  ==  name)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.NAME  ==  name)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  ')'  expected	45	None	replace
302	[BUG]  [BUGGY]  if(Token.NAME  ==  Token.EOF)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.NAME  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.NAME  ==  Token.EOF)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  	45	None	replace
303	[BUG]  [BUGGY]  if(token  >=  Token.NAME  ||  token!=  Token.CALL)  {  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  >=  Token.NAME  ||  token!=  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME  ||  token!=  Token.CALL)  {	  if(token!=    Token.NAME    ||    token!=    Token.CALL)    {    	non-compiled	[CE]  	65	None	replace
304	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EOL)  {  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.EOL)  {	  if(token!=    Token.NAME    ||    token!=    Token.CALL)    {    	non-compiled	[CE]  	65	None	replace
305	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token!=  Token.EOF)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token!=  Token.EOF)  {	  if(token    ==    Token.EOL    ||    token!=    Token.EOF)    {    	non-compiled	[CE]  	16	None	replace
306	[BUG]  [BUGGY]  if(token  ==  Token.NAME  &&  token  <=  Token.CATCH)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  &&  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  	61	None	replace
307	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.CATCH)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token!=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token!=  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  	61	None	replace
308	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.CATCH)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  >=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  >=  Token.CATCH)  {	  if(token!=    Token.NAME    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  	61	None	replace
309	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.GETELEM)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.GETELEM)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.GETELEM)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.GETPROP)    {    	non-compiled	[CE]  	47	None	replace
310	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.CATCH)  {  [CE]  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.CATCH)  {	  if(token    ==    Token.EOF    ||    token    ==    Token.CATCH)    {    	non-compiled	[CE]  	70	None	replace
311	[BUG]  [BUGGY]  Integer  ir  =  token.intValue()  +  2;  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Integer  ir  =  token.intValue()  +  2;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  ir  =  token.intValue()  +  2;	  Integer    ir    =    token.intValue();    	non-compiled	[CE]  ')'  expected	5	None	replace
312	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo()  +  token;  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo()  +  token;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo()  +  token;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    	non-compiled	[CE]  ')'  expected	7	None	replace
313	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP  ||  token  ==  Token.GETELEM)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP  ||  token  ==  Token.GETELEM)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP  ||  token  ==  Token.GETELEM)  {	  if(token    ==    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	39	None	replace
314	[BUG]  [BUGGY]  if(Token.EOL  ==  token)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.EOL  ==  token)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.EOL  ==  token)  {  switch(token)  {	  if(Token.EOL!=    token)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
315	[BUG]  [BUGGY]  if(token!=  TOKEN)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  TOKEN)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  TOKEN)  {  switch(token)  {	  if(Token.EOL!=    token)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	52	None	replace
316	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token  +  1);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token  +  1);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token  +  1);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
317	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(sourceName);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(sourceName);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(sourceName);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
318	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(Token.GETPROP);  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(Token.GETPROP);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(Token.GETPROP);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
319	[BUG]  [BUGGY]  if(token  ==  Token.NAME  &&  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  &&  token  <=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  &&  token  <=  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
320	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  >=  Token.EOL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token  >=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  >=  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
321	[BUG]  [BUGGY]  if(token  ==  Token.GETELEM)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETELEM)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETELEM)  {  switch(token)  {	  if(token    ==    Token.GETPROP)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	20	None	replace
322	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(0);  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(0);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(0);	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
323	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  token;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  token;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  token;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
324	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  1;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  1;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
325	[BUG]  [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CATCH  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	81	None	replace
326	[BUG]  [BUGGY]  if(Token.ERROR!=  token)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.ERROR!=  token)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.ERROR!=  token)  {  switch(token)  {	  if(Token.EOF!=    token)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	40	None	replace
327	[BUG]  [BUGGY]  if(Token.NAME!=  token)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.NAME!=  token)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.NAME!=  token)  {  switch(token)  {	  if(token!=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
328	[BUG]  [BUGGY]  if(token!=  Token.NAME)  {  switch(Token.ERROR)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME)  {  switch(Token.ERROR)  {	  if(token!=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
329	[BUG]  [BUGGY]  if(Token.EMPTY!=  Token.NAME)  {  switch(token)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.EMPTY!=  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.EMPTY!=  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EMPTY)    {    switch(token)    {    	non-compiled	[CE]  	29	None	replace
330	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.intern();  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.intern();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.intern();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  	6	None	replace
331	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.getSourceName();  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.getSourceName();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.getSourceName();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
332	[BUG]  [BUGGY]  if(token  ==  null)  {  switch(Token.ERROR)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  null)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  null)  {  switch(Token.ERROR)  {	  if(token    ==    null)    {    switch(token)    {    	non-compiled	[CE]  	31	None	replace
333	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token!=  Token.FUNCTION)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token!=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token!=  Token.FUNCTION)  {	  if(token    ==    Token.EOF    ||    token!=    Token.FUNCTION)    {    	non-compiled	[CE]  	22	None	replace
334	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token)+  1;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token)+  1;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token)+  1;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    	non-compiled	[CE]  	1	None	replace
335	[BUG]  [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    	non-compiled	[CE]  	1	None	replace
336	[BUG]  [BUGGY]  if(token!=  Token.STRING  &&  token!=  Token.EOF)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.STRING  &&  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.STRING  &&  token!=  Token.EOF)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  	68	None	replace
337	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.STRING)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  <=  Token.STRING)  {	  if(token!=    Token.EOF    &&    token    <=    Token.STRING)    {    	non-compiled	[CE]  	68	None	replace
338	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.STRING)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token  ==  Token.STRING)  {	  if(token    ==    Token.EMPTY)    {    	non-compiled	[CE]  	10	None	replace
339	[BUG]  [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.NAME  ||  token  ==  Token.EOF)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CALL  ||  token  ==  Token.NAME  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL  ||  token  ==  Token.NAME  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  	49	None	replace
340	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.EMPTY)  {	  if(token!=    Token.NAME    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	64	None	replace
341	[BUG]  [BUGGY]  if(token  >=  Token.NAME  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  >=  Token.NAME  ||  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME  ||  token  ==  Token.EOL)  {	  if(token!=    Token.NAME    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	64	None	replace
342	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token!=  Token.CATCH)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
343	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  ==  Token.CATCH)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
344	[BUG]  [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  &&  token  <=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
345	[BUG]  [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  &&  token  <=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
346	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOF)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOF)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.EOF)  {  switch(Token.EOF)  {	  if(token    ==    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	34	None	replace
347	[BUG]  [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.ERROR)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  ||  token  ==  Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  ||  token  ==  Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  ')'  expected	41	None	replace
348	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY)  {  return  Token.EMPTY;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY)  {  return  Token.EMPTY;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY)  {  return  Token.EMPTY;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
349	[BUG]  [BUGGY]  if(token!=  Token.EOL)  {  return  Token.EOL;  }  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL)  {  return  Token.EOL;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL)  {  return  Token.EOL;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
350	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.STRING)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.STRING)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.STRING)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.START)    {    	non-compiled	[CE]  ')'  expected	48	None	replace
351	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fnNode.get(token);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fnNode.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.fnNode.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  ')'  expected	3	None	replace
352	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.names.get(token);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.names.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.names.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  ')'  expected	3	None	replace
353	[BUG]  [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOF  &&  token  <=  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  &&  token  <=  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  ')'  expected	69	None	replace
354	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.EOL)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
355	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  switch(Token.ERROR)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EXPR_RESULT)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	19	None	replace
356	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  null);  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  null);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  null);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
357	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.FOR);  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.FOR);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(Token.FOR);	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    	non-compiled	[CE]  ')'  expected	2	None	replace
358	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY  ||  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY  ||  token  ==  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.EMPTY)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	25	None	replace
359	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_TYPE)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_TYPE)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_TYPE)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
360	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(0);  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(0);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder(0);  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
361	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  1;  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  1;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder()  +  1;  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
362	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token!=  Token.EOL)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
363	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.EOF)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token!=  Token.EOF)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
364	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  ==  Token.EOF)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
365	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.EOL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  >=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  >=  Token.EOL)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
366	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.GETELEM)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.GETELEM)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.GETELEM)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
367	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.GETELEM)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.GETELEM)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.GETELEM)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
368	[BUG]  [BUGGY]  if(token  >=  Token.NAME  ||  token!=  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  >=  Token.NAME  ||  token!=  Token.GETPROP)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME  ||  token!=  Token.GETPROP)  {	  if(token!=    Token.NAME    ||    token!=    Token.GETPROP)    {    	non-compiled	[CE]  ')'  expected	44	None	replace
369	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  null);  break;  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  null);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token,  null);  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo(token);    break;    	non-compiled	[CE]  ')'  expected	55	None	replace
370	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
371	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token!=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
372	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  ==  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
373	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  >=  Token.NAME)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  >=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  >=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
374	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.NAME)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  ==  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	60	None	replace
375	[BUG]  [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	73	None	replace
376	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.VAR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.VAR)  {	  if(token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
377	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.CALL)  {	  if(token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	14	None	replace
378	[BUG]  [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  &&  token  <=  Token.NAME)  {	  if(token!=    Token.ERROR)    {    	non-compiled	[CE]  ')'  expected	18	None	replace
379	[BUG]  [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.FUNCTION)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.ERROR  &&  token  <=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR  &&  token  <=  Token.FUNCTION)  {	  if(token!=    Token.ERROR)    {    	non-compiled	[CE]  	18	None	replace
380	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token)+  1;  break;  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token)+  1;  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getPositionInformation(token)+  1;  break;	  JSDocInfo    fileOverviewInfo    =    getPositionInformation(token);    break;    	non-compiled	[CE]  	78	None	replace
381	[BUG]  [BUGGY]  if(Token.EOF!=  token)  {  switch(Token.ERROR)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.EOF!=  token)  {  switch(Token.ERROR)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.EOF!=  token)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(Token.ERROR)    {    	non-compiled	[CE]  	41	None	replace
382	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	42	None	replace
383	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOC)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOC)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.EOC)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	42	None	replace
384	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EOL)  {  switch(token)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token!=  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  	42	None	replace
385	[BUG]  [BUGGY]  if(token  ==  Token.CATCH  ||  token!=  Token.EXPR_RESULT)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CATCH  ||  token!=  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CATCH  ||  token!=  Token.EXPR_RESULT)  {	  if(token    ==    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  	15	None	replace
386	[BUG]  [BUGGY]  Node  fileOverviewInfo  =  getFileOverviewInfo();  break;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  Node  fileOverviewInfo  =  getFileOverviewInfo();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Node  fileOverviewInfo  =  getFileOverviewInfo();  break;	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    break;    	non-compiled	[CE]  	75	None	replace
387	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.parents.get(token);  [CE]  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.parents.get(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)this.parents.get(token);	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)tokens.get(token);    	non-compiled	[CE]  	3	None	replace
388	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.FUNCTION)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.FUNCTION)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  	45	None	replace
389	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.TOKEN)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.TOKEN)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.TOKEN)  {	  if(Token.NAME!=    token)    {    	non-compiled	[CE]  	45	None	replace
390	[BUG]  [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.FUNCTION)  {  switch(token)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.ERROR  ||  token  ==  Token.FUNCTION)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR  ||  token  ==  Token.FUNCTION)  {  switch(token)  {	  if(token    ==    Token.ERROR)    {    switch(token)    {    	non-compiled	[CE]  	24	None	replace
391	[BUG]  [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CATCH  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  	80	None	replace
392	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.CALL)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.CALL)  {	  if(token    ==    Token.CALL)    {    	non-compiled	[CE]  	82	None	replace
393	[BUG]  [BUGGY]  if(token!=  Token.CALL)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CALL)  {	  if(token    ==    Token.CALL)    {    	non-compiled	[CE]  	82	None	replace
394	[BUG]  [BUGGY]  if(token!=  null  &&  token  <  Token.EOF)  {  switch(Token.EOF)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  &&  token  <  Token.EOF)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  <  Token.EOF)  {  switch(Token.EOF)  {	  if(token!=    null)    {    switch(Token.EOF)    {    	non-compiled	[CE]  	32	None	replace
395	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.SCRIPT)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.SCRIPT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  <=  Token.SCRIPT)  {	  if(token!=    Token.EOF    &&    token    <=    Token.SCRIPT)    {    	non-compiled	[CE]  	69	None	replace
396	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.EOF)  {  switch(token)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token!=  Token.EOF)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  	30	None	replace
397	[BUG]  [BUGGY]  if(token!=  null  &&  token  <=  Token.NAME  ||  token  >=  Token.CATCH)  {  switch(token)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  &&  token  <=  Token.NAME  ||  token  >=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  <=  Token.NAME  ||  token  >=  Token.CATCH)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  	79	None	replace
398	[BUG]  [BUGGY]  if(token!=  null  &&  token  <=  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  null  &&  token  <=  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  <=  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token!=    null    &&    token    <=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  	79	None	replace
399	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP  &&  token  <=  Token.NAME)  {  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.GETPROP  &&  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP  &&  token  <=  Token.NAME)  {	  if(token    ==    Token.GETPROP)    {    	non-compiled	[CE]  	39	None	replace
400	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.FUNCTION)  {  switch(token)  {  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.FUNCTION)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.FUNCTION)  {  switch(token)  {	  if(token    ==    Token.EXPR_RESULT)    {    switch(token)    {    	non-compiled	[CE]  	19	None	replace
401	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {  switch(token)  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {  switch(token)  {	  if(token    ==    Token.EXPR_RESULT)    {    switch(token)    {    	non-compiled	[CE]  	19	None	replace
402	[BUG]  [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.EOF)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CATCH  &&  token!=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CATCH  &&  token!=  Token.EOF)  {	  if(token!=    Token.EOF    &&    token    <=    Token.CATCH)    {    	non-compiled	[CE]  ')'  expected	67	None	replace
403	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JsDocInfo)token.clone();  [CE]  ')'  expected  [FE]                                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JsDocInfo)token.clone();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JsDocInfo)token.clone();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
404	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.removeFirst();  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.removeFirst();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.removeFirst();	  JSDocInfo    fileOverviewInfo    =(JSDocInfo)token.clone();    	non-compiled	[CE]  ')'  expected	6	None	replace
405	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  fileTypeJsDocBuilder);  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  fileTypeJsDocBuilder);  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token,  fileTypeJsDocBuilder);  break;	  JSDocInfo    fileOverviewInfo    =    new    JSDocInfo(token);    break;    	non-compiled	[CE]  ')'  expected	76	None	replace
406	[BUG]  [BUGGY]  if(Token.NAME  ==  token  ||  token!=  Token.CALL)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.NAME  ==  token  ||  token!=  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.NAME  ==  token  ||  token!=  Token.CALL)  {	  if(token!=    Token.NAME    ||    token!=    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	65	None	replace
407	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.ASSIGN)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.ASSIGN)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.ASSIGN)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
408	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.NAME)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
409	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.EMPTY)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
410	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.FUNCTION)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.FUNCTION)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
411	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.EOF)  {  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT  &&  token  <=  Token.EOF)  {	  if(token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
412	[BUG]  [BUGGY]  if(token!=  Token.EMPTY  ||  token!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EMPTY  ||  token!=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY  ||  token!=  Token.NAME)  {	  if(token!=    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	17	None	replace
413	[BUG]  [BUGGY]  if(token!=  Token.EMPTY  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EMPTY  ||  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY  ||  token  ==  Token.NAME)  {	  if(token!=    Token.EMPTY)    {    	non-compiled	[CE]  ')'  expected	17	None	replace
414	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOC)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOC)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EOC)  {  switch(token)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	57	None	replace
415	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.EOL)  {  switch(token)  {	  if(token!=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
416	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  <=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	58	None	replace
417	[BUG]  [BUGGY]  if(Token.EOF!=  token)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(Token.EOF!=  token)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.EOF!=  token)  {  switch(Token.EOF)  {	  if(token!=    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	28	None	replace
418	[BUG]  [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  &&  token  <=  Token.NAME)  {	  if(token!=    Token.EOL    &&    token    <=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	72	None	replace
419	[BUG]  [BUGGY]  if(token  ==  Token.NAME  &&  token!=  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  &&  token!=  Token.EOL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  &&  token!=  Token.EOL)  {	  if(token!=    Token.NAME    &&    token    <=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	62	None	replace
420	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  createFormatter(token);  [CE]  ')'  expected  [FE]                              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  createFormatter(token);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  createFormatter(token);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
421	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  true);  [CE]  ')'  expected  [FE]                                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  true);  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token,  true);	  JSDocInfo    fileLevelJsDocBuilder    =    getFormatter(token);    	non-compiled	[CE]  ')'  expected	56	None	replace
422	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getToken();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getToken();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getToken();	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
423	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilderInstance();  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilderInstance();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilderInstance();	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    	non-compiled	[CE]  ')'  expected	53	None	replace
424	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfoForToken();  [CE]  ')'  expected  [FE]                                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfoForToken();  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfoForToken();	  JSDocInfo    fileOverviewInfo    =    getFileOverviewInfo();    	non-compiled	[CE]  ')'  expected	7	None	replace
425	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  ==  Token.EOF)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
426	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOF  &&  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  ==  Token.EOL)  {  switch(token)  {	  if(token!=    Token.EOL    ||    token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
427	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EOL  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	83	None	replace
428	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EMPTY)  {  switch(Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY)  {  switch(Token.EOF)  {	  if(token    ==    Token.EOF)    {    switch(Token.EOF)    {    	non-compiled	[CE]  ')'  expected	34	None	replace
429	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token!=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token!=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
430	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.EOL  &&  token  ==  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  ==  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL    &&    token    <=    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	59	None	replace
431	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  &&  token  ==  Token.CALL)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  ==  Token.CALL)  {	  if(token!=    Token.NAME    ||    token    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	63	None	replace
432	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.COMMA)  {  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.COMMA)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.COMMA)  {	  if(token!=    Token.NAME    ||    token    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	63	None	replace
433	[BUG]  [BUGGY]  if(token!=  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CATCH)  {  switch(token)  {	  if(token    ==    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	81	None	replace
434	[BUG]  [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.CATCH  ||  token  ==  Token.CATCH)  {  switch(token)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CATCH  ||  token  ==  Token.CATCH)  {  switch(token)  {	  if(token    ==    Token.CATCH)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	81	None	replace
435	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME  ||  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME  ||  token  ==  Token.CATCH)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.NAME  ||  token  ==  Token.CATCH)  {	  if(token    ==    Token.EOL    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
436	[BUG]  [BUGGY]  if(token  ==  Token.NAME)  {  return  Token.EOL;  }  [CE]  ')'  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME)  {  return  Token.EOL;  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME)  {  return  Token.EOL;  }	  if(token    ==    Token.EOL)    {    return    Token.EOL;    }    	non-compiled	[CE]  ')'  expected	77	None	replace
437	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  &&  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EXPR_RESULT  &&  token  ==  Token.NAME)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  &&  token  ==  Token.NAME)  {	  if(token    ==    Token.EXPR_RESULT    ||    token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	38	None	replace
438	[BUG]  [BUGGY]  JsDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  JsDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JsDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;	  JSDocInfo    fileLevelJsDocBuilder    =    getFileLevelJsDocBuilder();    break;    	non-compiled	[CE]  ')'  expected	54	None	replace
439	[BUG]  [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.EOF)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  &&  token  <=  Token.EOF)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  &&  token  <=  Token.EOF)  {	  if(token!=    Token.EOL    &&    token    <=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	74	None	replace
440	[BUG]  [BUGGY]  if(token!=  Token.CALL  ||  token!=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token!=  Token.CALL  ||  token!=  Token.EXPR_RESULT)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.CALL  ||  token!=  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME    ||    token!=    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	43	None	replace
441	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token);  }  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token);  }	  if(token    ==    Token.EOL    ||    token    ==    Token.TOKENS)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	71	None	replace
442	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
443	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.ASSIGN)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  int  transformTokenType(int  token)  {      [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.ASSIGN)  {  [BUGGY]      case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT  ||  token  ==  Token.ASSIGN)  {	  if(token    ==    Token.NAME    ||    token    ==    Token.EXPR_RESULT)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
