bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);	      	non-compiled	[CE]  ')'  expected	7	None	replace
2	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);	      	non-compiled	[CE]  	7	None	replace
3	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)tokens.get(token);  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)tokens.get(token);  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)tokens.get(token);	      	non-compiled	[CE]  ')'  expected	7	None	replace
4	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token);  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token);  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  createFileOverviewInfo(token);	      	non-compiled	[CE]  ')'  expected	7	None	replace
5	[BUG]  [BUGGY]  Integer  ir  =  token.intValue();  [CE]  ')'  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  Integer  ir  =  token.intValue();  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	Integer  ir  =  token.intValue();	      	non-compiled	[CE]  ')'  expected	7	None	replace
6	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.clone();  [CE]  ')'  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.clone();  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =(JSDocInfo)token.clone();	      	non-compiled	[CE]  ')'  expected	7	None	replace
7	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  [CE]  ')'  expected  [FE]                                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo();	      	non-compiled	[CE]  ')'  expected	7	None	replace
8	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
9	[BUG]  [BUGGY]  if(token  ==  Token.ERROR)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.ERROR)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR)  {	  if(token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
10	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EMPTY)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY)  {	  if(token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
11	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
12	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EMPTY)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EMPTY)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.EMPTY)  {	  if(token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
13	[BUG]  [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EXPR_RESULT)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
14	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
15	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
16	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EOF)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token!=  Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token!=  Token.EOF)  {	  if(token!=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
17	[BUG]  [BUGGY]  if(token!=  Token.EMPTY)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EMPTY)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY)  {	  if(token!=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
18	[BUG]  [BUGGY]  if(token!=  Token.ERROR)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.ERROR)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR)  {	  if(token!=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
19	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EXPR_RESULT)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT)  {  switch(token)  {	  if(token    ==    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
20	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.GETPROP)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP)  {  switch(token)  {	  if(token    ==    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
21	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
22	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOF  ||  token!=  Token.FUNCTION)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token!=  Token.FUNCTION)  {	  if(token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
23	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
24	[BUG]  [BUGGY]  if(token  ==  Token.ERROR)  {  switch(token)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.ERROR)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.ERROR)  {  switch(token)  {	  if(token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
25	[BUG]  [BUGGY]  if(token  ==  Token.EMPTY)  {  switch(token)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EMPTY)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EMPTY)  {  switch(token)  {	  if(token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
26	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
27	[BUG]  [BUGGY]  if(token!=  Token.ERROR)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.ERROR)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.ERROR)  {  switch(token)  {	  if(token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
28	[BUG]  [BUGGY]  if(token!=  Token.EOF)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOF)  {  switch(Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF)  {  switch(Token.EOF)  {	  if(token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
29	[BUG]  [BUGGY]  if(token!=  Token.EMPTY)  {  switch(token)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EMPTY)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EMPTY)  {  switch(token)  {	  if(token!=    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
30	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token!=  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  ||  token!=  Token.EOF)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token!=  Token.EOF)  {  switch(token)  {	  if(token!=    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
31	[BUG]  [BUGGY]  if(token  ==  null)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  null)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  null)  {  switch(token)  {	  if(token!=    null)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
32	[BUG]  [BUGGY]  if(token!=  null)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  null)  {  switch(Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null)  {  switch(Token.EOF)  {	  if(token!=    null)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
33	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOF)  {  switch(token)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOF)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.EOF)  {  switch(token)  {	  if(token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
34	[BUG]  [BUGGY]  if(token  ==  Token.EOF)  {  switch(Token.EOF)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOF)  {  switch(Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF)  {  switch(Token.EOF)  {	  if(token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
35	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.FUNCTION)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
36	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.EOL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.EOL)  {	  if(token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
37	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EXPR_RESULT)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
38	[BUG]  [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.NAME)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EXPR_RESULT  ||  token  ==  Token.NAME)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
39	[BUG]  [BUGGY]  if(token  ==  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.GETPROP)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.GETPROP)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
40	[BUG]  [BUGGY]  if(Token.EOF!=  token)  {  switch(token)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(Token.EOF!=  token)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.EOF!=  token)  {  switch(token)  {	  if(token!=    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
41	[BUG]  [BUGGY]  if(token  ==  Token.EOF)  {  switch(Token.ERROR)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOF)  {  switch(Token.ERROR)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF)  {  switch(Token.ERROR)  {	  if(token    ==    Token.EOF)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
42	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
43	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.EXPR_RESULT)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
44	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.GETPROP)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.GETPROP)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
45	[BUG]  [BUGGY]  if(Token.NAME!=  token)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(Token.NAME!=  token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.NAME!=  token)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
46	[BUG]  [BUGGY]  if(token  >=  Token.NAME)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  >=  Token.NAME)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  >=  Token.NAME)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
47	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.GETPROP)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.GETPROP)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.GETPROP)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
48	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.START)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.START)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.START)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
49	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOF)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EOF)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
50	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.CALL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.CALL)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
51	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.FUNCTION)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.FUNCTION)  {	  if(token    ==    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
52	[BUG]  [BUGGY]  if(Token.EOL!=  token)  {  switch(token)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(Token.EOL!=  token)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(Token.EOL!=  token)  {  switch(token)  {	  if(token!=    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
53	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();	      	non-compiled	[CE]  ')'  expected	7	None	replace
54	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  break;	      	non-compiled	[CE]  ')'  expected	7	None	replace
55	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo(token);  break;	      	non-compiled	[CE]  ')'  expected	7	None	replace
56	[BUG]  [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token);  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token);  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileLevelJsDocBuilder  =  getFormatter(token);	      	non-compiled	[CE]  ')'  expected	7	None	replace
57	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EOL)  {  switch(token)  {	  if(token    ==    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
58	[BUG]  [BUGGY]  if(token!=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME)  {  switch(token)  {	  if(token    ==    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
59	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.CATCH)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  <=  Token.CATCH)  {  switch(token)  {	  if(token!=    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
60	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
61	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.CATCH)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
62	[BUG]  [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.EOL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME  &&  token  <=  Token.EOL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  &&  token  <=  Token.EOL)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
63	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.CALL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.CALL)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
64	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME  ||  token  ==  Token.EOL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token  ==  Token.EOL)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
65	[BUG]  [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.CALL)  {  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.NAME  ||  token!=  Token.CALL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.NAME  ||  token!=  Token.CALL)  {	  if(token!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	12	None	replace
66	[BUG]  [BUGGY]  if(token!=  Token.EOL  ||  token!=  Token.EOF)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  ||  token!=  Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  ||  token!=  Token.EOF)  {	  if(token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
67	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.CATCH)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
68	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.STRING)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.STRING)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  <=  Token.STRING)  {	  if(token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
69	[BUG]  [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.SCRIPT)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOF  &&  token  <=  Token.SCRIPT)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOF  &&  token  <=  Token.SCRIPT)  {	  if(token!=    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	10	None	replace
70	[BUG]  [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.CATCH)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOF  ||  token  ==  Token.CATCH)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOF  ||  token  ==  Token.CATCH)  {	  if(token    ==    Token.EOF)    {    	non-compiled	[CE]  ')'  expected	11	None	replace
71	[BUG]  [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.EOL)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
72	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.NAME)  {  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.NAME)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  <=  Token.NAME)  {	  if(token!=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
73	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.CATCH)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.CATCH)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  <=  Token.CATCH)  {	  if(token!=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
74	[BUG]  [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.EOF)  {  [CE]  ')'  expected  [FE]              AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  Token.EOL  &&  token  <=  Token.EOF)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  Token.EOL  &&  token  <=  Token.EOF)  {	  if(token!=    Token.EOL)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
75	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  break;  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  break;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getFileOverviewInfo();  break;	      	non-compiled	[CE]  ')'  expected	7	None	replace
76	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  break;  [CE]  ')'  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  break;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  new  JSDocInfo(token);  break;	      	non-compiled	[CE]  ')'  expected	7	None	replace
77	[BUG]  [BUGGY]  if(token  ==  Token.EOL)  {  return  Token.EOL;  }  [CE]  ')'  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.EOL)  {  return  Token.EOL;  }  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.EOL)  {  return  Token.EOL;  }	      	non-compiled	[CE]  ')'  expected	7	None	replace
78	[BUG]  [BUGGY]  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  break;  [CE]  ')'  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  break;  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	JSDocInfo  fileOverviewInfo  =  getPositionInformation(token);  break;	      	non-compiled	[CE]  ')'  expected	7	None	replace
79	[BUG]  [BUGGY]  if(token!=  null  &&  token  <=  Token.NAME)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token!=  null  &&  token  <=  Token.NAME)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token!=  null  &&  token  <=  Token.NAME)  {  switch(token)  {	  if(token!=    null)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
80	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [CE]  ')'  expected  [FE]                AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.TOKENS)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.TOKENS)  {  switch(token)  {	  if(token    ==    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
81	[BUG]  [BUGGY]  if(token  ==  Token.CATCH)  {  switch(token)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.CATCH)  {  switch(token)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CATCH)  {  switch(token)  {	  if(token    ==    Token.NAME)    {    switch(token)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
82	[BUG]  [BUGGY]  if(token  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.CALL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.CALL)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
83	[BUG]  [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOL)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  static  int  transformTokenType(int  token)  {    [BUGGY]  if(token  ==  Token.NAME  ||  token  ==  Token.EOL)  {  [BUGGY]    case  com.google.javascript.jscomp.mozilla.rhino.Token.ERROR:  return  Token.ERROR;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOF:  return  Token.EOF;  case  com.google.javascript.jscomp.mozilla.rhino.Token.EOL:  return  Token.EOL;  case  com.google.javascript.jscomp.mozilla.rhino.Token.ENTERWITH:  return  Token.ENTERWITH;  case  com.google.javascript.jscomp.mozilla.rhino.Token.LEAVEWITH:  return  Token.LEAVEWITH;  [CLASS]  IRFactory  TransformDispatcher  [METHOD]  transformTokenType  [RETURN_TYPE]  int  int  token  [VARIABLES]  ErrorReporter  errorReporter  Set  ALLOWED_DIRECTIVES  directives  boolean  Config  config  Node  assign  block  bodyNode  c  child  cur  flagsNode  fnNode  irNode  key  labelName  literalStringNode  lp  n  newBlock  newName  node  operand  prev  ret  rootNodeJsDocHolder  target  templateNode  value  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  comment  directive  flags  msg  sourceName  sourceString  TransformDispatcher  transformDispatcher  JSDocInfo  fileOverviewInfo  jsDocInfo  int  token  	projects/Closure81/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.14744195615489714	942	942	1	replace	if(token  ==  Token.NAME  ||  token  ==  Token.EOL)  {	  if(token    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
